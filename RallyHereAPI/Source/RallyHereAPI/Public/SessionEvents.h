// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "SessionEvent.h"
#include "SessionEvents.generated.h"

/** @defgroup RHAPI_SessionEvents RallyHere API Model SessionEvents
 *  @{
 */

/**
 * @brief A list of events that occurred in a session
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_SessionEvents : public FRHAPI_Model
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief A list of the events that have occurred in a given session */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<FRHAPI_SessionEvent> Events_Optional{  };
    /** @brief true if Events_Optional has been set to a value */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Events_IsSet{ false };
    /** @brief Gets the value of Events_Optional, regardless of it having been set */
    TArray<FRHAPI_SessionEvent>& GetEvents() { return Events_Optional; }
    /** @brief Gets the value of Events_Optional, regardless of it having been set */
    const TArray<FRHAPI_SessionEvent>& GetEvents() const { return Events_Optional; }
    /** @brief Gets the value of Events_Optional, if it has been set, otherwise it returns DefaultValue */
    const TArray<FRHAPI_SessionEvent>& GetEvents(const TArray<FRHAPI_SessionEvent>& DefaultValue) const { if (Events_IsSet) return Events_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of Events_Optional and returns true if it has been set, otherwise returns false */
    bool GetEvents(TArray<FRHAPI_SessionEvent>& OutValue) const { if (Events_IsSet) OutValue = Events_Optional; return Events_IsSet; }
    /** @brief Returns a pointer to Events_Optional, if it has been set, otherwise returns nullptr */
    TArray<FRHAPI_SessionEvent>* GetEventsOrNull() { if (Events_IsSet) return &Events_Optional; return nullptr; }
    /** @brief Returns a pointer to Events_Optional, if it has been set, otherwise returns nullptr */
    const TArray<FRHAPI_SessionEvent>* GetEventsOrNull() const { if (Events_IsSet) return &Events_Optional; return nullptr; }
    /** @brief Sets the value of Events_Optional and also sets Events_IsSet to true */
    void SetEvents(TArray<FRHAPI_SessionEvent> NewValue) { Events_Optional = NewValue; Events_IsSet = true; }
     /** @brief Clears the value of Events_Optional and sets Events_IsSet to false */
    void ClearEvents() { Events_IsSet = false; }
};

/** @} */
