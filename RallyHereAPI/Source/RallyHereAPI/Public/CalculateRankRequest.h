// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "CalculateRankConfig.h"
#include "RankedTeam.h"
#include "CalculateRankRequest.generated.h"

/** @defgroup RHAPI_CalculateRankRequest RallyHere API Model CalculateRankRequest
 *  @{
 */

/**
 * @brief A request body to calculate players&#39; rankings, and return the results. Player ranks will not be updated
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_CalculateRankRequest : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	/** @brief How many seconds the match lasted */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	int32 MatchLengthSeconds{ 0 };
	/** @brief Gets the value of MatchLengthSeconds */
	FORCEINLINE int32& GetMatchLengthSeconds() { return MatchLengthSeconds; }
	/** @brief Gets the value of MatchLengthSeconds */
	FORCEINLINE const int32& GetMatchLengthSeconds() const { return MatchLengthSeconds; }
	/** @brief Sets the value of MatchLengthSeconds */
	FORCEINLINE void SetMatchLengthSeconds(const int32& NewValue) { MatchLengthSeconds = NewValue;   }
	/** @brief Sets the value of MatchLengthSeconds using move semantics */
	FORCEINLINE void SetMatchLengthSeconds(int32&& NewValue) { MatchLengthSeconds = NewValue;   }
	/** @brief Returns the default value of MatchLengthSeconds */
	FORCEINLINE int32 GetDefaultValue_MatchLengthSeconds() { return 0; }

	/** @brief List of teams that participated in this match */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	TArray<FRHAPI_RankedTeam> Teams{  };
	/** @brief Gets the value of Teams */
	FORCEINLINE TArray<FRHAPI_RankedTeam>& GetTeams() { return Teams; }
	/** @brief Gets the value of Teams */
	FORCEINLINE const TArray<FRHAPI_RankedTeam>& GetTeams() const { return Teams; }
	/** @brief Sets the value of Teams */
	FORCEINLINE void SetTeams(const TArray<FRHAPI_RankedTeam>& NewValue) { Teams = NewValue;   }
	/** @brief Sets the value of Teams using move semantics */
	FORCEINLINE void SetTeams(TArray<FRHAPI_RankedTeam>&& NewValue) { Teams = NewValue;   }

	/** @brief Configs about how to recalculate and clamp newly calculated ranks */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FRHAPI_CalculateRankConfig RankConfig{  };
	/** @brief Gets the value of RankConfig */
	FORCEINLINE FRHAPI_CalculateRankConfig& GetRankConfig() { return RankConfig; }
	/** @brief Gets the value of RankConfig */
	FORCEINLINE const FRHAPI_CalculateRankConfig& GetRankConfig() const { return RankConfig; }
	/** @brief Sets the value of RankConfig */
	FORCEINLINE void SetRankConfig(const FRHAPI_CalculateRankConfig& NewValue) { RankConfig = NewValue;   }
	/** @brief Sets the value of RankConfig using move semantics */
	FORCEINLINE void SetRankConfig(FRHAPI_CalculateRankConfig&& NewValue) { RankConfig = NewValue;   }
};

/** @} */
