// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereAPIAuthContext.h"
#include "RallyHereAPIHelpers.h"
#include "DiscoveryResponse.h"

namespace RallyHereAPI
{
using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

struct FRequest_GetDiscovery;
struct FResponse_GetDiscovery;

DECLARE_DELEGATE_OneParam(FDelegate_GetDiscovery, const FResponse_GetDiscovery&);

class RALLYHEREAPI_API FDiscoveryAPI : public FAPI
{
public:
    FDiscoveryAPI();
    virtual ~FDiscoveryAPI();

    FHttpRequestPtr GetDiscovery(const FRequest_GetDiscovery& Request, const FDelegate_GetDiscovery& Delegate = FDelegate_GetDiscovery(), int32 Priority = DefaultRallyHereAPIPriority);

private:
    void OnGetDiscoveryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetDiscovery Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);

};

/* Get Discovery
 *
 * Returns the configured connection manager IPs for the game client to connect to. Deprecated as there is no longer a need for this endpoint after MCTS was removed.
*/
struct RALLYHEREAPI_API FRequest_GetDiscovery : public FRequest
{
    FRequest_GetDiscovery();
    virtual ~FRequest_GetDiscovery() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;

};

struct RALLYHEREAPI_API FResponse_GetDiscovery : public FResponse
{
    FResponse_GetDiscovery(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_GetDiscovery() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DiscoveryResponse Content;

    bool TryGetContentFor200(FRHAPI_DiscoveryResponse& OutContent) const;
};

struct RALLYHEREAPI_API Traits_GetDiscovery
{
    typedef FRequest_GetDiscovery Request;
    typedef FResponse_GetDiscovery Response;
    typedef FDelegate_GetDiscovery Delegate;
    typedef FDiscoveryAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereAPIPriority) { return InAPI.GetDiscovery(InRequest, InDelegate, Priority); }
};


}
