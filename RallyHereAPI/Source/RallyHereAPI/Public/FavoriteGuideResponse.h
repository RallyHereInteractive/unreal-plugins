// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "FavoriteGuideResponse.generated.h"

/** @defgroup RHAPI_FavoriteGuideResponse RallyHere API Model FavoriteGuideResponse
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_FavoriteGuideResponse : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FGuid GuideId{  };
	/** @brief Gets the value of GuideId */
	FORCEINLINE FGuid& GetGuideId() { return GuideId; }
	/** @brief Gets the value of GuideId */
	FORCEINLINE const FGuid& GetGuideId() const { return GuideId; }
	/** @brief Sets the value of GuideId */
	FORCEINLINE void SetGuideId(const FGuid& NewValue) { GuideId = NewValue;   }
	/** @brief Sets the value of GuideId using move semantics */
	FORCEINLINE void SetGuideId(FGuid&& NewValue) { GuideId = NewValue;   }

	/** @brief Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FDateTime FavoritedAt_Optional{  };
	/** @brief true if FavoritedAt_Optional has been set to a value */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	bool FavoritedAt_IsSet{ false };
	/** @brief true if FavoritedAt_Optional has been explicitly set to null */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	bool FavoritedAt_IsNull{ false };
	/** @brief Gets the value of FavoritedAt_Optional, regardless of it having been set */
	FORCEINLINE FDateTime& GetFavoritedAt() { return FavoritedAt_Optional; }
	/** @brief Gets the value of FavoritedAt_Optional, regardless of it having been set */
	FORCEINLINE const FDateTime& GetFavoritedAt() const { return FavoritedAt_Optional; }
	/** @brief Gets the value of FavoritedAt_Optional, if it has been set, otherwise it returns DefaultValue */
	FORCEINLINE const FDateTime& GetFavoritedAt(const FDateTime& DefaultValue) const { if (FavoritedAt_IsSet) return FavoritedAt_Optional; return DefaultValue; }
	/** @brief Fills OutValue with the value of FavoritedAt_Optional and returns true if it has been set, otherwise returns false */
	FORCEINLINE bool GetFavoritedAt(FDateTime& OutValue) const { if (FavoritedAt_IsSet && !FavoritedAt_IsNull) OutValue = FavoritedAt_Optional; return FavoritedAt_IsSet; }
	/** @brief Returns a pointer to FavoritedAt_Optional, if it has been set, otherwise returns nullptr */
	FORCEINLINE FDateTime* GetFavoritedAtOrNull() { if (FavoritedAt_IsSet) return (FavoritedAt_IsNull ? nullptr : &FavoritedAt_Optional); return nullptr; }
	/** @brief Returns a pointer to FavoritedAt_Optional, if it has been set, otherwise returns nullptr */
	FORCEINLINE const FDateTime* GetFavoritedAtOrNull() const { if (FavoritedAt_IsSet) return (FavoritedAt_IsNull ? nullptr : &FavoritedAt_Optional); return nullptr; }
	/** @brief Sets the value of FavoritedAt_Optional and also sets FavoritedAt_IsSet to true */
	FORCEINLINE void SetFavoritedAt(const FDateTime& NewValue) { FavoritedAt_Optional = NewValue; FavoritedAt_IsSet = true; FavoritedAt_IsNull = false; }
	/** @brief Sets the value of FavoritedAt_Optional and also sets FavoritedAt_IsSet to true using move semantics */
	FORCEINLINE void SetFavoritedAt(FDateTime&& NewValue) { FavoritedAt_Optional = NewValue; FavoritedAt_IsSet = true; FavoritedAt_IsNull = false; }
	/** @brief Clears the value of FavoritedAt_Optional and sets FavoritedAt_IsSet to false */
	void ClearFavoritedAt() { FavoritedAt_IsSet = false; FavoritedAt_IsNull = false; }
	/** @brief Sets the value explicitly to be treated as null */
	FORCEINLINE void SetFavoritedAtToNull() { FavoritedAt_IsSet = true; FavoritedAt_IsNull = true; }
	/** @brief Checks whether FavoritedAt_Optional is set to null */
	FORCEINLINE bool IsFavoritedAtNull() const { return FavoritedAt_IsSet && FavoritedAt_IsNull; }
};

/** @} */
