// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "LocationInner.h"
#include "ValidationError.generated.h"

/** @defgroup RHAPI_ValidationError RallyHere API Model ValidationError
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_ValidationError : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	TArray<FRHAPI_LocationInner> Loc{  };
	/** @brief Gets the value of Loc */
	FORCEINLINE TArray<FRHAPI_LocationInner>& GetLoc() { return Loc; }
	/** @brief Gets the value of Loc */
	FORCEINLINE const TArray<FRHAPI_LocationInner>& GetLoc() const { return Loc; }
	/** @brief Sets the value of Loc */
	FORCEINLINE void SetLoc(const TArray<FRHAPI_LocationInner>& NewValue) { Loc = NewValue;   }
	/** @brief Sets the value of Loc using move semantics */
	FORCEINLINE void SetLoc(TArray<FRHAPI_LocationInner>&& NewValue) { Loc = NewValue;   }

	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FString Msg{  };
	/** @brief Gets the value of Msg */
	FORCEINLINE FString& GetMsg() { return Msg; }
	/** @brief Gets the value of Msg */
	FORCEINLINE const FString& GetMsg() const { return Msg; }
	/** @brief Sets the value of Msg */
	FORCEINLINE void SetMsg(const FString& NewValue) { Msg = NewValue;   }
	/** @brief Sets the value of Msg using move semantics */
	FORCEINLINE void SetMsg(FString&& NewValue) { Msg = NewValue;   }

	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FString Type{  };
	/** @brief Gets the value of Type */
	FORCEINLINE FString& GetType() { return Type; }
	/** @brief Gets the value of Type */
	FORCEINLINE const FString& GetType() const { return Type; }
	/** @brief Sets the value of Type */
	FORCEINLINE void SetType(const FString& NewValue) { Type = NewValue;   }
	/** @brief Sets the value of Type using move semantics */
	FORCEINLINE void SetType(FString&& NewValue) { Type = NewValue;   }
};

/** @} */
