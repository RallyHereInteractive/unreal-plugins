// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereAPIAuthContext.h"
#include "RallyHereAPIHelpers.h"
#include "HzApiErrorModel.h"
#include "MarketingCampaigns.h"

namespace RallyHereAPI
{
using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

// forward declaration
class FMarketingAPI;

/**
 * @brief Get Marketing Campaigns
 * Get all marketing campaigns. There is currently no way to add Market Campaigns via API. Reach out to your Rally Here representative to add a new campaign.
*/
struct RALLYHEREAPI_API FRequest_GetMarketingCampaigns : public FRequest
{
	FRequest_GetMarketingCampaigns();
	virtual ~FRequest_GetMarketingCampaigns() = default;
	
	/** @brief Given a http request, apply data and settings from this request object to it */
	bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
	/** @brief Compute the URL path for this request instance */
	FString ComputePath() const override;
	/** @brief Get the simplified URL path for this request, not including the verb */
	FName GetSimplifiedPath() const override;
	/** @brief Get the simplified URL path for this request, including the verb */
	FName GetSimplifiedPathWithVerb() const override;
	/** @brief Get the auth context used for this request */
	TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

	/** The specified auth context to use for this request */
	TSharedPtr<FAuthContext> AuthContext;
};

/** The response type for FRequest_GetMarketingCampaigns */
struct RALLYHEREAPI_API FResponse_GetMarketingCampaigns : public FResponseAccessorTemplate<FRHAPI_MarketingCampaigns, FRHAPI_HzApiErrorModel>
{
	typedef FResponseAccessorTemplate<FRHAPI_MarketingCampaigns, FRHAPI_HzApiErrorModel> Super;

	FResponse_GetMarketingCampaigns(FRequestMetadata InRequestMetadata);
	//virtual ~FResponse_GetMarketingCampaigns() = default;
	
	/** @brief Parse out response content into local storage from a given JsonValue */
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	/** @brief Parse out header information for later usage */
	virtual bool ParseHeaders() override;
	/** @brief Gets the description of the response code */
	virtual FString GetHttpResponseCodeDescription(EHttpResponseCodes::Type InHttpResponseCode) const override;

#if ALLOW_LEGACY_RESPONSE_CONTENT
	/** Default Response Content */
	UE_DEPRECATED(5.0, "Direct use of Content is deprecated, please use TryGetDefaultContent(), TryGetContent(), TryGetResponse<>(), or TryGetContentFor<>() instead.")
	FRHAPI_MarketingCampaigns Content;
#endif //ALLOW_LEGACY_RESPONSE_CONTENT

	// Default Response Helpers
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(FRHAPI_MarketingCampaigns& OutContent) const { return TryGetContent<FRHAPI_MarketingCampaigns>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(TOptional<FRHAPI_MarketingCampaigns>& OutContent) const { return TryGetContent<FRHAPI_MarketingCampaigns>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	const FRHAPI_MarketingCampaigns* TryGetDefaultContentAsPointer() const { return TryGetContentAsPointer<FRHAPI_MarketingCampaigns>(); }
	/** @brief Attempt to retrieve the content in the default response */
	TOptional<FRHAPI_MarketingCampaigns> TryGetDefaultContentAsOptional() const { return TryGetContentAsOptional<FRHAPI_MarketingCampaigns>(); }

	// Individual Response Helpers	
	/* Response 200
	Successful Response
	*/
	bool TryGetContentFor200(FRHAPI_MarketingCampaigns& OutContent) const;

	/* Response 403
	Forbidden
	*/
	bool TryGetContentFor403(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 409
	Conflict
	*/
	bool TryGetContentFor409(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 500
	Internal Server Error
	*/
	bool TryGetContentFor500(FRHAPI_HzApiErrorModel& OutContent) const;

};

/** The delegate class for FRequest_GetMarketingCampaigns */
DECLARE_DELEGATE_OneParam(FDelegate_GetMarketingCampaigns, const FResponse_GetMarketingCampaigns&);

/** @brief A helper metadata object for GetMarketingCampaigns that defines the relationship between Request, Delegate, API, etc.  Intended for use with templating */
struct RALLYHEREAPI_API Traits_GetMarketingCampaigns
{
	/** The request type */
	typedef FRequest_GetMarketingCampaigns Request;
	/** The response type */
	typedef FResponse_GetMarketingCampaigns Response;
	/** The delegate type, triggered by the response */
	typedef FDelegate_GetMarketingCampaigns Delegate;
	/** The API object that supports this API call */
	typedef FMarketingAPI API;
	/** A human readable name for this API call */
	static FString Name;

	/**
	 * @brief A helper that uses all of the above types to initiate an API call, with a specified priority.
	 * @param [in] InAPI The API object the call will be made with
	 * @param [in] InRequest The request to submit to the API call
	 * @param [in] InDelegate An optional delegate to call when the API call completes, containing the response information
	 * @param [in] InPriority An optional priority override for the API call, for use when API calls are being throttled
	 * @return A http request object, if the call was successfully queued.
	 */
	static FHttpRequestPtr DoCall(TSharedRef<API> InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 InPriority = DefaultRallyHereAPIPriority);
};


/** The API class itself, which will handle calls to */
class RALLYHEREAPI_API FMarketingAPI : public FAPI
{
public:
	FMarketingAPI();
	virtual ~FMarketingAPI();

	FHttpRequestPtr GetMarketingCampaigns(const FRequest_GetMarketingCampaigns& Request, const FDelegate_GetMarketingCampaigns& Delegate = FDelegate_GetMarketingCampaigns(), int32 Priority = DefaultRallyHereAPIPriority);

private:
	void OnGetMarketingCampaignsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetMarketingCampaigns Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);

};



}
