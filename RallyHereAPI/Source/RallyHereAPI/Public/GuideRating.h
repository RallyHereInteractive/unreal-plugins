// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "GuideRating.generated.h"

/** @defgroup RHAPI_GuideRating RallyHere API Model GuideRating
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_GuideRating : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FGuid GuideId{  };
	/** @brief Gets the value of GuideId */
	FGuid& GetGuideId() { return GuideId; }
	/** @brief Gets the value of GuideId */
	const FGuid& GetGuideId() const { return GuideId; }
	/** @brief Sets the value of GuideId */
	void SetGuideId(const FGuid& NewValue) { GuideId = NewValue;   }
	/** @brief Sets the value of GuideId using move semantics */
	void SetGuideId(FGuid&& NewValue) { GuideId = NewValue;   }

	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	int32 Rating{ 0 };
	/** @brief Gets the value of Rating */
	int32& GetRating() { return Rating; }
	/** @brief Gets the value of Rating */
	const int32& GetRating() const { return Rating; }
	/** @brief Sets the value of Rating */
	void SetRating(const int32& NewValue) { Rating = NewValue;   }
	/** @brief Sets the value of Rating using move semantics */
	void SetRating(int32&& NewValue) { Rating = NewValue;   }
	/** @brief Returns true if Rating matches the default value */
	bool IsRatingDefaultValue() const { return Rating == 0; }
	/** @brief Sets the value of Rating to its default  */
	void SetRatingToDefault() { SetRating(0); }
};

/** @} */
