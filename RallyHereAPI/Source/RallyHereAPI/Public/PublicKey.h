// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "PublicKey.generated.h"

/** @defgroup RHAPI_PublicKey RallyHere API Model PublicKey
 *  @{
 */

/**
 * @brief Public key for verifying Access Token JWTs  This is in the JWK format as defined in https://datatracker.ietf.org/doc/html/rfc7517#section-4
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_PublicKey : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	/** @brief Key ID - see https://datatracker.ietf.org/doc/html/rfc7517#section-4.5 */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FString Kid{  };
	/** @brief Gets the value of Kid */
	FString& GetKid() { return Kid; }
	/** @brief Gets the value of Kid */
	const FString& GetKid() const { return Kid; }
	/** @brief Sets the value of Kid */
	void SetKid(const FString& NewValue) { Kid = NewValue;   }
	/** @brief Sets the value of Kid using move semantics */
	void SetKid(FString&& NewValue) { Kid = NewValue;   }

	/** @brief Key Type - see https://datatracker.ietf.org/doc/html/rfc7517#section-4.1 */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FString Kty{  };
	/** @brief Gets the value of Kty */
	FString& GetKty() { return Kty; }
	/** @brief Gets the value of Kty */
	const FString& GetKty() const { return Kty; }
	/** @brief Sets the value of Kty */
	void SetKty(const FString& NewValue) { Kty = NewValue;   }
	/** @brief Sets the value of Kty using move semantics */
	void SetKty(FString&& NewValue) { Kty = NewValue;   }

	/** @brief Modulus - see https://www.rfc-editor.org/rfc/rfc7518.html#section-6.3.1 */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FString N{  };
	/** @brief Gets the value of N */
	FString& GetN() { return N; }
	/** @brief Gets the value of N */
	const FString& GetN() const { return N; }
	/** @brief Sets the value of N */
	void SetN(const FString& NewValue) { N = NewValue;   }
	/** @brief Sets the value of N using move semantics */
	void SetN(FString&& NewValue) { N = NewValue;   }

	/** @brief Exponent - see https://www.rfc-editor.org/rfc/rfc7518.html#section-6.3.1 */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FString E{  };
	/** @brief Gets the value of E */
	FString& GetE() { return E; }
	/** @brief Gets the value of E */
	const FString& GetE() const { return E; }
	/** @brief Sets the value of E */
	void SetE(const FString& NewValue) { E = NewValue;   }
	/** @brief Sets the value of E using move semantics */
	void SetE(FString&& NewValue) { E = NewValue;   }
};

/** @} */
