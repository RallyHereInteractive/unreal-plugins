// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "BackfillTeam.generated.h"

/** @defgroup RHAPI_BackfillTeam RallyHere API Model BackfillTeam
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_BackfillTeam : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	/** @brief The number of players we want to backfill */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	int32 PlayersRequired{ 0 };
	/** @brief Gets the value of PlayersRequired */
	FORCEINLINE int32& GetPlayersRequired() { return PlayersRequired; }
	/** @brief Gets the value of PlayersRequired */
	FORCEINLINE const int32& GetPlayersRequired() const { return PlayersRequired; }
	/** @brief Sets the value of PlayersRequired */
	FORCEINLINE void SetPlayersRequired(const int32& NewValue) { PlayersRequired = NewValue;   }
	/** @brief Sets the value of PlayersRequired using move semantics */
	FORCEINLINE void SetPlayersRequired(int32&& NewValue) { PlayersRequired = NewValue;   }
	/** @brief Returns the default value of PlayersRequired */
	FORCEINLINE int32 GetDefaultValue_PlayersRequired() { return 0; }

	/** @brief Id for the team that requires backfilled players */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	int32 TeamId{ 0 };
	/** @brief Gets the value of TeamId */
	FORCEINLINE int32& GetTeamId() { return TeamId; }
	/** @brief Gets the value of TeamId */
	FORCEINLINE const int32& GetTeamId() const { return TeamId; }
	/** @brief Sets the value of TeamId */
	FORCEINLINE void SetTeamId(const int32& NewValue) { TeamId = NewValue;   }
	/** @brief Sets the value of TeamId using move semantics */
	FORCEINLINE void SetTeamId(int32&& NewValue) { TeamId = NewValue;   }
	/** @brief Returns the default value of TeamId */
	FORCEINLINE int32 GetDefaultValue_TeamId() { return 0; }
};

/** @} */
