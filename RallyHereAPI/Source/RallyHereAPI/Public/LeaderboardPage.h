// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "LeaderboardEntry.h"
#include "LeaderboardPage.generated.h"

/** @defgroup RHAPI_LeaderboardPage RallyHere API Model LeaderboardPage
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_LeaderboardPage : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	/** @brief Which leaderboard config is used for this leaderboard */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FString LeaderboardId{  };
	/** @brief Gets the value of LeaderboardId */
	FString& GetLeaderboardId() { return LeaderboardId; }
	/** @brief Gets the value of LeaderboardId */
	const FString& GetLeaderboardId() const { return LeaderboardId; }
	/** @brief Sets the value of LeaderboardId */
	void SetLeaderboardId(const FString& NewValue) { LeaderboardId = NewValue;   }
	/** @brief Sets the value of LeaderboardId using move semantics */
	void SetLeaderboardId(FString&& NewValue) { LeaderboardId = NewValue;   }

	/** @brief The cursor for the next page of results. 0 means there are no more */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FString Cursor{  };
	/** @brief Gets the value of Cursor */
	FString& GetCursor() { return Cursor; }
	/** @brief Gets the value of Cursor */
	const FString& GetCursor() const { return Cursor; }
	/** @brief Sets the value of Cursor */
	void SetCursor(const FString& NewValue) { Cursor = NewValue;   }
	/** @brief Sets the value of Cursor using move semantics */
	void SetCursor(FString&& NewValue) { Cursor = NewValue;   }

	/** @brief List of leaderboard entries */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	TArray<FRHAPI_LeaderboardEntry> Entries{  };
	/** @brief Gets the value of Entries */
	TArray<FRHAPI_LeaderboardEntry>& GetEntries() { return Entries; }
	/** @brief Gets the value of Entries */
	const TArray<FRHAPI_LeaderboardEntry>& GetEntries() const { return Entries; }
	/** @brief Sets the value of Entries */
	void SetEntries(const TArray<FRHAPI_LeaderboardEntry>& NewValue) { Entries = NewValue;   }
	/** @brief Sets the value of Entries using move semantics */
	void SetEntries(TArray<FRHAPI_LeaderboardEntry>&& NewValue) { Entries = NewValue;   }
};

/** @} */
