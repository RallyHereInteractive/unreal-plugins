// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "PageMeta.generated.h"

/** @defgroup RHAPI_PageMeta RallyHere API Model PageMeta
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_PageMeta : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	int32 Page{ 0 };
	/** @brief Gets the value of Page */
	FORCEINLINE int32& GetPage() { return Page; }
	/** @brief Gets the value of Page */
	FORCEINLINE const int32& GetPage() const { return Page; }
	/** @brief Sets the value of Page */
	FORCEINLINE void SetPage(const int32& NewValue) { Page = NewValue;   }
	/** @brief Sets the value of Page using move semantics */
	FORCEINLINE void SetPage(int32&& NewValue) { Page = NewValue;   }
	/** @brief Returns the default value of Page */
	FORCEINLINE int32 GetDefaultValue_Page() { return 0; }

	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	int32 Limit{ 0 };
	/** @brief Gets the value of Limit */
	FORCEINLINE int32& GetLimit() { return Limit; }
	/** @brief Gets the value of Limit */
	FORCEINLINE const int32& GetLimit() const { return Limit; }
	/** @brief Sets the value of Limit */
	FORCEINLINE void SetLimit(const int32& NewValue) { Limit = NewValue;   }
	/** @brief Sets the value of Limit using move semantics */
	FORCEINLINE void SetLimit(int32&& NewValue) { Limit = NewValue;   }
	/** @brief Returns the default value of Limit */
	FORCEINLINE int32 GetDefaultValue_Limit() { return 0; }

	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	int32 Total{ 0 };
	/** @brief Gets the value of Total */
	FORCEINLINE int32& GetTotal() { return Total; }
	/** @brief Gets the value of Total */
	FORCEINLINE const int32& GetTotal() const { return Total; }
	/** @brief Sets the value of Total */
	FORCEINLINE void SetTotal(const int32& NewValue) { Total = NewValue;   }
	/** @brief Sets the value of Total using move semantics */
	FORCEINLINE void SetTotal(int32&& NewValue) { Total = NewValue;   }
	/** @brief Returns the default value of Total */
	FORCEINLINE int32 GetDefaultValue_Total() { return 0; }
};

/** @} */
