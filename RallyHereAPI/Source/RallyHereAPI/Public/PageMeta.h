// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "PageMeta.generated.h"

/** @defgroup RHAPI_PageMeta RallyHere API Model PageMeta
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_PageMeta : public FRHAPI_Model
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
    int32 Page{ 0 };
    /** @brief Gets the value of Page */
    int32& GetPage() { return Page; }
    /** @brief Gets the value of Page */
    const int32& GetPage() const { return Page; }
    /** @brief Sets the value of Page */
    void SetPage(int32 NewValue) { Page = NewValue;  }
    /** @brief Returns true if Page matches the default value */
    bool IsPageDefaultValue() const { return Page == 0; }
    /** @brief Sets the value of Page to its default  */
    void SetPageToDefault() { Page = 0;  }

    UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
    int32 Limit{ 0 };
    /** @brief Gets the value of Limit */
    int32& GetLimit() { return Limit; }
    /** @brief Gets the value of Limit */
    const int32& GetLimit() const { return Limit; }
    /** @brief Sets the value of Limit */
    void SetLimit(int32 NewValue) { Limit = NewValue;  }
    /** @brief Returns true if Limit matches the default value */
    bool IsLimitDefaultValue() const { return Limit == 0; }
    /** @brief Sets the value of Limit to its default  */
    void SetLimitToDefault() { Limit = 0;  }

    UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
    int32 Total{ 0 };
    /** @brief Gets the value of Total */
    int32& GetTotal() { return Total; }
    /** @brief Gets the value of Total */
    const int32& GetTotal() const { return Total; }
    /** @brief Sets the value of Total */
    void SetTotal(int32 NewValue) { Total = NewValue;  }
    /** @brief Returns true if Total matches the default value */
    bool IsTotalDefaultValue() const { return Total == 0; }
    /** @brief Sets the value of Total to its default  */
    void SetTotalToDefault() { Total = 0;  }
};

/** @} */
