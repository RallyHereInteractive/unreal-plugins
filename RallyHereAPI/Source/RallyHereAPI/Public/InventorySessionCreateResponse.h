// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "Platform.h"
#include "InventorySessionCreateResponse.generated.h"

/** @defgroup RHAPI_InventorySessionCreateResponse RallyHere API Model InventorySessionCreateResponse
 *  @{
 */

/**
 * @brief Response body for creating a new Inventory Session.
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_InventorySessionCreateResponse : public FRHAPI_Model
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief The ID of the session. */
    UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
    FString SessionId{  };
    /** @brief Gets the value of SessionId */
    FString& GetSessionId() { return SessionId; }
    /** @brief Gets the value of SessionId */
    const FString& GetSessionId() const { return SessionId; }
    /** @brief Sets the value of SessionId */
    void SetSessionId(FString NewValue) { SessionId = NewValue;  }

    /** @brief The platform for the session. */
    UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
    ERHAPI_Platform SessionPlatform_Optional{  };
    /** @brief true if SessionPlatform_Optional has been set to a value */
    UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
    bool SessionPlatform_IsSet{ false };
    /** @brief Gets the value of SessionPlatform_Optional, regardless of it having been set */
    ERHAPI_Platform& GetSessionPlatform() { return SessionPlatform_Optional; }
    /** @brief Gets the value of SessionPlatform_Optional, regardless of it having been set */
    const ERHAPI_Platform& GetSessionPlatform() const { return SessionPlatform_Optional; }
    /** @brief Gets the value of SessionPlatform_Optional, if it has been set, otherwise it returns DefaultValue */
    const ERHAPI_Platform& GetSessionPlatform(const ERHAPI_Platform& DefaultValue) const { if (SessionPlatform_IsSet) return SessionPlatform_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of SessionPlatform_Optional and returns true if it has been set, otherwise returns false */
    bool GetSessionPlatform(ERHAPI_Platform& OutValue) const { if (SessionPlatform_IsSet) OutValue = SessionPlatform_Optional; return SessionPlatform_IsSet; }
    /** @brief Returns a pointer to SessionPlatform_Optional, if it has been set, otherwise returns nullptr */
    ERHAPI_Platform* GetSessionPlatformOrNull() { if (SessionPlatform_IsSet) return &SessionPlatform_Optional; return nullptr; }
    /** @brief Returns a pointer to SessionPlatform_Optional, if it has been set, otherwise returns nullptr */
    const ERHAPI_Platform* GetSessionPlatformOrNull() const { if (SessionPlatform_IsSet) return &SessionPlatform_Optional; return nullptr; }
    /** @brief Sets the value of SessionPlatform_Optional and also sets SessionPlatform_IsSet to true */
    void SetSessionPlatform(ERHAPI_Platform NewValue) { SessionPlatform_Optional = NewValue; SessionPlatform_IsSet = true; }
     /** @brief Clears the value of SessionPlatform_Optional and sets SessionPlatform_IsSet to false */
    void ClearSessionPlatform() { SessionPlatform_IsSet = false; }

    /** @brief The ID of the Order generated for any Loot given during the creation of the Inventory Session. */
    UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
    FString OrderId_Optional{  };
    /** @brief true if OrderId_Optional has been set to a value */
    UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
    bool OrderId_IsSet{ false };
    /** @brief Gets the value of OrderId_Optional, regardless of it having been set */
    FString& GetOrderId() { return OrderId_Optional; }
    /** @brief Gets the value of OrderId_Optional, regardless of it having been set */
    const FString& GetOrderId() const { return OrderId_Optional; }
    /** @brief Gets the value of OrderId_Optional, if it has been set, otherwise it returns DefaultValue */
    const FString& GetOrderId(const FString& DefaultValue) const { if (OrderId_IsSet) return OrderId_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of OrderId_Optional and returns true if it has been set, otherwise returns false */
    bool GetOrderId(FString& OutValue) const { if (OrderId_IsSet) OutValue = OrderId_Optional; return OrderId_IsSet; }
    /** @brief Returns a pointer to OrderId_Optional, if it has been set, otherwise returns nullptr */
    FString* GetOrderIdOrNull() { if (OrderId_IsSet) return &OrderId_Optional; return nullptr; }
    /** @brief Returns a pointer to OrderId_Optional, if it has been set, otherwise returns nullptr */
    const FString* GetOrderIdOrNull() const { if (OrderId_IsSet) return &OrderId_Optional; return nullptr; }
    /** @brief Sets the value of OrderId_Optional and also sets OrderId_IsSet to true */
    void SetOrderId(FString NewValue) { OrderId_Optional = NewValue; OrderId_IsSet = true; }
     /** @brief Clears the value of OrderId_Optional and sets OrderId_IsSet to false */
    void ClearOrderId() { OrderId_IsSet = false; }
};

/** @} */
