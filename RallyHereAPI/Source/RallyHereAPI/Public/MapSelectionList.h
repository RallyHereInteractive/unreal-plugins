// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "MapConfig.h"
#include "MapSelectionList.generated.h"

/** @defgroup RHAPI_MapSelectionList RallyHere API Model MapSelectionList
 *  @{
 */

/**
 * @brief DEPRECATED A list of maps that can be chosen from when an instance is launching
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_MapSelectionList : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	/** @brief ID to uniquely identify this map selection list */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FString MapSelectionListId{  };
	/** @brief Gets the value of MapSelectionListId */
	FString& GetMapSelectionListId() { return MapSelectionListId; }
	/** @brief Gets the value of MapSelectionListId */
	const FString& GetMapSelectionListId() const { return MapSelectionListId; }
	/** @brief Sets the value of MapSelectionListId */
	void SetMapSelectionListId(FString NewValue) { MapSelectionListId = NewValue;  }

	/** @brief List of maps that can be chosen in this selection list */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	TArray<FRHAPI_MapConfig> Maps{  };
	/** @brief Gets the value of Maps */
	TArray<FRHAPI_MapConfig>& GetMaps() { return Maps; }
	/** @brief Gets the value of Maps */
	const TArray<FRHAPI_MapConfig>& GetMaps() const { return Maps; }
	/** @brief Sets the value of Maps */
	void SetMaps(TArray<FRHAPI_MapConfig> NewValue) { Maps = NewValue;  }
};

/** @} */
