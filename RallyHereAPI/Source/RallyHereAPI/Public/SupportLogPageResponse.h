// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "SupportLogEntry.h"
#include "SupportLogPageResponse.generated.h"

/** @defgroup RHAPI_SupportLogPageResponse RallyHere API Model SupportLogPageResponse
 *  @{
 */

/**
 * @brief Response containing a page of support log entries
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_SupportLogPageResponse : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	/** @brief List of support log entries */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	TArray<FRHAPI_SupportLogEntry> Logs{  };
	/** @brief Gets the value of Logs */
	TArray<FRHAPI_SupportLogEntry>& GetLogs() { return Logs; }
	/** @brief Gets the value of Logs */
	const TArray<FRHAPI_SupportLogEntry>& GetLogs() const { return Logs; }
	/** @brief Sets the value of Logs */
	void SetLogs(const TArray<FRHAPI_SupportLogEntry>& NewValue) { Logs = NewValue;   }
	/** @brief Sets the value of Logs using move semantics */
	void SetLogs(TArray<FRHAPI_SupportLogEntry>&& NewValue) { Logs = NewValue;   }

	/** @brief Current page number */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	int32 Page{ 0 };
	/** @brief Gets the value of Page */
	int32& GetPage() { return Page; }
	/** @brief Gets the value of Page */
	const int32& GetPage() const { return Page; }
	/** @brief Sets the value of Page */
	void SetPage(const int32& NewValue) { Page = NewValue;   }
	/** @brief Sets the value of Page using move semantics */
	void SetPage(int32&& NewValue) { Page = NewValue;   }
	/** @brief Returns true if Page matches the default value */
	bool IsPageDefaultValue() const { return Page == 0; }
	/** @brief Sets the value of Page to its default  */
	void SetPageToDefault() { SetPage(0); }

	/** @brief Total number of pages available */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	int32 TotalPages{ 0 };
	/** @brief Gets the value of TotalPages */
	int32& GetTotalPages() { return TotalPages; }
	/** @brief Gets the value of TotalPages */
	const int32& GetTotalPages() const { return TotalPages; }
	/** @brief Sets the value of TotalPages */
	void SetTotalPages(const int32& NewValue) { TotalPages = NewValue;   }
	/** @brief Sets the value of TotalPages using move semantics */
	void SetTotalPages(int32&& NewValue) { TotalPages = NewValue;   }
	/** @brief Returns true if TotalPages matches the default value */
	bool IsTotalPagesDefaultValue() const { return TotalPages == 0; }
	/** @brief Sets the value of TotalPages to its default  */
	void SetTotalPagesToDefault() { SetTotalPages(0); }

	/** @brief Total number of log entries available */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	int32 TotalEntries{ 0 };
	/** @brief Gets the value of TotalEntries */
	int32& GetTotalEntries() { return TotalEntries; }
	/** @brief Gets the value of TotalEntries */
	const int32& GetTotalEntries() const { return TotalEntries; }
	/** @brief Sets the value of TotalEntries */
	void SetTotalEntries(const int32& NewValue) { TotalEntries = NewValue;   }
	/** @brief Sets the value of TotalEntries using move semantics */
	void SetTotalEntries(int32&& NewValue) { TotalEntries = NewValue;   }
	/** @brief Returns true if TotalEntries matches the default value */
	bool IsTotalEntriesDefaultValue() const { return TotalEntries == 0; }
	/** @brief Sets the value of TotalEntries to its default  */
	void SetTotalEntriesToDefault() { SetTotalEntries(0); }
};

/** @} */
