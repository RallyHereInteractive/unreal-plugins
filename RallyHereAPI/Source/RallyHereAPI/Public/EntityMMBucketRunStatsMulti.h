// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "EntityMMBucketRunStats.h"
#include "EntityMMBucketRunStatsMulti.generated.h"

/** @defgroup RHAPI_EntityMMBucketRunStatsMulti RallyHere API Model EntityMMBucketRunStatsMulti
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_EntityMMBucketRunStatsMulti : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	/** @brief  */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	TArray<FRHAPI_EntityMMBucketRunStats> Data_Optional{  };
	/** @brief true if Data_Optional has been set to a value */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	bool Data_IsSet{ false };
	/** @brief Gets the value of Data_Optional, regardless of it having been set */
	FORCEINLINE TArray<FRHAPI_EntityMMBucketRunStats>& GetData() { return Data_Optional; }
	/** @brief Gets the value of Data_Optional, regardless of it having been set */
	FORCEINLINE const TArray<FRHAPI_EntityMMBucketRunStats>& GetData() const { return Data_Optional; }
	/** @brief Gets the value of Data_Optional, if it has been set, otherwise it returns DefaultValue */
	FORCEINLINE const TArray<FRHAPI_EntityMMBucketRunStats>& GetData(const TArray<FRHAPI_EntityMMBucketRunStats>& DefaultValue) const { if (Data_IsSet) return Data_Optional; return DefaultValue; }
	/** @brief Fills OutValue with the value of Data_Optional and returns true if it has been set, otherwise returns false */
	FORCEINLINE bool GetData(TArray<FRHAPI_EntityMMBucketRunStats>& OutValue) const { if (Data_IsSet) OutValue = Data_Optional; return Data_IsSet; }
	/** @brief Returns a pointer to Data_Optional, if it has been set, otherwise returns nullptr */
	FORCEINLINE TArray<FRHAPI_EntityMMBucketRunStats>* GetDataOrNull() { if (Data_IsSet) return (&Data_Optional); return nullptr; }
	/** @brief Returns a pointer to Data_Optional, if it has been set, otherwise returns nullptr */
	FORCEINLINE const TArray<FRHAPI_EntityMMBucketRunStats>* GetDataOrNull() const { if (Data_IsSet) return (&Data_Optional); return nullptr; }
	/** @brief Sets the value of Data_Optional and also sets Data_IsSet to true */
	FORCEINLINE void SetData(const TArray<FRHAPI_EntityMMBucketRunStats>& NewValue) { Data_Optional = NewValue; Data_IsSet = true;  }
	/** @brief Sets the value of Data_Optional and also sets Data_IsSet to true using move semantics */
	FORCEINLINE void SetData(TArray<FRHAPI_EntityMMBucketRunStats>&& NewValue) { Data_Optional = NewValue; Data_IsSet = true;  }
	/** @brief Clears the value of Data_Optional and sets Data_IsSet to false */
	void ClearData() { Data_IsSet = false;  }
};

/** @} */
