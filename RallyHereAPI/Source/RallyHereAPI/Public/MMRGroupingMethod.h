// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "MMRGroupingMethod.generated.h"


/**
 * @brief What method should be used to determine a linking&#39;s group MMR based on the individuals
 */
UENUM(BlueprintType)
enum class ERHAPI_MMRGroupingMethod : uint8
{
	Worst UMETA(ToolTip="Use the lowest MMR of any player in the linking"),
	Best UMETA(ToolTip="Use the highest MMR of any player in the linking"),
	AverageByVariance UMETA(ToolTip="Use the arithmetic mean of the players&#39; skill multiplied by their variance. This is the sum of each player&#39;s skill times variance divided by the number of players"),
	Average UMETA(ToolTip="Use the arithmetic mean of the players&#39; skill. This is the sum of each player&#39;s skill divided by the number of players"),
};
RALLYHEREAPI_API FString EnumToString(const ERHAPI_MMRGroupingMethod& EnumValue);
RALLYHEREAPI_API bool EnumFromString(const FString& EnumAsString, ERHAPI_MMRGroupingMethod& EnumValue);
RALLYHEREAPI_API FStringFormatArg ToStringFormatArg(const ERHAPI_MMRGroupingMethod& Value);
RALLYHEREAPI_API void WriteJsonValue(TSharedRef<TJsonWriter<>>& Writer, const ERHAPI_MMRGroupingMethod& Value);
RALLYHEREAPI_API bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, ERHAPI_MMRGroupingMethod& Value);
