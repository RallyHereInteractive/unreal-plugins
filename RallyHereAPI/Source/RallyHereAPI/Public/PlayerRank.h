// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "RankData.h"
#include "PlayerRank.generated.h"

/** @defgroup RHAPI_PlayerRank RallyHere API Model PlayerRank
 *  @{
 */

/**
 * @brief Rank data about a specific player
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_PlayerRank : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	/** @brief UUID for this specific player */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FGuid PlayerUuid{  };
	/** @brief Gets the value of PlayerUuid */
	FGuid& GetPlayerUuid() { return PlayerUuid; }
	/** @brief Gets the value of PlayerUuid */
	const FGuid& GetPlayerUuid() const { return PlayerUuid; }
	/** @brief Sets the value of PlayerUuid */
	void SetPlayerUuid(const FGuid& NewValue) { PlayerUuid = NewValue;   }
	/** @brief Sets the value of PlayerUuid using move semantics */
	void SetPlayerUuid(FGuid&& NewValue) { PlayerUuid = NewValue;   }

	/** @brief Current rank info about player */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	FRHAPI_RankData Rank{  };
	/** @brief Gets the value of Rank */
	FRHAPI_RankData& GetRank() { return Rank; }
	/** @brief Gets the value of Rank */
	const FRHAPI_RankData& GetRank() const { return Rank; }
	/** @brief Sets the value of Rank */
	void SetRank(const FRHAPI_RankData& NewValue) { Rank = NewValue;   }
	/** @brief Sets the value of Rank using move semantics */
	void SetRank(FRHAPI_RankData&& NewValue) { Rank = NewValue;   }
};

/** @} */
