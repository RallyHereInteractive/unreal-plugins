// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "SessionTeam.h"
#include "PagedPlayersResponse.generated.h"

/** @defgroup RHAPI_PagedPlayersResponse RallyHere API Model PagedPlayersResponse
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_PagedPlayersResponse : public FRHAPI_Model
{
	GENERATED_BODY()

	/**
	* @brief Fills this object with data from the passed in JSON
	*
	* @param [in] JsonValue Data from the API call.
	*
	* @return true if parsing of the JSON data was successful.
	*/
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

	/**
	* @brief Writes the data from this object into the specified JSON Writer stream
	*
	* @param [in] Writer JSON Writer stream to push .
	*/
	virtual void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

	/** @brief List of returned teams and players. Player list in the teams may be incomplete */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	TArray<FRHAPI_SessionTeam> Teams_Optional{  };
	/** @brief true if Teams_Optional has been set to a value */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	bool Teams_IsSet{ false };
	/** @brief Gets the value of Teams_Optional, regardless of it having been set */
	FORCEINLINE TArray<FRHAPI_SessionTeam>& GetTeams() { return Teams_Optional; }
	/** @brief Gets the value of Teams_Optional, regardless of it having been set */
	FORCEINLINE const TArray<FRHAPI_SessionTeam>& GetTeams() const { return Teams_Optional; }
	/** @brief Gets the value of Teams_Optional, if it has been set, otherwise it returns DefaultValue */
	FORCEINLINE const TArray<FRHAPI_SessionTeam>& GetTeams(const TArray<FRHAPI_SessionTeam>& DefaultValue) const { if (Teams_IsSet) return Teams_Optional; return DefaultValue; }
	/** @brief Fills OutValue with the value of Teams_Optional and returns true if it has been set, otherwise returns false */
	FORCEINLINE bool GetTeams(TArray<FRHAPI_SessionTeam>& OutValue) const { if (Teams_IsSet) OutValue = Teams_Optional; return Teams_IsSet; }
	/** @brief Returns a pointer to Teams_Optional, if it has been set, otherwise returns nullptr */
	FORCEINLINE TArray<FRHAPI_SessionTeam>* GetTeamsOrNull() { if (Teams_IsSet) return (&Teams_Optional); return nullptr; }
	/** @brief Returns a pointer to Teams_Optional, if it has been set, otherwise returns nullptr */
	FORCEINLINE const TArray<FRHAPI_SessionTeam>* GetTeamsOrNull() const { if (Teams_IsSet) return (&Teams_Optional); return nullptr; }
	/** @brief Sets the value of Teams_Optional and also sets Teams_IsSet to true */
	FORCEINLINE void SetTeams(const TArray<FRHAPI_SessionTeam>& NewValue) { Teams_Optional = NewValue; Teams_IsSet = true;  }
	/** @brief Sets the value of Teams_Optional and also sets Teams_IsSet to true using move semantics */
	FORCEINLINE void SetTeams(TArray<FRHAPI_SessionTeam>&& NewValue) { Teams_Optional = NewValue; Teams_IsSet = true;  }
	/** @brief Clears the value of Teams_Optional and sets Teams_IsSet to false */
	void ClearTeams() { Teams_IsSet = false;  }

	/** @brief Cursor to continue iterating through players in a session. 0 means we have returned the last entry */
	UPROPERTY(BlueprintReadWrite, Category = "RallyHere")
	int32 Cursor{ 0 };
	/** @brief Gets the value of Cursor */
	FORCEINLINE int32& GetCursor() { return Cursor; }
	/** @brief Gets the value of Cursor */
	FORCEINLINE const int32& GetCursor() const { return Cursor; }
	/** @brief Sets the value of Cursor */
	FORCEINLINE void SetCursor(const int32& NewValue) { Cursor = NewValue;   }
	/** @brief Sets the value of Cursor using move semantics */
	FORCEINLINE void SetCursor(int32&& NewValue) { Cursor = NewValue;   }
	/** @brief Returns the default value of Cursor */
	FORCEINLINE int32 GetDefaultValue_Cursor() { return 0; }
};

/** @} */
