// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereAPIAuthContext.h"
#include "RallyHereAPIHelpers.h"
#include "GuideEntityType.h"
#include "SearchFavoriteGuideSort.h"
#include "SearchGuideSort.h"
#include "SortDirection.h"
#include "FavoriteGuideRequest.h"
#include "FavoriteGuideResponse.h"
#include "GuideCreateRequest.h"
#include "GuideFull.h"
#include "GuideRating.h"
#include "HTTPValidationError.h"
#include "HzApiErrorModel.h"
#include "ManyEntityGuideEngagement.h"
#include "ManyEntityGuideEngagementRequest.h"
#include "SearchGuideResponse.h"

namespace RallyHereAPI
{
using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

// forward declaration
class FGuideAPI;

/**
 * @brief Add Entity Favorite Guide
 * Add a guide to an entity's favorites
 * 
 * Required Permissions:
 * 
 * - For any entity (including themselves) any of: `guide:*`, `guide:engage:write:any`
 * 
 * - For the entity themselves : `guide:engage:write:self`
*/
struct RALLYHEREAPI_API FRequest_AddEntityFavoriteGuide : public FRequest
{
	FRequest_AddEntityFavoriteGuide();
	virtual ~FRequest_AddEntityFavoriteGuide() = default;
	
	/** @brief Given a http request, apply data and settings from this request object to it */
	bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
	/** @brief Compute the URL path for this request instance */
	FString ComputePath() const override;
	/** @brief Get the simplified URL path for this request, not including the verb */
	FName GetSimplifiedPath() const override;
	/** @brief Get the simplified URL path for this request, including the verb */
	FName GetSimplifiedPathWithVerb() const override;
	/** @brief Get the auth context used for this request */
	TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

	/** The specified auth context to use for this request */
	TSharedPtr<FAuthContext> AuthContext;
	ERHAPI_GuideEntityType EntityType;
	FString EntityId;
	FRHAPI_FavoriteGuideRequest FavoriteGuideRequest;
};

/** The response type for FRequest_AddEntityFavoriteGuide */
struct RALLYHEREAPI_API FResponse_AddEntityFavoriteGuide : public FResponseAccessorTemplate<FRHAPI_FavoriteGuideResponse, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError>
{
	typedef FResponseAccessorTemplate<FRHAPI_FavoriteGuideResponse, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError> Super;

	FResponse_AddEntityFavoriteGuide(FRequestMetadata InRequestMetadata);
	//virtual ~FResponse_AddEntityFavoriteGuide() = default;
	
	/** @brief Parse out response content into local storage from a given JsonValue */
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	/** @brief Parse out header information for later usage */
	virtual bool ParseHeaders() override;
	/** @brief Gets the description of the response code */
	virtual FString GetHttpResponseCodeDescription(EHttpResponseCodes::Type InHttpResponseCode) const override;

#if ALLOW_LEGACY_RESPONSE_CONTENT
	/** Default Response Content */
	UE_DEPRECATED(5.0, "Direct use of Content is deprecated, please use TryGetDefaultContent(), TryGetContent(), TryGetResponse<>(), or TryGetContentFor<>() instead.")
	FRHAPI_FavoriteGuideResponse Content;
#endif //ALLOW_LEGACY_RESPONSE_CONTENT

	// Default Response Helpers
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(FRHAPI_FavoriteGuideResponse& OutContent) const { return TryGetContent<FRHAPI_FavoriteGuideResponse>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(TOptional<FRHAPI_FavoriteGuideResponse>& OutContent) const { return TryGetContent<FRHAPI_FavoriteGuideResponse>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	const FRHAPI_FavoriteGuideResponse* TryGetDefaultContentAsPointer() const { return TryGetContentAsPointer<FRHAPI_FavoriteGuideResponse>(); }
	/** @brief Attempt to retrieve the content in the default response */
	TOptional<FRHAPI_FavoriteGuideResponse> TryGetDefaultContentAsOptional() const { return TryGetContentAsOptional<FRHAPI_FavoriteGuideResponse>(); }

	// Individual Response Helpers	
	/* Response 200
	Successful Response
	*/
	bool TryGetContentFor200(FRHAPI_FavoriteGuideResponse& OutContent) const;

	/* Response 403
	 Error Codes: - `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token - `auth_invalid_version` - Invalid Authorization - version - `auth_malformed_access` - Invalid Authorization - malformed access token - `auth_not_jwt` - Invalid Authorization - `auth_token_expired` - Token is expired - `auth_token_format` - Invalid Authorization - {} - `auth_token_invalid_claim` - Token contained invalid claim value: {} - `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type - `auth_token_sig_invalid` - Token Signature is invalid - `auth_token_unknown` - Failed to parse token - `insufficient_permissions` - Insufficient Permissions 
	*/
	bool TryGetContentFor403(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 422
	Validation Error
	*/
	bool TryGetContentFor422(FRHAPI_HTTPValidationError& OutContent) const;

};

/** The delegate class for FRequest_AddEntityFavoriteGuide */
DECLARE_DELEGATE_OneParam(FDelegate_AddEntityFavoriteGuide, const FResponse_AddEntityFavoriteGuide&);

/** @brief A helper metadata object for AddEntityFavoriteGuide that defines the relationship between Request, Delegate, API, etc.  Intended for use with templating */
struct RALLYHEREAPI_API Traits_AddEntityFavoriteGuide
{
	/** The request type */
	typedef FRequest_AddEntityFavoriteGuide Request;
	/** The response type */
	typedef FResponse_AddEntityFavoriteGuide Response;
	/** The delegate type, triggered by the response */
	typedef FDelegate_AddEntityFavoriteGuide Delegate;
	/** The API object that supports this API call */
	typedef FGuideAPI API;
	/** A human readable name for this API call */
	static FString Name;

	/**
	 * @brief A helper that uses all of the above types to initiate an API call, with a specified priority.
	 * @param [in] InAPI The API object the call will be made with
	 * @param [in] InRequest The request to submit to the API call
	 * @param [in] InDelegate An optional delegate to call when the API call completes, containing the response information
	 * @param [in] InPriority An optional priority override for the API call, for use when API calls are being throttled
	 * @return A http request object, if the call was successfully queued.
	 */
	static FHttpRequestPtr DoCall(TSharedRef<API> InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 InPriority = DefaultRallyHereAPIPriority);
};

/**
 * @brief Add Entity Rating For Guide
 * Rate a guide for an entity
 * 
 * Required Permissions:
 * 
 * - For any entity (including themselves) any of: `guide:*`, `guide:engage:write:any`
 * 
 * - For the entity themselves : `guide:engage:write:self`
*/
struct RALLYHEREAPI_API FRequest_AddEntityRatingForGuide : public FRequest
{
	FRequest_AddEntityRatingForGuide();
	virtual ~FRequest_AddEntityRatingForGuide() = default;
	
	/** @brief Given a http request, apply data and settings from this request object to it */
	bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
	/** @brief Compute the URL path for this request instance */
	FString ComputePath() const override;
	/** @brief Get the simplified URL path for this request, not including the verb */
	FName GetSimplifiedPath() const override;
	/** @brief Get the simplified URL path for this request, including the verb */
	FName GetSimplifiedPathWithVerb() const override;
	/** @brief Get the auth context used for this request */
	TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

	/** The specified auth context to use for this request */
	TSharedPtr<FAuthContext> AuthContext;
	ERHAPI_GuideEntityType EntityType;
	FString EntityId;
	FRHAPI_GuideRating GuideRating;
};

/** The response type for FRequest_AddEntityRatingForGuide */
struct RALLYHEREAPI_API FResponse_AddEntityRatingForGuide : public FResponseAccessorTemplate<FRHAPI_GuideRating, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError>
{
	typedef FResponseAccessorTemplate<FRHAPI_GuideRating, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError> Super;

	FResponse_AddEntityRatingForGuide(FRequestMetadata InRequestMetadata);
	//virtual ~FResponse_AddEntityRatingForGuide() = default;
	
	/** @brief Parse out response content into local storage from a given JsonValue */
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	/** @brief Parse out header information for later usage */
	virtual bool ParseHeaders() override;
	/** @brief Gets the description of the response code */
	virtual FString GetHttpResponseCodeDescription(EHttpResponseCodes::Type InHttpResponseCode) const override;

#if ALLOW_LEGACY_RESPONSE_CONTENT
	/** Default Response Content */
	UE_DEPRECATED(5.0, "Direct use of Content is deprecated, please use TryGetDefaultContent(), TryGetContent(), TryGetResponse<>(), or TryGetContentFor<>() instead.")
	FRHAPI_GuideRating Content;
#endif //ALLOW_LEGACY_RESPONSE_CONTENT

	// Default Response Helpers
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(FRHAPI_GuideRating& OutContent) const { return TryGetContent<FRHAPI_GuideRating>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(TOptional<FRHAPI_GuideRating>& OutContent) const { return TryGetContent<FRHAPI_GuideRating>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	const FRHAPI_GuideRating* TryGetDefaultContentAsPointer() const { return TryGetContentAsPointer<FRHAPI_GuideRating>(); }
	/** @brief Attempt to retrieve the content in the default response */
	TOptional<FRHAPI_GuideRating> TryGetDefaultContentAsOptional() const { return TryGetContentAsOptional<FRHAPI_GuideRating>(); }

	// Individual Response Helpers	
	/* Response 200
	Successful Response
	*/
	bool TryGetContentFor200(FRHAPI_GuideRating& OutContent) const;

	/* Response 403
	 Error Codes: - `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token - `auth_invalid_version` - Invalid Authorization - version - `auth_malformed_access` - Invalid Authorization - malformed access token - `auth_not_jwt` - Invalid Authorization - `auth_token_expired` - Token is expired - `auth_token_format` - Invalid Authorization - {} - `auth_token_invalid_claim` - Token contained invalid claim value: {} - `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type - `auth_token_sig_invalid` - Token Signature is invalid - `auth_token_unknown` - Failed to parse token - `insufficient_permissions` - Insufficient Permissions 
	*/
	bool TryGetContentFor403(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 422
	Validation Error
	*/
	bool TryGetContentFor422(FRHAPI_HTTPValidationError& OutContent) const;

};

/** The delegate class for FRequest_AddEntityRatingForGuide */
DECLARE_DELEGATE_OneParam(FDelegate_AddEntityRatingForGuide, const FResponse_AddEntityRatingForGuide&);

/** @brief A helper metadata object for AddEntityRatingForGuide that defines the relationship between Request, Delegate, API, etc.  Intended for use with templating */
struct RALLYHEREAPI_API Traits_AddEntityRatingForGuide
{
	/** The request type */
	typedef FRequest_AddEntityRatingForGuide Request;
	/** The response type */
	typedef FResponse_AddEntityRatingForGuide Response;
	/** The delegate type, triggered by the response */
	typedef FDelegate_AddEntityRatingForGuide Delegate;
	/** The API object that supports this API call */
	typedef FGuideAPI API;
	/** A human readable name for this API call */
	static FString Name;

	/**
	 * @brief A helper that uses all of the above types to initiate an API call, with a specified priority.
	 * @param [in] InAPI The API object the call will be made with
	 * @param [in] InRequest The request to submit to the API call
	 * @param [in] InDelegate An optional delegate to call when the API call completes, containing the response information
	 * @param [in] InPriority An optional priority override for the API call, for use when API calls are being throttled
	 * @return A http request object, if the call was successfully queued.
	 */
	static FHttpRequestPtr DoCall(TSharedRef<API> InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 InPriority = DefaultRallyHereAPIPriority);
};

/**
 * @brief Create Guide
 * Create a new guide
 * 
 * Required Permissions:
 * 
 * - For any entity (including themselves) any of: `guide:*`, `guide:write:any`
 * 
 * - For the entity themselves : `guide:write:self`
*/
struct RALLYHEREAPI_API FRequest_CreateGuide : public FRequest
{
	FRequest_CreateGuide();
	virtual ~FRequest_CreateGuide() = default;
	
	/** @brief Given a http request, apply data and settings from this request object to it */
	bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
	/** @brief Compute the URL path for this request instance */
	FString ComputePath() const override;
	/** @brief Get the simplified URL path for this request, not including the verb */
	FName GetSimplifiedPath() const override;
	/** @brief Get the simplified URL path for this request, including the verb */
	FName GetSimplifiedPathWithVerb() const override;
	/** @brief Get the auth context used for this request */
	TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

	/** The specified auth context to use for this request */
	TSharedPtr<FAuthContext> AuthContext;
	FRHAPI_GuideCreateRequest GuideCreateRequest;
};

/** The response type for FRequest_CreateGuide */
struct RALLYHEREAPI_API FResponse_CreateGuide : public FResponseAccessorTemplate<FRHAPI_GuideFull, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError>
{
	typedef FResponseAccessorTemplate<FRHAPI_GuideFull, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError> Super;

	FResponse_CreateGuide(FRequestMetadata InRequestMetadata);
	//virtual ~FResponse_CreateGuide() = default;
	
	/** @brief Parse out response content into local storage from a given JsonValue */
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	/** @brief Parse out header information for later usage */
	virtual bool ParseHeaders() override;
	/** @brief Gets the description of the response code */
	virtual FString GetHttpResponseCodeDescription(EHttpResponseCodes::Type InHttpResponseCode) const override;

#if ALLOW_LEGACY_RESPONSE_CONTENT
	/** Default Response Content */
	UE_DEPRECATED(5.0, "Direct use of Content is deprecated, please use TryGetDefaultContent(), TryGetContent(), TryGetResponse<>(), or TryGetContentFor<>() instead.")
	FRHAPI_GuideFull Content;
#endif //ALLOW_LEGACY_RESPONSE_CONTENT

	// Default Response Helpers
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(FRHAPI_GuideFull& OutContent) const { return TryGetContent<FRHAPI_GuideFull>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(TOptional<FRHAPI_GuideFull>& OutContent) const { return TryGetContent<FRHAPI_GuideFull>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	const FRHAPI_GuideFull* TryGetDefaultContentAsPointer() const { return TryGetContentAsPointer<FRHAPI_GuideFull>(); }
	/** @brief Attempt to retrieve the content in the default response */
	TOptional<FRHAPI_GuideFull> TryGetDefaultContentAsOptional() const { return TryGetContentAsOptional<FRHAPI_GuideFull>(); }

	// Individual Response Helpers	
	/* Response 201
	Successful Response
	*/
	bool TryGetContentFor201(FRHAPI_GuideFull& OutContent) const;

	/* Response 403
	 Error Codes: - `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token - `auth_invalid_version` - Invalid Authorization - version - `auth_malformed_access` - Invalid Authorization - malformed access token - `auth_not_jwt` - Invalid Authorization - `auth_token_expired` - Token is expired - `auth_token_format` - Invalid Authorization - {} - `auth_token_invalid_claim` - Token contained invalid claim value: {} - `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type - `auth_token_sig_invalid` - Token Signature is invalid - `auth_token_unknown` - Failed to parse token - `insufficient_permissions` - Insufficient Permissions 
	*/
	bool TryGetContentFor403(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 422
	Validation Error
	*/
	bool TryGetContentFor422(FRHAPI_HTTPValidationError& OutContent) const;

};

/** The delegate class for FRequest_CreateGuide */
DECLARE_DELEGATE_OneParam(FDelegate_CreateGuide, const FResponse_CreateGuide&);

/** @brief A helper metadata object for CreateGuide that defines the relationship between Request, Delegate, API, etc.  Intended for use with templating */
struct RALLYHEREAPI_API Traits_CreateGuide
{
	/** The request type */
	typedef FRequest_CreateGuide Request;
	/** The response type */
	typedef FResponse_CreateGuide Response;
	/** The delegate type, triggered by the response */
	typedef FDelegate_CreateGuide Delegate;
	/** The API object that supports this API call */
	typedef FGuideAPI API;
	/** A human readable name for this API call */
	static FString Name;

	/**
	 * @brief A helper that uses all of the above types to initiate an API call, with a specified priority.
	 * @param [in] InAPI The API object the call will be made with
	 * @param [in] InRequest The request to submit to the API call
	 * @param [in] InDelegate An optional delegate to call when the API call completes, containing the response information
	 * @param [in] InPriority An optional priority override for the API call, for use when API calls are being throttled
	 * @return A http request object, if the call was successfully queued.
	 */
	static FHttpRequestPtr DoCall(TSharedRef<API> InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 InPriority = DefaultRallyHereAPIPriority);
};

/**
 * @brief Delete Guide By Id
 * Delete a guide
 * 
 * Required Permissions:
 * 
 * - For any entity (including themselves) any of: `guide:*`, `guide:write:any`
 * 
 * - For the entity themselves : `guide:write:self`
*/
struct RALLYHEREAPI_API FRequest_DeleteGuideById : public FRequest
{
	FRequest_DeleteGuideById();
	virtual ~FRequest_DeleteGuideById() = default;
	
	/** @brief Given a http request, apply data and settings from this request object to it */
	bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
	/** @brief Compute the URL path for this request instance */
	FString ComputePath() const override;
	/** @brief Get the simplified URL path for this request, not including the verb */
	FName GetSimplifiedPath() const override;
	/** @brief Get the simplified URL path for this request, including the verb */
	FName GetSimplifiedPathWithVerb() const override;
	/** @brief Get the auth context used for this request */
	TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

	/** The specified auth context to use for this request */
	TSharedPtr<FAuthContext> AuthContext;
	FGuid GuideId;
};

/** The response type for FRequest_DeleteGuideById */
struct RALLYHEREAPI_API FResponse_DeleteGuideById : public FResponseAccessorTemplate<FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError>
{
	typedef FResponseAccessorTemplate<FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError> Super;

	FResponse_DeleteGuideById(FRequestMetadata InRequestMetadata);
	//virtual ~FResponse_DeleteGuideById() = default;
	
	/** @brief Parse out response content into local storage from a given JsonValue */
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	/** @brief Parse out header information for later usage */
	virtual bool ParseHeaders() override;
	/** @brief Gets the description of the response code */
	virtual FString GetHttpResponseCodeDescription(EHttpResponseCodes::Type InHttpResponseCode) const override;

#if ALLOW_LEGACY_RESPONSE_CONTENT

#endif //ALLOW_LEGACY_RESPONSE_CONTENT


	// Individual Response Helpers	
	/* Response 200
	Successful Response
	*/

	/* Response 403
	 Error Codes: - `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token - `auth_invalid_version` - Invalid Authorization - version - `auth_malformed_access` - Invalid Authorization - malformed access token - `auth_not_jwt` - Invalid Authorization - `auth_token_expired` - Token is expired - `auth_token_format` - Invalid Authorization - {} - `auth_token_invalid_claim` - Token contained invalid claim value: {} - `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type - `auth_token_sig_invalid` - Token Signature is invalid - `auth_token_unknown` - Failed to parse token - `insufficient_permissions` - Insufficient Permissions 
	*/
	bool TryGetContentFor403(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 404
	Error Codes: - `ErrorCodes.not_found` - Object was not found 
	*/
	bool TryGetContentFor404(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 422
	Validation Error
	*/
	bool TryGetContentFor422(FRHAPI_HTTPValidationError& OutContent) const;

};

/** The delegate class for FRequest_DeleteGuideById */
DECLARE_DELEGATE_OneParam(FDelegate_DeleteGuideById, const FResponse_DeleteGuideById&);

/** @brief A helper metadata object for DeleteGuideById that defines the relationship between Request, Delegate, API, etc.  Intended for use with templating */
struct RALLYHEREAPI_API Traits_DeleteGuideById
{
	/** The request type */
	typedef FRequest_DeleteGuideById Request;
	/** The response type */
	typedef FResponse_DeleteGuideById Response;
	/** The delegate type, triggered by the response */
	typedef FDelegate_DeleteGuideById Delegate;
	/** The API object that supports this API call */
	typedef FGuideAPI API;
	/** A human readable name for this API call */
	static FString Name;

	/**
	 * @brief A helper that uses all of the above types to initiate an API call, with a specified priority.
	 * @param [in] InAPI The API object the call will be made with
	 * @param [in] InRequest The request to submit to the API call
	 * @param [in] InDelegate An optional delegate to call when the API call completes, containing the response information
	 * @param [in] InPriority An optional priority override for the API call, for use when API calls are being throttled
	 * @return A http request object, if the call was successfully queued.
	 */
	static FHttpRequestPtr DoCall(TSharedRef<API> InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 InPriority = DefaultRallyHereAPIPriority);
};

/**
 * @brief Get Entity Favorite Guide
 * Get entity's favorite guides
 * 
 * Required Permissions:
 * 
 * - For any entity (including themselves) any of: `guide:*`, `guide:engage:read:any`, `guide:engage:write:any`
 * 
 * - For the entity themselves any of: `guide:engage:read:self`, `guide:engage:write:self`
*/
struct RALLYHEREAPI_API FRequest_GetEntityFavoriteGuide : public FRequest
{
	FRequest_GetEntityFavoriteGuide();
	virtual ~FRequest_GetEntityFavoriteGuide() = default;
	
	/** @brief Given a http request, apply data and settings from this request object to it */
	bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
	/** @brief Compute the URL path for this request instance */
	FString ComputePath() const override;
	/** @brief Get the simplified URL path for this request, not including the verb */
	FName GetSimplifiedPath() const override;
	/** @brief Get the simplified URL path for this request, including the verb */
	FName GetSimplifiedPathWithVerb() const override;
	/** @brief Get the auth context used for this request */
	TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

	/** The specified auth context to use for this request */
	TSharedPtr<FAuthContext> AuthContext;
	ERHAPI_GuideEntityType EntityType;
	FString EntityId;
	TOptional<ERHAPI_SearchFavoriteGuideSort> SortBy;
	TOptional<ERHAPI_SortDirection> Sort;
	TOptional<FString> Cursor;
	TOptional<int32> PageSize;
	TOptional<ERHAPI_GuideEntityType> OwnerEntityType;
	TOptional<FString> OwnerEntityId;
	TOptional<FString> Language;
	TOptional<FString> GuideType;
	TOptional<FString> GameVersion;
	TOptional<FString> Name;
	TOptional<FString> Ref1;
	TOptional<FString> Ref2;
	TOptional<FString> Ref3;
	TOptional<FString> Ref4;
	TOptional<FString> Ref5;
	TOptional<FString> Ref6;
	TOptional<FString> Ref7;
	TOptional<FString> Ref8;
	TOptional<FString> Ref9;
	TOptional<FString> Ref10;
	TOptional<FString> Ref11;
	TOptional<FString> Ref12;
	TOptional<FString> Ref13;
	TOptional<FString> Ref14;
	TOptional<FString> Ref15;
	TOptional<FString> Ref16;
	TOptional<FString> Ref17;
	TOptional<FString> Ref18;
	TOptional<FString> Ref19;
	TOptional<FString> Ref20;
	TOptional<FString> Ref21;
	TOptional<FString> Ref22;
	TOptional<FString> Ref23;
	TOptional<FString> Ref24;
	TOptional<FString> Ref25;
	TOptional<FString> Ref26;
	TOptional<FString> Ref27;
	TOptional<FString> Ref28;
	TOptional<FString> Ref29;
	TOptional<FString> Ref30;
	TOptional<FString> Ref31;
	TOptional<FString> Ref32;
};

/** The response type for FRequest_GetEntityFavoriteGuide */
struct RALLYHEREAPI_API FResponse_GetEntityFavoriteGuide : public FResponseAccessorTemplate<FRHAPI_SearchGuideResponse, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError>
{
	typedef FResponseAccessorTemplate<FRHAPI_SearchGuideResponse, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError> Super;

	FResponse_GetEntityFavoriteGuide(FRequestMetadata InRequestMetadata);
	//virtual ~FResponse_GetEntityFavoriteGuide() = default;
	
	/** @brief Parse out response content into local storage from a given JsonValue */
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	/** @brief Parse out header information for later usage */
	virtual bool ParseHeaders() override;
	/** @brief Gets the description of the response code */
	virtual FString GetHttpResponseCodeDescription(EHttpResponseCodes::Type InHttpResponseCode) const override;

#if ALLOW_LEGACY_RESPONSE_CONTENT
	/** Default Response Content */
	UE_DEPRECATED(5.0, "Direct use of Content is deprecated, please use TryGetDefaultContent(), TryGetContent(), TryGetResponse<>(), or TryGetContentFor<>() instead.")
	FRHAPI_SearchGuideResponse Content;
#endif //ALLOW_LEGACY_RESPONSE_CONTENT

	// Default Response Helpers
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(FRHAPI_SearchGuideResponse& OutContent) const { return TryGetContent<FRHAPI_SearchGuideResponse>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(TOptional<FRHAPI_SearchGuideResponse>& OutContent) const { return TryGetContent<FRHAPI_SearchGuideResponse>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	const FRHAPI_SearchGuideResponse* TryGetDefaultContentAsPointer() const { return TryGetContentAsPointer<FRHAPI_SearchGuideResponse>(); }
	/** @brief Attempt to retrieve the content in the default response */
	TOptional<FRHAPI_SearchGuideResponse> TryGetDefaultContentAsOptional() const { return TryGetContentAsOptional<FRHAPI_SearchGuideResponse>(); }

	// Individual Response Helpers	
	/* Response 200
	Successful Response
	*/
	bool TryGetContentFor200(FRHAPI_SearchGuideResponse& OutContent) const;

	/* Response 403
	 Error Codes: - `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token - `auth_invalid_version` - Invalid Authorization - version - `auth_malformed_access` - Invalid Authorization - malformed access token - `auth_not_jwt` - Invalid Authorization - `auth_token_expired` - Token is expired - `auth_token_format` - Invalid Authorization - {} - `auth_token_invalid_claim` - Token contained invalid claim value: {} - `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type - `auth_token_sig_invalid` - Token Signature is invalid - `auth_token_unknown` - Failed to parse token - `insufficient_permissions` - Insufficient Permissions 
	*/
	bool TryGetContentFor403(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 422
	Validation Error
	*/
	bool TryGetContentFor422(FRHAPI_HTTPValidationError& OutContent) const;

};

/** The delegate class for FRequest_GetEntityFavoriteGuide */
DECLARE_DELEGATE_OneParam(FDelegate_GetEntityFavoriteGuide, const FResponse_GetEntityFavoriteGuide&);

/** @brief A helper metadata object for GetEntityFavoriteGuide that defines the relationship between Request, Delegate, API, etc.  Intended for use with templating */
struct RALLYHEREAPI_API Traits_GetEntityFavoriteGuide
{
	/** The request type */
	typedef FRequest_GetEntityFavoriteGuide Request;
	/** The response type */
	typedef FResponse_GetEntityFavoriteGuide Response;
	/** The delegate type, triggered by the response */
	typedef FDelegate_GetEntityFavoriteGuide Delegate;
	/** The API object that supports this API call */
	typedef FGuideAPI API;
	/** A human readable name for this API call */
	static FString Name;

	/**
	 * @brief A helper that uses all of the above types to initiate an API call, with a specified priority.
	 * @param [in] InAPI The API object the call will be made with
	 * @param [in] InRequest The request to submit to the API call
	 * @param [in] InDelegate An optional delegate to call when the API call completes, containing the response information
	 * @param [in] InPriority An optional priority override for the API call, for use when API calls are being throttled
	 * @return A http request object, if the call was successfully queued.
	 */
	static FHttpRequestPtr DoCall(TSharedRef<API> InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 InPriority = DefaultRallyHereAPIPriority);
};

/**
 * @brief Get Entity Guide Engagement
 * Get entity's engagement for a set of guide ids
 * 
 * Required Permissions:
 * 
 * - For any entity (including themselves) any of: `guide:*`, `guide:engage:read:any`, `guide:engage:write:any`
 * 
 * - For the entity themselves any of: `guide:engage:read:self`, `guide:engage:write:self`
*/
struct RALLYHEREAPI_API FRequest_GetEntityGuideEngagement : public FRequest
{
	FRequest_GetEntityGuideEngagement();
	virtual ~FRequest_GetEntityGuideEngagement() = default;
	
	/** @brief Given a http request, apply data and settings from this request object to it */
	bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
	/** @brief Compute the URL path for this request instance */
	FString ComputePath() const override;
	/** @brief Get the simplified URL path for this request, not including the verb */
	FName GetSimplifiedPath() const override;
	/** @brief Get the simplified URL path for this request, including the verb */
	FName GetSimplifiedPathWithVerb() const override;
	/** @brief Get the auth context used for this request */
	TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

	/** The specified auth context to use for this request */
	TSharedPtr<FAuthContext> AuthContext;
	ERHAPI_GuideEntityType EntityType;
	FString EntityId;
	FRHAPI_ManyEntityGuideEngagementRequest ManyEntityGuideEngagementRequest;
};

/** The response type for FRequest_GetEntityGuideEngagement */
struct RALLYHEREAPI_API FResponse_GetEntityGuideEngagement : public FResponseAccessorTemplate<FRHAPI_ManyEntityGuideEngagement, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError>
{
	typedef FResponseAccessorTemplate<FRHAPI_ManyEntityGuideEngagement, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError> Super;

	FResponse_GetEntityGuideEngagement(FRequestMetadata InRequestMetadata);
	//virtual ~FResponse_GetEntityGuideEngagement() = default;
	
	/** @brief Parse out response content into local storage from a given JsonValue */
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	/** @brief Parse out header information for later usage */
	virtual bool ParseHeaders() override;
	/** @brief Gets the description of the response code */
	virtual FString GetHttpResponseCodeDescription(EHttpResponseCodes::Type InHttpResponseCode) const override;

#if ALLOW_LEGACY_RESPONSE_CONTENT
	/** Default Response Content */
	UE_DEPRECATED(5.0, "Direct use of Content is deprecated, please use TryGetDefaultContent(), TryGetContent(), TryGetResponse<>(), or TryGetContentFor<>() instead.")
	FRHAPI_ManyEntityGuideEngagement Content;
#endif //ALLOW_LEGACY_RESPONSE_CONTENT

	// Default Response Helpers
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(FRHAPI_ManyEntityGuideEngagement& OutContent) const { return TryGetContent<FRHAPI_ManyEntityGuideEngagement>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(TOptional<FRHAPI_ManyEntityGuideEngagement>& OutContent) const { return TryGetContent<FRHAPI_ManyEntityGuideEngagement>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	const FRHAPI_ManyEntityGuideEngagement* TryGetDefaultContentAsPointer() const { return TryGetContentAsPointer<FRHAPI_ManyEntityGuideEngagement>(); }
	/** @brief Attempt to retrieve the content in the default response */
	TOptional<FRHAPI_ManyEntityGuideEngagement> TryGetDefaultContentAsOptional() const { return TryGetContentAsOptional<FRHAPI_ManyEntityGuideEngagement>(); }

	// Individual Response Helpers	
	/* Response 200
	Successful Response
	*/
	bool TryGetContentFor200(FRHAPI_ManyEntityGuideEngagement& OutContent) const;

	/* Response 403
	 Error Codes: - `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token - `auth_invalid_version` - Invalid Authorization - version - `auth_malformed_access` - Invalid Authorization - malformed access token - `auth_not_jwt` - Invalid Authorization - `auth_token_expired` - Token is expired - `auth_token_format` - Invalid Authorization - {} - `auth_token_invalid_claim` - Token contained invalid claim value: {} - `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type - `auth_token_sig_invalid` - Token Signature is invalid - `auth_token_unknown` - Failed to parse token - `insufficient_permissions` - Insufficient Permissions 
	*/
	bool TryGetContentFor403(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 422
	Validation Error
	*/
	bool TryGetContentFor422(FRHAPI_HTTPValidationError& OutContent) const;

};

/** The delegate class for FRequest_GetEntityGuideEngagement */
DECLARE_DELEGATE_OneParam(FDelegate_GetEntityGuideEngagement, const FResponse_GetEntityGuideEngagement&);

/** @brief A helper metadata object for GetEntityGuideEngagement that defines the relationship between Request, Delegate, API, etc.  Intended for use with templating */
struct RALLYHEREAPI_API Traits_GetEntityGuideEngagement
{
	/** The request type */
	typedef FRequest_GetEntityGuideEngagement Request;
	/** The response type */
	typedef FResponse_GetEntityGuideEngagement Response;
	/** The delegate type, triggered by the response */
	typedef FDelegate_GetEntityGuideEngagement Delegate;
	/** The API object that supports this API call */
	typedef FGuideAPI API;
	/** A human readable name for this API call */
	static FString Name;

	/**
	 * @brief A helper that uses all of the above types to initiate an API call, with a specified priority.
	 * @param [in] InAPI The API object the call will be made with
	 * @param [in] InRequest The request to submit to the API call
	 * @param [in] InDelegate An optional delegate to call when the API call completes, containing the response information
	 * @param [in] InPriority An optional priority override for the API call, for use when API calls are being throttled
	 * @return A http request object, if the call was successfully queued.
	 */
	static FHttpRequestPtr DoCall(TSharedRef<API> InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 InPriority = DefaultRallyHereAPIPriority);
};

/**
 * @brief Get Guide By Id
 * Get guide by ID
 * 
 * Required Permissions:
 * 
 * - For any entity (including themselves) any of: `guide:*`, `guide:read`
*/
struct RALLYHEREAPI_API FRequest_GetGuideById : public FRequest
{
	FRequest_GetGuideById();
	virtual ~FRequest_GetGuideById() = default;
	
	/** @brief Given a http request, apply data and settings from this request object to it */
	bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
	/** @brief Compute the URL path for this request instance */
	FString ComputePath() const override;
	/** @brief Get the simplified URL path for this request, not including the verb */
	FName GetSimplifiedPath() const override;
	/** @brief Get the simplified URL path for this request, including the verb */
	FName GetSimplifiedPathWithVerb() const override;
	/** @brief Get the auth context used for this request */
	TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

	/** The specified auth context to use for this request */
	TSharedPtr<FAuthContext> AuthContext;
	FGuid GuideId;
};

/** The response type for FRequest_GetGuideById */
struct RALLYHEREAPI_API FResponse_GetGuideById : public FResponseAccessorTemplate<FRHAPI_GuideFull, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError>
{
	typedef FResponseAccessorTemplate<FRHAPI_GuideFull, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError> Super;

	FResponse_GetGuideById(FRequestMetadata InRequestMetadata);
	//virtual ~FResponse_GetGuideById() = default;
	
	/** @brief Parse out response content into local storage from a given JsonValue */
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	/** @brief Parse out header information for later usage */
	virtual bool ParseHeaders() override;
	/** @brief Gets the description of the response code */
	virtual FString GetHttpResponseCodeDescription(EHttpResponseCodes::Type InHttpResponseCode) const override;

#if ALLOW_LEGACY_RESPONSE_CONTENT
	/** Default Response Content */
	UE_DEPRECATED(5.0, "Direct use of Content is deprecated, please use TryGetDefaultContent(), TryGetContent(), TryGetResponse<>(), or TryGetContentFor<>() instead.")
	FRHAPI_GuideFull Content;
#endif //ALLOW_LEGACY_RESPONSE_CONTENT

	// Default Response Helpers
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(FRHAPI_GuideFull& OutContent) const { return TryGetContent<FRHAPI_GuideFull>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(TOptional<FRHAPI_GuideFull>& OutContent) const { return TryGetContent<FRHAPI_GuideFull>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	const FRHAPI_GuideFull* TryGetDefaultContentAsPointer() const { return TryGetContentAsPointer<FRHAPI_GuideFull>(); }
	/** @brief Attempt to retrieve the content in the default response */
	TOptional<FRHAPI_GuideFull> TryGetDefaultContentAsOptional() const { return TryGetContentAsOptional<FRHAPI_GuideFull>(); }

	// Individual Response Helpers	
	/* Response 200
	Successful Response
	*/
	bool TryGetContentFor200(FRHAPI_GuideFull& OutContent) const;

	/* Response 403
	 Error Codes: - `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token - `auth_invalid_version` - Invalid Authorization - version - `auth_malformed_access` - Invalid Authorization - malformed access token - `auth_not_jwt` - Invalid Authorization - `auth_token_expired` - Token is expired - `auth_token_format` - Invalid Authorization - {} - `auth_token_invalid_claim` - Token contained invalid claim value: {} - `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type - `auth_token_sig_invalid` - Token Signature is invalid - `auth_token_unknown` - Failed to parse token - `insufficient_permissions` - Insufficient Permissions 
	*/
	bool TryGetContentFor403(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 404
	Error Codes: - `ErrorCodes.not_found` - Object was not found 
	*/
	bool TryGetContentFor404(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 422
	Validation Error
	*/
	bool TryGetContentFor422(FRHAPI_HTTPValidationError& OutContent) const;

};

/** The delegate class for FRequest_GetGuideById */
DECLARE_DELEGATE_OneParam(FDelegate_GetGuideById, const FResponse_GetGuideById&);

/** @brief A helper metadata object for GetGuideById that defines the relationship between Request, Delegate, API, etc.  Intended for use with templating */
struct RALLYHEREAPI_API Traits_GetGuideById
{
	/** The request type */
	typedef FRequest_GetGuideById Request;
	/** The response type */
	typedef FResponse_GetGuideById Response;
	/** The delegate type, triggered by the response */
	typedef FDelegate_GetGuideById Delegate;
	/** The API object that supports this API call */
	typedef FGuideAPI API;
	/** A human readable name for this API call */
	static FString Name;

	/**
	 * @brief A helper that uses all of the above types to initiate an API call, with a specified priority.
	 * @param [in] InAPI The API object the call will be made with
	 * @param [in] InRequest The request to submit to the API call
	 * @param [in] InDelegate An optional delegate to call when the API call completes, containing the response information
	 * @param [in] InPriority An optional priority override for the API call, for use when API calls are being throttled
	 * @return A http request object, if the call was successfully queued.
	 */
	static FHttpRequestPtr DoCall(TSharedRef<API> InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 InPriority = DefaultRallyHereAPIPriority);
};

/**
 * @brief Remove Entity Favorite Guide
 * Remove a guide from entity's favorites
 * 
 * Required Permissions:
 * 
 * - For any entity (including themselves) any of: `guide:*`, `guide:engage:write:any`
 * 
 * - For the entity themselves : `guide:engage:write:self`
*/
struct RALLYHEREAPI_API FRequest_RemoveEntityFavoriteGuide : public FRequest
{
	FRequest_RemoveEntityFavoriteGuide();
	virtual ~FRequest_RemoveEntityFavoriteGuide() = default;
	
	/** @brief Given a http request, apply data and settings from this request object to it */
	bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
	/** @brief Compute the URL path for this request instance */
	FString ComputePath() const override;
	/** @brief Get the simplified URL path for this request, not including the verb */
	FName GetSimplifiedPath() const override;
	/** @brief Get the simplified URL path for this request, including the verb */
	FName GetSimplifiedPathWithVerb() const override;
	/** @brief Get the auth context used for this request */
	TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

	/** The specified auth context to use for this request */
	TSharedPtr<FAuthContext> AuthContext;
	ERHAPI_GuideEntityType EntityType;
	FString EntityId;
	FGuid GuideId;
};

/** The response type for FRequest_RemoveEntityFavoriteGuide */
struct RALLYHEREAPI_API FResponse_RemoveEntityFavoriteGuide : public FResponseAccessorTemplate<FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError>
{
	typedef FResponseAccessorTemplate<FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError> Super;

	FResponse_RemoveEntityFavoriteGuide(FRequestMetadata InRequestMetadata);
	//virtual ~FResponse_RemoveEntityFavoriteGuide() = default;
	
	/** @brief Parse out response content into local storage from a given JsonValue */
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	/** @brief Parse out header information for later usage */
	virtual bool ParseHeaders() override;
	/** @brief Gets the description of the response code */
	virtual FString GetHttpResponseCodeDescription(EHttpResponseCodes::Type InHttpResponseCode) const override;

#if ALLOW_LEGACY_RESPONSE_CONTENT

#endif //ALLOW_LEGACY_RESPONSE_CONTENT


	// Individual Response Helpers	
	/* Response 204
	Successful Response
	*/

	/* Response 403
	 Error Codes: - `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token - `auth_invalid_version` - Invalid Authorization - version - `auth_malformed_access` - Invalid Authorization - malformed access token - `auth_not_jwt` - Invalid Authorization - `auth_token_expired` - Token is expired - `auth_token_format` - Invalid Authorization - {} - `auth_token_invalid_claim` - Token contained invalid claim value: {} - `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type - `auth_token_sig_invalid` - Token Signature is invalid - `auth_token_unknown` - Failed to parse token - `insufficient_permissions` - Insufficient Permissions 
	*/
	bool TryGetContentFor403(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 422
	Validation Error
	*/
	bool TryGetContentFor422(FRHAPI_HTTPValidationError& OutContent) const;

};

/** The delegate class for FRequest_RemoveEntityFavoriteGuide */
DECLARE_DELEGATE_OneParam(FDelegate_RemoveEntityFavoriteGuide, const FResponse_RemoveEntityFavoriteGuide&);

/** @brief A helper metadata object for RemoveEntityFavoriteGuide that defines the relationship between Request, Delegate, API, etc.  Intended for use with templating */
struct RALLYHEREAPI_API Traits_RemoveEntityFavoriteGuide
{
	/** The request type */
	typedef FRequest_RemoveEntityFavoriteGuide Request;
	/** The response type */
	typedef FResponse_RemoveEntityFavoriteGuide Response;
	/** The delegate type, triggered by the response */
	typedef FDelegate_RemoveEntityFavoriteGuide Delegate;
	/** The API object that supports this API call */
	typedef FGuideAPI API;
	/** A human readable name for this API call */
	static FString Name;

	/**
	 * @brief A helper that uses all of the above types to initiate an API call, with a specified priority.
	 * @param [in] InAPI The API object the call will be made with
	 * @param [in] InRequest The request to submit to the API call
	 * @param [in] InDelegate An optional delegate to call when the API call completes, containing the response information
	 * @param [in] InPriority An optional priority override for the API call, for use when API calls are being throttled
	 * @return A http request object, if the call was successfully queued.
	 */
	static FHttpRequestPtr DoCall(TSharedRef<API> InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 InPriority = DefaultRallyHereAPIPriority);
};

/**
 * @brief Search Guides
 * Search all guides
 * 
 * Required Permissions:
 * 
 * - For any entity (including themselves) any of: `guide:*`, `guide:read`
*/
struct RALLYHEREAPI_API FRequest_SearchGuides : public FRequest
{
	FRequest_SearchGuides();
	virtual ~FRequest_SearchGuides() = default;
	
	/** @brief Given a http request, apply data and settings from this request object to it */
	bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
	/** @brief Compute the URL path for this request instance */
	FString ComputePath() const override;
	/** @brief Get the simplified URL path for this request, not including the verb */
	FName GetSimplifiedPath() const override;
	/** @brief Get the simplified URL path for this request, including the verb */
	FName GetSimplifiedPathWithVerb() const override;
	/** @brief Get the auth context used for this request */
	TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

	/** The specified auth context to use for this request */
	TSharedPtr<FAuthContext> AuthContext;
	TOptional<ERHAPI_SearchGuideSort> SortBy;
	TOptional<ERHAPI_SortDirection> Sort;
	TOptional<FString> Cursor;
	TOptional<int32> PageSize;
	TOptional<ERHAPI_GuideEntityType> OwnerEntityType;
	TOptional<FString> OwnerEntityId;
	TOptional<FString> Language;
	TOptional<FString> GuideType;
	TOptional<FString> GameVersion;
	TOptional<FString> Name;
	TOptional<FString> Ref1;
	TOptional<FString> Ref2;
	TOptional<FString> Ref3;
	TOptional<FString> Ref4;
	TOptional<FString> Ref5;
	TOptional<FString> Ref6;
	TOptional<FString> Ref7;
	TOptional<FString> Ref8;
	TOptional<FString> Ref9;
	TOptional<FString> Ref10;
	TOptional<FString> Ref11;
	TOptional<FString> Ref12;
	TOptional<FString> Ref13;
	TOptional<FString> Ref14;
	TOptional<FString> Ref15;
	TOptional<FString> Ref16;
	TOptional<FString> Ref17;
	TOptional<FString> Ref18;
	TOptional<FString> Ref19;
	TOptional<FString> Ref20;
	TOptional<FString> Ref21;
	TOptional<FString> Ref22;
	TOptional<FString> Ref23;
	TOptional<FString> Ref24;
	TOptional<FString> Ref25;
	TOptional<FString> Ref26;
	TOptional<FString> Ref27;
	TOptional<FString> Ref28;
	TOptional<FString> Ref29;
	TOptional<FString> Ref30;
	TOptional<FString> Ref31;
	TOptional<FString> Ref32;
};

/** The response type for FRequest_SearchGuides */
struct RALLYHEREAPI_API FResponse_SearchGuides : public FResponseAccessorTemplate<FRHAPI_SearchGuideResponse, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError>
{
	typedef FResponseAccessorTemplate<FRHAPI_SearchGuideResponse, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError> Super;

	FResponse_SearchGuides(FRequestMetadata InRequestMetadata);
	//virtual ~FResponse_SearchGuides() = default;
	
	/** @brief Parse out response content into local storage from a given JsonValue */
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	/** @brief Parse out header information for later usage */
	virtual bool ParseHeaders() override;
	/** @brief Gets the description of the response code */
	virtual FString GetHttpResponseCodeDescription(EHttpResponseCodes::Type InHttpResponseCode) const override;

#if ALLOW_LEGACY_RESPONSE_CONTENT
	/** Default Response Content */
	UE_DEPRECATED(5.0, "Direct use of Content is deprecated, please use TryGetDefaultContent(), TryGetContent(), TryGetResponse<>(), or TryGetContentFor<>() instead.")
	FRHAPI_SearchGuideResponse Content;
#endif //ALLOW_LEGACY_RESPONSE_CONTENT

	// Default Response Helpers
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(FRHAPI_SearchGuideResponse& OutContent) const { return TryGetContent<FRHAPI_SearchGuideResponse>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(TOptional<FRHAPI_SearchGuideResponse>& OutContent) const { return TryGetContent<FRHAPI_SearchGuideResponse>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	const FRHAPI_SearchGuideResponse* TryGetDefaultContentAsPointer() const { return TryGetContentAsPointer<FRHAPI_SearchGuideResponse>(); }
	/** @brief Attempt to retrieve the content in the default response */
	TOptional<FRHAPI_SearchGuideResponse> TryGetDefaultContentAsOptional() const { return TryGetContentAsOptional<FRHAPI_SearchGuideResponse>(); }

	// Individual Response Helpers	
	/* Response 200
	Successful Response
	*/
	bool TryGetContentFor200(FRHAPI_SearchGuideResponse& OutContent) const;

	/* Response 403
	 Error Codes: - `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token - `auth_invalid_version` - Invalid Authorization - version - `auth_malformed_access` - Invalid Authorization - malformed access token - `auth_not_jwt` - Invalid Authorization - `auth_token_expired` - Token is expired - `auth_token_format` - Invalid Authorization - {} - `auth_token_invalid_claim` - Token contained invalid claim value: {} - `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type - `auth_token_sig_invalid` - Token Signature is invalid - `auth_token_unknown` - Failed to parse token - `insufficient_permissions` - Insufficient Permissions 
	*/
	bool TryGetContentFor403(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 422
	Validation Error
	*/
	bool TryGetContentFor422(FRHAPI_HTTPValidationError& OutContent) const;

};

/** The delegate class for FRequest_SearchGuides */
DECLARE_DELEGATE_OneParam(FDelegate_SearchGuides, const FResponse_SearchGuides&);

/** @brief A helper metadata object for SearchGuides that defines the relationship between Request, Delegate, API, etc.  Intended for use with templating */
struct RALLYHEREAPI_API Traits_SearchGuides
{
	/** The request type */
	typedef FRequest_SearchGuides Request;
	/** The response type */
	typedef FResponse_SearchGuides Response;
	/** The delegate type, triggered by the response */
	typedef FDelegate_SearchGuides Delegate;
	/** The API object that supports this API call */
	typedef FGuideAPI API;
	/** A human readable name for this API call */
	static FString Name;

	/**
	 * @brief A helper that uses all of the above types to initiate an API call, with a specified priority.
	 * @param [in] InAPI The API object the call will be made with
	 * @param [in] InRequest The request to submit to the API call
	 * @param [in] InDelegate An optional delegate to call when the API call completes, containing the response information
	 * @param [in] InPriority An optional priority override for the API call, for use when API calls are being throttled
	 * @return A http request object, if the call was successfully queued.
	 */
	static FHttpRequestPtr DoCall(TSharedRef<API> InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 InPriority = DefaultRallyHereAPIPriority);
};

/**
 * @brief Update Guide By Id
 * Update a guide
 * 
 * Required Permissions:
 * 
 * - For any entity (including themselves) any of: `guide:*`, `guide:write:any`
 * 
 * - For the entity themselves : `guide:write:self`
*/
struct RALLYHEREAPI_API FRequest_UpdateGuideById : public FRequest
{
	FRequest_UpdateGuideById();
	virtual ~FRequest_UpdateGuideById() = default;
	
	/** @brief Given a http request, apply data and settings from this request object to it */
	bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
	/** @brief Compute the URL path for this request instance */
	FString ComputePath() const override;
	/** @brief Get the simplified URL path for this request, not including the verb */
	FName GetSimplifiedPath() const override;
	/** @brief Get the simplified URL path for this request, including the verb */
	FName GetSimplifiedPathWithVerb() const override;
	/** @brief Get the auth context used for this request */
	TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

	/** The specified auth context to use for this request */
	TSharedPtr<FAuthContext> AuthContext;
	FGuid GuideId;
	FRHAPI_GuideCreateRequest GuideCreateRequest;
};

/** The response type for FRequest_UpdateGuideById */
struct RALLYHEREAPI_API FResponse_UpdateGuideById : public FResponseAccessorTemplate<FRHAPI_GuideFull, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError>
{
	typedef FResponseAccessorTemplate<FRHAPI_GuideFull, FRHAPI_HzApiErrorModel, FRHAPI_HTTPValidationError> Super;

	FResponse_UpdateGuideById(FRequestMetadata InRequestMetadata);
	//virtual ~FResponse_UpdateGuideById() = default;
	
	/** @brief Parse out response content into local storage from a given JsonValue */
	virtual bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	/** @brief Parse out header information for later usage */
	virtual bool ParseHeaders() override;
	/** @brief Gets the description of the response code */
	virtual FString GetHttpResponseCodeDescription(EHttpResponseCodes::Type InHttpResponseCode) const override;

#if ALLOW_LEGACY_RESPONSE_CONTENT
	/** Default Response Content */
	UE_DEPRECATED(5.0, "Direct use of Content is deprecated, please use TryGetDefaultContent(), TryGetContent(), TryGetResponse<>(), or TryGetContentFor<>() instead.")
	FRHAPI_GuideFull Content;
#endif //ALLOW_LEGACY_RESPONSE_CONTENT

	// Default Response Helpers
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(FRHAPI_GuideFull& OutContent) const { return TryGetContent<FRHAPI_GuideFull>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	bool TryGetDefaultContent(TOptional<FRHAPI_GuideFull>& OutContent) const { return TryGetContent<FRHAPI_GuideFull>(OutContent); }
	/** @brief Attempt to retrieve the content in the default response */
	const FRHAPI_GuideFull* TryGetDefaultContentAsPointer() const { return TryGetContentAsPointer<FRHAPI_GuideFull>(); }
	/** @brief Attempt to retrieve the content in the default response */
	TOptional<FRHAPI_GuideFull> TryGetDefaultContentAsOptional() const { return TryGetContentAsOptional<FRHAPI_GuideFull>(); }

	// Individual Response Helpers	
	/* Response 200
	Successful Response
	*/
	bool TryGetContentFor200(FRHAPI_GuideFull& OutContent) const;

	/* Response 403
	 Error Codes: - `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token - `auth_invalid_version` - Invalid Authorization - version - `auth_malformed_access` - Invalid Authorization - malformed access token - `auth_not_jwt` - Invalid Authorization - `auth_token_expired` - Token is expired - `auth_token_format` - Invalid Authorization - {} - `auth_token_invalid_claim` - Token contained invalid claim value: {} - `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type - `auth_token_sig_invalid` - Token Signature is invalid - `auth_token_unknown` - Failed to parse token - `insufficient_permissions` - Insufficient Permissions 
	*/
	bool TryGetContentFor403(FRHAPI_HzApiErrorModel& OutContent) const;

	/* Response 422
	Validation Error
	*/
	bool TryGetContentFor422(FRHAPI_HTTPValidationError& OutContent) const;

};

/** The delegate class for FRequest_UpdateGuideById */
DECLARE_DELEGATE_OneParam(FDelegate_UpdateGuideById, const FResponse_UpdateGuideById&);

/** @brief A helper metadata object for UpdateGuideById that defines the relationship between Request, Delegate, API, etc.  Intended for use with templating */
struct RALLYHEREAPI_API Traits_UpdateGuideById
{
	/** The request type */
	typedef FRequest_UpdateGuideById Request;
	/** The response type */
	typedef FResponse_UpdateGuideById Response;
	/** The delegate type, triggered by the response */
	typedef FDelegate_UpdateGuideById Delegate;
	/** The API object that supports this API call */
	typedef FGuideAPI API;
	/** A human readable name for this API call */
	static FString Name;

	/**
	 * @brief A helper that uses all of the above types to initiate an API call, with a specified priority.
	 * @param [in] InAPI The API object the call will be made with
	 * @param [in] InRequest The request to submit to the API call
	 * @param [in] InDelegate An optional delegate to call when the API call completes, containing the response information
	 * @param [in] InPriority An optional priority override for the API call, for use when API calls are being throttled
	 * @return A http request object, if the call was successfully queued.
	 */
	static FHttpRequestPtr DoCall(TSharedRef<API> InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 InPriority = DefaultRallyHereAPIPriority);
};


/** The API class itself, which will handle calls to */
class RALLYHEREAPI_API FGuideAPI : public FAPI
{
public:
	FGuideAPI();
	virtual ~FGuideAPI();

	FHttpRequestPtr AddEntityFavoriteGuide(const FRequest_AddEntityFavoriteGuide& Request, const FDelegate_AddEntityFavoriteGuide& Delegate = FDelegate_AddEntityFavoriteGuide(), int32 Priority = DefaultRallyHereAPIPriority);
	void OnAddEntityFavoriteGuideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_AddEntityFavoriteGuide Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
	FHttpRequestPtr AddEntityRatingForGuide(const FRequest_AddEntityRatingForGuide& Request, const FDelegate_AddEntityRatingForGuide& Delegate = FDelegate_AddEntityRatingForGuide(), int32 Priority = DefaultRallyHereAPIPriority);
	void OnAddEntityRatingForGuideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_AddEntityRatingForGuide Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
	FHttpRequestPtr CreateGuide(const FRequest_CreateGuide& Request, const FDelegate_CreateGuide& Delegate = FDelegate_CreateGuide(), int32 Priority = DefaultRallyHereAPIPriority);
	void OnCreateGuideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_CreateGuide Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
	FHttpRequestPtr DeleteGuideById(const FRequest_DeleteGuideById& Request, const FDelegate_DeleteGuideById& Delegate = FDelegate_DeleteGuideById(), int32 Priority = DefaultRallyHereAPIPriority);
	void OnDeleteGuideByIdResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_DeleteGuideById Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
	FHttpRequestPtr GetEntityFavoriteGuide(const FRequest_GetEntityFavoriteGuide& Request, const FDelegate_GetEntityFavoriteGuide& Delegate = FDelegate_GetEntityFavoriteGuide(), int32 Priority = DefaultRallyHereAPIPriority);
	void OnGetEntityFavoriteGuideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetEntityFavoriteGuide Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
	FHttpRequestPtr GetEntityGuideEngagement(const FRequest_GetEntityGuideEngagement& Request, const FDelegate_GetEntityGuideEngagement& Delegate = FDelegate_GetEntityGuideEngagement(), int32 Priority = DefaultRallyHereAPIPriority);
	void OnGetEntityGuideEngagementResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetEntityGuideEngagement Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
	FHttpRequestPtr GetGuideById(const FRequest_GetGuideById& Request, const FDelegate_GetGuideById& Delegate = FDelegate_GetGuideById(), int32 Priority = DefaultRallyHereAPIPriority);
	void OnGetGuideByIdResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetGuideById Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
	FHttpRequestPtr RemoveEntityFavoriteGuide(const FRequest_RemoveEntityFavoriteGuide& Request, const FDelegate_RemoveEntityFavoriteGuide& Delegate = FDelegate_RemoveEntityFavoriteGuide(), int32 Priority = DefaultRallyHereAPIPriority);
	void OnRemoveEntityFavoriteGuideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_RemoveEntityFavoriteGuide Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
	FHttpRequestPtr SearchGuides(const FRequest_SearchGuides& Request, const FDelegate_SearchGuides& Delegate = FDelegate_SearchGuides(), int32 Priority = DefaultRallyHereAPIPriority);
	void OnSearchGuidesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SearchGuides Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
	FHttpRequestPtr UpdateGuideById(const FRequest_UpdateGuideById& Request, const FDelegate_UpdateGuideById& Delegate = FDelegate_UpdateGuideById(), int32 Priority = DefaultRallyHereAPIPriority);
	void OnUpdateGuideByIdResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_UpdateGuideById Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);

};



}
