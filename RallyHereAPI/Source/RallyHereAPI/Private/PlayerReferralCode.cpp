// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "PlayerReferralCode.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_PlayerReferralCode

void FRHAPI_PlayerReferralCode::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("player_uuid"));
	RallyHereAPI::WriteJsonValue(Writer, PlayerUuid);
	Writer->WriteIdentifierPrefix(TEXT("referral_code"));
	RallyHereAPI::WriteJsonValue(Writer, ReferralCode);
	Writer->WriteIdentifierPrefix(TEXT("created_datetime"));
	RallyHereAPI::WriteJsonValue(Writer, CreatedDatetime);
	Writer->WriteIdentifierPrefix(TEXT("last_modified_timestamp"));
	RallyHereAPI::WriteJsonValue(Writer, LastModifiedTimestamp);
	Writer->WriteObjectEnd();
}

bool FRHAPI_PlayerReferralCode::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonPlayerUuidField = (*Object)->TryGetField(TEXT("player_uuid"));
	const bool PlayerUuid_IsValid = JsonPlayerUuidField.IsValid() && (!JsonPlayerUuidField->IsNull() && TryGetJsonValue(JsonPlayerUuidField, PlayerUuid));
	ParseSuccess &= PlayerUuid_IsValid; 
	const TSharedPtr<FJsonValue> JsonReferralCodeField = (*Object)->TryGetField(TEXT("referral_code"));
	const bool ReferralCode_IsValid = JsonReferralCodeField.IsValid() && (!JsonReferralCodeField->IsNull() && TryGetJsonValue(JsonReferralCodeField, ReferralCode));
	ParseSuccess &= ReferralCode_IsValid; 
	const TSharedPtr<FJsonValue> JsonCreatedDatetimeField = (*Object)->TryGetField(TEXT("created_datetime"));
	const bool CreatedDatetime_IsValid = JsonCreatedDatetimeField.IsValid() && (!JsonCreatedDatetimeField->IsNull() && TryGetJsonValue(JsonCreatedDatetimeField, CreatedDatetime));
	ParseSuccess &= CreatedDatetime_IsValid; 
	const TSharedPtr<FJsonValue> JsonLastModifiedTimestampField = (*Object)->TryGetField(TEXT("last_modified_timestamp"));
	const bool LastModifiedTimestamp_IsValid = JsonLastModifiedTimestampField.IsValid() && (!JsonLastModifiedTimestampField->IsNull() && TryGetJsonValue(JsonLastModifiedTimestampField, LastModifiedTimestamp));
	ParseSuccess &= LastModifiedTimestamp_IsValid; 

	return ParseSuccess;
}

