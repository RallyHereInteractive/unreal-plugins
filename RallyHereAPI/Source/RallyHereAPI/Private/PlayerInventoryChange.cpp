// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "PlayerInventoryChange.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_PlayerInventoryChange

void FRHAPI_PlayerInventoryChange::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	if (BeforeItemId_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("before_item_id"));
		RallyHereAPI::WriteJsonValue(Writer, BeforeItemId_Optional);
	}
	if (AfterItemId_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("after_item_id"));
		RallyHereAPI::WriteJsonValue(Writer, AfterItemId_Optional);
	}
	if (Before_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("before"));
		RallyHereAPI::WriteJsonValue(Writer, Before_Optional);
	}
	if (After_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("after"));
		RallyHereAPI::WriteJsonValue(Writer, After_Optional);
	}
	Writer->WriteObjectEnd();
}

bool FRHAPI_PlayerInventoryChange::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonBeforeItemIdField = (*Object)->TryGetField(TEXT("before_item_id"));
	if (JsonBeforeItemIdField.IsValid())
	{
		BeforeItemId_IsSet = TryGetJsonValue(JsonBeforeItemIdField, BeforeItemId_Optional);
		ParseSuccess &= BeforeItemId_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonAfterItemIdField = (*Object)->TryGetField(TEXT("after_item_id"));
	if (JsonAfterItemIdField.IsValid())
	{
		AfterItemId_IsSet = TryGetJsonValue(JsonAfterItemIdField, AfterItemId_Optional);
		ParseSuccess &= AfterItemId_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonBeforeField = (*Object)->TryGetField(TEXT("before"));
	if (JsonBeforeField.IsValid())
	{
		Before_IsSet = TryGetJsonValue(JsonBeforeField, Before_Optional);
		ParseSuccess &= Before_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonAfterField = (*Object)->TryGetField(TEXT("after"));
	if (JsonAfterField.IsValid())
	{
		After_IsSet = TryGetJsonValue(JsonAfterField, After_Optional);
		ParseSuccess &= After_IsSet;
	}

	return ParseSuccess;
}

