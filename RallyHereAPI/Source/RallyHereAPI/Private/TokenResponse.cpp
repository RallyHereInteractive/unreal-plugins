// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "TokenResponse.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_TokenResponse

void FRHAPI_TokenResponse::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("access_token"));
	RallyHereAPI::WriteJsonValue(Writer, AccessToken);
	Writer->WriteIdentifierPrefix(TEXT("token_type"));
	RallyHereAPI::WriteJsonValue(Writer, TokenType);
	if (RefreshToken_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("refresh_token"));
		RallyHereAPI::WriteJsonValue(Writer, RefreshToken_Optional);
	}
	Writer->WriteIdentifierPrefix(TEXT("expires_in"));
	RallyHereAPI::WriteJsonValue(Writer, ExpiresIn);
	Writer->WriteObjectEnd();
}

bool FRHAPI_TokenResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonAccessTokenField = (*Object)->TryGetField(TEXT("access_token"));
	const bool AccessToken_IsValid = JsonAccessTokenField.IsValid() && (!JsonAccessTokenField->IsNull() && TryGetJsonValue(JsonAccessTokenField, AccessToken));
	ParseSuccess &= AccessToken_IsValid; 
	const TSharedPtr<FJsonValue> JsonTokenTypeField = (*Object)->TryGetField(TEXT("token_type"));
	const bool TokenType_IsValid = JsonTokenTypeField.IsValid() && (!JsonTokenTypeField->IsNull() && TryGetJsonValue(JsonTokenTypeField, TokenType));
	ParseSuccess &= TokenType_IsValid; 
	const TSharedPtr<FJsonValue> JsonRefreshTokenField = (*Object)->TryGetField(TEXT("refresh_token"));
	if (JsonRefreshTokenField.IsValid())
	{
		RefreshToken_IsSet = TryGetJsonValue(JsonRefreshTokenField, RefreshToken_Optional);
		ParseSuccess &= RefreshToken_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonExpiresInField = (*Object)->TryGetField(TEXT("expires_in"));
	const bool ExpiresIn_IsValid = JsonExpiresInField.IsValid() && (!JsonExpiresInField->IsNull() && TryGetJsonValue(JsonExpiresInField, ExpiresIn));
	ParseSuccess &= ExpiresIn_IsValid; 

	return ParseSuccess;
}

