// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "PresencePlatform.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for ERHAPI_PresencePlatform
FString EnumToString(const ERHAPI_PresencePlatform& Value)
{
	switch (Value)
	{
	case ERHAPI_PresencePlatform::Anon:
		return TEXT("Anon");
	case ERHAPI_PresencePlatform::Basic:
		return TEXT("Basic");
	case ERHAPI_PresencePlatform::XboxLive:
		return TEXT("XboxLive");
	case ERHAPI_PresencePlatform::Psn:
		return TEXT("PSN");
	case ERHAPI_PresencePlatform::NintendoNaid:
		return TEXT("NintendoNAID");
	case ERHAPI_PresencePlatform::NintendoSwitch:
		return TEXT("NintendoSwitch");
	case ERHAPI_PresencePlatform::NintendoPpid:
		return TEXT("NintendoPPID");
	case ERHAPI_PresencePlatform::Google:
		return TEXT("Google");
	case ERHAPI_PresencePlatform::GooglePlay:
		return TEXT("GooglePlay");
	case ERHAPI_PresencePlatform::Apple:
		return TEXT("Apple");
	case ERHAPI_PresencePlatform::Epic:
		return TEXT("Epic");
	case ERHAPI_PresencePlatform::Steam:
		return TEXT("Steam");
	case ERHAPI_PresencePlatform::Amazon:
		return TEXT("Amazon");
	case ERHAPI_PresencePlatform::Twitch:
		return TEXT("Twitch");
	case ERHAPI_PresencePlatform::Rallyhere:
		return TEXT("RallyHere");
	case ERHAPI_PresencePlatform::Legacyname:
		return TEXT("LegacyName");
	}

	UE_LOG(LogRallyHereAPI, Error, TEXT("Invalid ERHAPI_PresencePlatform::Values Value (%d)"), (int)Value);
	return TEXT("");
}

bool EnumFromString(const FString& EnumAsString, ERHAPI_PresencePlatform& Value)
{
	static TMap<FString, ERHAPI_PresencePlatform> StringToEnum = { 
		{ TEXT("Anon"), ERHAPI_PresencePlatform::Anon },
		{ TEXT("Basic"), ERHAPI_PresencePlatform::Basic },
		{ TEXT("XboxLive"), ERHAPI_PresencePlatform::XboxLive },
		{ TEXT("PSN"), ERHAPI_PresencePlatform::Psn },
		{ TEXT("NintendoNAID"), ERHAPI_PresencePlatform::NintendoNaid },
		{ TEXT("NintendoSwitch"), ERHAPI_PresencePlatform::NintendoSwitch },
		{ TEXT("NintendoPPID"), ERHAPI_PresencePlatform::NintendoPpid },
		{ TEXT("Google"), ERHAPI_PresencePlatform::Google },
		{ TEXT("GooglePlay"), ERHAPI_PresencePlatform::GooglePlay },
		{ TEXT("Apple"), ERHAPI_PresencePlatform::Apple },
		{ TEXT("Epic"), ERHAPI_PresencePlatform::Epic },
		{ TEXT("Steam"), ERHAPI_PresencePlatform::Steam },
		{ TEXT("Amazon"), ERHAPI_PresencePlatform::Amazon },
		{ TEXT("Twitch"), ERHAPI_PresencePlatform::Twitch },
		{ TEXT("RallyHere"), ERHAPI_PresencePlatform::Rallyhere },
		{ TEXT("LegacyName"), ERHAPI_PresencePlatform::Legacyname },	};

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;
	return Found != nullptr;
}

FStringFormatArg ToStringFormatArg(const ERHAPI_PresencePlatform& Value)
{
	return FStringFormatArg(EnumToString(Value));
}

void WriteJsonValue(TSharedRef<TJsonWriter<>>& Writer, const ERHAPI_PresencePlatform& Value)
{
	RallyHereAPI::WriteJsonValue(Writer, EnumToString(Value));
}

bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, ERHAPI_PresencePlatform& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if (EnumFromString(TmpValue, Value))
			return true;
	}
	return false;
}


