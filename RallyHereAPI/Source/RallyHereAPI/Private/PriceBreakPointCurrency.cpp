// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "PriceBreakPointCurrency.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_PriceBreakPointCurrency

void FRHAPI_PriceBreakPointCurrency::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("price_item_uuid"));
	RallyHereAPI::WriteJsonValue(Writer, PriceItemUuid);
	Writer->WriteIdentifierPrefix(TEXT("price_item_id"));
	RallyHereAPI::WriteJsonValue(Writer, PriceItemId);
	Writer->WriteIdentifierPrefix(TEXT("price"));
	RallyHereAPI::WriteJsonValue(Writer, Price);
	Writer->WriteObjectEnd();
}

bool FRHAPI_PriceBreakPointCurrency::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonPriceItemUuidField = (*Object)->TryGetField(TEXT("price_item_uuid"));
	const bool PriceItemUuid_IsValid = JsonPriceItemUuidField.IsValid() && (!JsonPriceItemUuidField->IsNull() && TryGetJsonValue(JsonPriceItemUuidField, PriceItemUuid));
	ParseSuccess &= PriceItemUuid_IsValid; 
	const TSharedPtr<FJsonValue> JsonPriceItemIdField = (*Object)->TryGetField(TEXT("price_item_id"));
	const bool PriceItemId_IsValid = JsonPriceItemIdField.IsValid() && (!JsonPriceItemIdField->IsNull() && TryGetJsonValue(JsonPriceItemIdField, PriceItemId));
	ParseSuccess &= PriceItemId_IsValid; 
	const TSharedPtr<FJsonValue> JsonPriceField = (*Object)->TryGetField(TEXT("price"));
	const bool Price_IsValid = JsonPriceField.IsValid() && (!JsonPriceField->IsNull() && TryGetJsonValue(JsonPriceField, Price));
	ParseSuccess &= Price_IsValid; 

	return ParseSuccess;
}

