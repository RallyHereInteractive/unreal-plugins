// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "LookupResults.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_LookupResults

void FRHAPI_LookupResults::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	if (DisplayNames_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("display_names"));
		RallyHereAPI::WriteJsonValue(Writer, DisplayNames_Optional);
	}
	if (IdentityPlatforms_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("identity_platforms"));
		RallyHereAPI::WriteJsonValue(Writer, IdentityPlatforms_Optional);
	}
	if (IdentityPlatformsByPlatform_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("identity_platforms_by_platform"));
		RallyHereAPI::WriteJsonValue(Writer, IdentityPlatformsByPlatform_Optional);
	}
	Writer->WriteObjectEnd();
}

bool FRHAPI_LookupResults::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonDisplayNamesField = (*Object)->TryGetField(TEXT("display_names"));
	if (JsonDisplayNamesField.IsValid())
	{
		DisplayNames_IsSet = TryGetJsonValue(JsonDisplayNamesField, DisplayNames_Optional);
		ParseSuccess &= DisplayNames_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonIdentityPlatformsField = (*Object)->TryGetField(TEXT("identity_platforms"));
	if (JsonIdentityPlatformsField.IsValid())
	{
		IdentityPlatforms_IsSet = TryGetJsonValue(JsonIdentityPlatformsField, IdentityPlatforms_Optional);
		ParseSuccess &= IdentityPlatforms_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonIdentityPlatformsByPlatformField = (*Object)->TryGetField(TEXT("identity_platforms_by_platform"));
	if (JsonIdentityPlatformsByPlatformField.IsValid())
	{
		IdentityPlatformsByPlatform_IsSet = TryGetJsonValue(JsonIdentityPlatformsByPlatformField, IdentityPlatformsByPlatform_Optional);
		ParseSuccess &= IdentityPlatformsByPlatform_IsSet;
	}

	return ParseSuccess;
}

