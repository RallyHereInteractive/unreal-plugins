// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "PlayerOrderDetail.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_PlayerOrderDetail

void FRHAPI_PlayerOrderDetail::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("type"));
	RallyHereAPI::WriteJsonValue(Writer, EnumToString(Type));
	if (LootId_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("loot_id"));
		RallyHereAPI::WriteJsonValue(Writer, LootId_Optional);
	}
	if (InvChange_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("inv_change"));
		RallyHereAPI::WriteJsonValue(Writer, InvChange_Optional);
	}
	if (Order_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("order"));
		RallyHereAPI::WriteJsonValue(Writer, Order_Optional);
	}
	Writer->WriteObjectEnd();
}

bool FRHAPI_PlayerOrderDetail::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonTypeField = (*Object)->TryGetField(TEXT("type"));
	ParseSuccess &= JsonTypeField.IsValid() && (!JsonTypeField->IsNull() &&  TryGetJsonValue(JsonTypeField, Type));
	const TSharedPtr<FJsonValue> JsonLootIdField = (*Object)->TryGetField(TEXT("loot_id"));
	if (JsonLootIdField.IsValid())
	{
		LootId_IsSet = TryGetJsonValue(JsonLootIdField, LootId_Optional);
		ParseSuccess &= LootId_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonInvChangeField = (*Object)->TryGetField(TEXT("inv_change"));
	if (JsonInvChangeField.IsValid())
	{
		InvChange_IsSet = TryGetJsonValue(JsonInvChangeField, InvChange_Optional);
		ParseSuccess &= InvChange_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonOrderField = (*Object)->TryGetField(TEXT("order"));
	if (JsonOrderField.IsValid())
	{
		Order_IsSet = TryGetJsonValue(JsonOrderField, Order_Optional);
		ParseSuccess &= Order_IsSet;
	}

	return ParseSuccess;
}

