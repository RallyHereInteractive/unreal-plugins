// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "CreateInventoryRequests.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_CreateInventoryRequests

void FRHAPI_CreateInventoryRequests::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	if (Source_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("source"));
		RallyHereAPI::WriteJsonValue(Writer, EnumToString(Source_Optional));
	}
	if (ClientOrderRefId_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("client_order_ref_id"));
		RallyHereAPI::WriteJsonValue(Writer, ClientOrderRefId_Optional);
	}
	Writer->WriteIdentifierPrefix(TEXT("inventory"));
	RallyHereAPI::WriteJsonValue(Writer, Inventory);
	Writer->WriteObjectEnd();
}

bool FRHAPI_CreateInventoryRequests::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonSourceField = (*Object)->TryGetField(TEXT("source"));
	if (JsonSourceField.IsValid())
	{
		Source_IsSet = TryGetJsonValue(JsonSourceField, Source_Optional);
		ParseSuccess &= Source_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonClientOrderRefIdField = (*Object)->TryGetField(TEXT("client_order_ref_id"));
	if (JsonClientOrderRefIdField.IsValid())
	{
		ClientOrderRefId_IsSet = TryGetJsonValue(JsonClientOrderRefIdField, ClientOrderRefId_Optional);
		ParseSuccess &= ClientOrderRefId_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonInventoryField = (*Object)->TryGetField(TEXT("inventory"));
	const bool Inventory_IsValid = JsonInventoryField.IsValid() && (!JsonInventoryField->IsNull() && TryGetJsonValue(JsonInventoryField, Inventory));
	ParseSuccess &= Inventory_IsValid; 

	return ParseSuccess;
}

