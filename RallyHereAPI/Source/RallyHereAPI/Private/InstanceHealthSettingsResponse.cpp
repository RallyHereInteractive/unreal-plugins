// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "InstanceHealthSettingsResponse.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_InstanceHealthSettingsResponse

void FRHAPI_InstanceHealthSettingsResponse::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("cadence_seconds"));
	RallyHereAPI::WriteJsonValue(Writer, CadenceSeconds);
	Writer->WriteIdentifierPrefix(TEXT("unhealthy_health_check_percentage"));
	RallyHereAPI::WriteJsonValue(Writer, UnhealthyHealthCheckPercentage);
	Writer->WriteIdentifierPrefix(TEXT("missed_checks_before_unknown"));
	RallyHereAPI::WriteJsonValue(Writer, MissedChecksBeforeUnknown);
	Writer->WriteObjectEnd();
}

bool FRHAPI_InstanceHealthSettingsResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonCadenceSecondsField = (*Object)->TryGetField(TEXT("cadence_seconds"));
	const bool CadenceSeconds_IsValid = JsonCadenceSecondsField.IsValid() && (!JsonCadenceSecondsField->IsNull() && TryGetJsonValue(JsonCadenceSecondsField, CadenceSeconds));
	ParseSuccess &= CadenceSeconds_IsValid; 
	const TSharedPtr<FJsonValue> JsonUnhealthyHealthCheckPercentageField = (*Object)->TryGetField(TEXT("unhealthy_health_check_percentage"));
	const bool UnhealthyHealthCheckPercentage_IsValid = JsonUnhealthyHealthCheckPercentageField.IsValid() && (!JsonUnhealthyHealthCheckPercentageField->IsNull() && TryGetJsonValue(JsonUnhealthyHealthCheckPercentageField, UnhealthyHealthCheckPercentage));
	ParseSuccess &= UnhealthyHealthCheckPercentage_IsValid; 
	const TSharedPtr<FJsonValue> JsonMissedChecksBeforeUnknownField = (*Object)->TryGetField(TEXT("missed_checks_before_unknown"));
	const bool MissedChecksBeforeUnknown_IsValid = JsonMissedChecksBeforeUnknownField.IsValid() && (!JsonMissedChecksBeforeUnknownField->IsNull() && TryGetJsonValue(JsonMissedChecksBeforeUnknownField, MissedChecksBeforeUnknown));
	ParseSuccess &= MissedChecksBeforeUnknown_IsValid; 

	return ParseSuccess;
}

