// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "PlayerDeserterStatus.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_PlayerDeserterStatus

void FRHAPI_PlayerDeserterStatus::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("deserter_id"));
	RallyHereAPI::WriteJsonValue(Writer, DeserterId);
	Writer->WriteIdentifierPrefix(TEXT("deserter_status"));
	RallyHereAPI::WriteJsonValue(Writer, DeserterStatus);
	if (DeserterExpiration_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("deserter_expiration"));
		RallyHereAPI::WriteJsonValue(Writer, DeserterExpiration_Optional);
	}
	if (DeserterReset_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("deserter_reset"));
		RallyHereAPI::WriteJsonValue(Writer, DeserterReset_Optional);
	}
	if (DeserterCount_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("deserter_count"));
		RallyHereAPI::WriteJsonValue(Writer, DeserterCount_Optional);
	}
	if (LastUpdated_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("last_updated"));
		RallyHereAPI::WriteJsonValue(Writer, LastUpdated_Optional);
	}
	if (CustomData_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("custom_data"));
		RallyHereAPI::WriteJsonValue(Writer, CustomData_Optional);
	}
	Writer->WriteObjectEnd();
}

bool FRHAPI_PlayerDeserterStatus::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonDeserterIdField = (*Object)->TryGetField(TEXT("deserter_id"));
	const bool DeserterId_IsValid = JsonDeserterIdField.IsValid() && (!JsonDeserterIdField->IsNull() && TryGetJsonValue(JsonDeserterIdField, DeserterId));
	ParseSuccess &= DeserterId_IsValid; 
	const TSharedPtr<FJsonValue> JsonDeserterStatusField = (*Object)->TryGetField(TEXT("deserter_status"));
	const bool DeserterStatus_IsValid = JsonDeserterStatusField.IsValid() && (!JsonDeserterStatusField->IsNull() && TryGetJsonValue(JsonDeserterStatusField, DeserterStatus));
	ParseSuccess &= DeserterStatus_IsValid; 
	const TSharedPtr<FJsonValue> JsonDeserterExpirationField = (*Object)->TryGetField(TEXT("deserter_expiration"));
	if (JsonDeserterExpirationField.IsValid())
	{
		DeserterExpiration_IsSet = TryGetJsonValue(JsonDeserterExpirationField, DeserterExpiration_Optional);
		ParseSuccess &= DeserterExpiration_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonDeserterResetField = (*Object)->TryGetField(TEXT("deserter_reset"));
	if (JsonDeserterResetField.IsValid())
	{
		DeserterReset_IsSet = TryGetJsonValue(JsonDeserterResetField, DeserterReset_Optional);
		ParseSuccess &= DeserterReset_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonDeserterCountField = (*Object)->TryGetField(TEXT("deserter_count"));
	if (JsonDeserterCountField.IsValid())
	{
		DeserterCount_IsSet = TryGetJsonValue(JsonDeserterCountField, DeserterCount_Optional);
		ParseSuccess &= DeserterCount_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonLastUpdatedField = (*Object)->TryGetField(TEXT("last_updated"));
	if (JsonLastUpdatedField.IsValid())
	{
		LastUpdated_IsSet = TryGetJsonValue(JsonLastUpdatedField, LastUpdated_Optional);
		ParseSuccess &= LastUpdated_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonCustomDataField = (*Object)->TryGetField(TEXT("custom_data"));
	if (JsonCustomDataField.IsValid())
	{
		CustomData_IsSet = TryGetJsonValue(JsonCustomDataField, CustomData_Optional);
		ParseSuccess &= CustomData_IsSet;
	}

	return ParseSuccess;
}

