// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "EpicVoipCredentialsResponse.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_EpicVoipCredentialsResponse

void FRHAPI_EpicVoipCredentialsResponse::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("room_id"));
	RallyHereAPI::WriteJsonValue(Writer, RoomId);
	Writer->WriteIdentifierPrefix(TEXT("participant_token"));
	RallyHereAPI::WriteJsonValue(Writer, ParticipantToken);
	Writer->WriteIdentifierPrefix(TEXT("client_base_url"));
	RallyHereAPI::WriteJsonValue(Writer, ClientBaseUrl);
	Writer->WriteIdentifierPrefix(TEXT("product_user_id"));
	RallyHereAPI::WriteJsonValue(Writer, ProductUserId);
	Writer->WriteObjectEnd();
}

bool FRHAPI_EpicVoipCredentialsResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonRoomIdField = (*Object)->TryGetField(TEXT("room_id"));
	const bool RoomId_IsValid = JsonRoomIdField.IsValid() && (!JsonRoomIdField->IsNull() && TryGetJsonValue(JsonRoomIdField, RoomId));
	ParseSuccess &= RoomId_IsValid; 
	const TSharedPtr<FJsonValue> JsonParticipantTokenField = (*Object)->TryGetField(TEXT("participant_token"));
	const bool ParticipantToken_IsValid = JsonParticipantTokenField.IsValid() && (!JsonParticipantTokenField->IsNull() && TryGetJsonValue(JsonParticipantTokenField, ParticipantToken));
	ParseSuccess &= ParticipantToken_IsValid; 
	const TSharedPtr<FJsonValue> JsonClientBaseUrlField = (*Object)->TryGetField(TEXT("client_base_url"));
	const bool ClientBaseUrl_IsValid = JsonClientBaseUrlField.IsValid() && (!JsonClientBaseUrlField->IsNull() && TryGetJsonValue(JsonClientBaseUrlField, ClientBaseUrl));
	ParseSuccess &= ClientBaseUrl_IsValid; 
	const TSharedPtr<FJsonValue> JsonProductUserIdField = (*Object)->TryGetField(TEXT("product_user_id"));
	const bool ProductUserId_IsValid = JsonProductUserIdField.IsValid() && (!JsonProductUserIdField->IsNull() && TryGetJsonValue(JsonProductUserIdField, ProductUserId));
	ParseSuccess &= ProductUserId_IsValid; 

	return ParseSuccess;
}

