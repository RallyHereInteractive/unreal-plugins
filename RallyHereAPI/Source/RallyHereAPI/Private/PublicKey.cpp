// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "PublicKey.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_PublicKey

void FRHAPI_PublicKey::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("kid"));
	RallyHereAPI::WriteJsonValue(Writer, Kid);
	Writer->WriteIdentifierPrefix(TEXT("kty"));
	RallyHereAPI::WriteJsonValue(Writer, Kty);
	Writer->WriteIdentifierPrefix(TEXT("n"));
	RallyHereAPI::WriteJsonValue(Writer, N);
	Writer->WriteIdentifierPrefix(TEXT("e"));
	RallyHereAPI::WriteJsonValue(Writer, E);
	Writer->WriteObjectEnd();
}

bool FRHAPI_PublicKey::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonKidField = (*Object)->TryGetField(TEXT("kid"));
	const bool Kid_IsValid = JsonKidField.IsValid() && (!JsonKidField->IsNull() && TryGetJsonValue(JsonKidField, Kid));
	ParseSuccess &= Kid_IsValid; 
	const TSharedPtr<FJsonValue> JsonKtyField = (*Object)->TryGetField(TEXT("kty"));
	const bool Kty_IsValid = JsonKtyField.IsValid() && (!JsonKtyField->IsNull() && TryGetJsonValue(JsonKtyField, Kty));
	ParseSuccess &= Kty_IsValid; 
	const TSharedPtr<FJsonValue> JsonNField = (*Object)->TryGetField(TEXT("n"));
	const bool N_IsValid = JsonNField.IsValid() && (!JsonNField->IsNull() && TryGetJsonValue(JsonNField, N));
	ParseSuccess &= N_IsValid; 
	const TSharedPtr<FJsonValue> JsonEField = (*Object)->TryGetField(TEXT("e"));
	const bool E_IsValid = JsonEField.IsValid() && (!JsonEField->IsNull() && TryGetJsonValue(JsonEField, E));
	ParseSuccess &= E_IsValid; 

	return ParseSuccess;
}

