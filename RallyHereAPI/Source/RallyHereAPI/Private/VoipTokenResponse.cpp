// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "VoipTokenResponse.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_VoipTokenResponse

void FRHAPI_VoipTokenResponse::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("token"));
	RallyHereAPI::WriteJsonValue(Writer, Token);
	Writer->WriteIdentifierPrefix(TEXT("issuer"));
	RallyHereAPI::WriteJsonValue(Writer, Issuer);
	Writer->WriteIdentifierPrefix(TEXT("server"));
	RallyHereAPI::WriteJsonValue(Writer, Server);
	if (ChannelName_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("channel_name"));
		RallyHereAPI::WriteJsonValue(Writer, ChannelName_Optional);
	}
	Writer->WriteObjectEnd();
}

bool FRHAPI_VoipTokenResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonTokenField = (*Object)->TryGetField(TEXT("token"));
	const bool Token_IsValid = JsonTokenField.IsValid() && (!JsonTokenField->IsNull() && TryGetJsonValue(JsonTokenField, Token));
	ParseSuccess &= Token_IsValid; 
	const TSharedPtr<FJsonValue> JsonIssuerField = (*Object)->TryGetField(TEXT("issuer"));
	const bool Issuer_IsValid = JsonIssuerField.IsValid() && (!JsonIssuerField->IsNull() && TryGetJsonValue(JsonIssuerField, Issuer));
	ParseSuccess &= Issuer_IsValid; 
	const TSharedPtr<FJsonValue> JsonServerField = (*Object)->TryGetField(TEXT("server"));
	const bool Server_IsValid = JsonServerField.IsValid() && (!JsonServerField->IsNull() && TryGetJsonValue(JsonServerField, Server));
	ParseSuccess &= Server_IsValid; 
	const TSharedPtr<FJsonValue> JsonChannelNameField = (*Object)->TryGetField(TEXT("channel_name"));
	if (JsonChannelNameField.IsValid())
	{
		ChannelName_IsSet = TryGetJsonValue(JsonChannelNameField, ChannelName_Optional);
		ParseSuccess &= ChannelName_IsSet;
	}

	return ParseSuccess;
}

