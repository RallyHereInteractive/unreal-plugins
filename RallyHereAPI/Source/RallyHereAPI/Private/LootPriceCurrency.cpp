// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "LootPriceCurrency.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_LootPriceCurrency

void FRHAPI_LootPriceCurrency::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("price_item_id"));
	RallyHereAPI::WriteJsonValue(Writer, PriceItemId);
	if (PriceLegacyItemId_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("price_legacy_item_id"));
		if (PriceLegacyItemId_IsNull)
			WriteJsonValue(Writer, nullptr);
		else
		RallyHereAPI::WriteJsonValue(Writer, PriceLegacyItemId_Optional);
	}
	Writer->WriteIdentifierPrefix(TEXT("current_price"));
	RallyHereAPI::WriteJsonValue(Writer, CurrentPrice);
	if (OriginalPrice_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("original_price"));
		if (OriginalPrice_IsNull)
			WriteJsonValue(Writer, nullptr);
		else
		RallyHereAPI::WriteJsonValue(Writer, OriginalPrice_Optional);
	}
	Writer->WriteObjectEnd();
}

bool FRHAPI_LootPriceCurrency::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonPriceItemIdField = (*Object)->TryGetField(TEXT("price_item_id"));
	const bool PriceItemId_IsValid = JsonPriceItemIdField.IsValid() && (!JsonPriceItemIdField->IsNull() && TryGetJsonValue(JsonPriceItemIdField, PriceItemId));
	ParseSuccess &= PriceItemId_IsValid; 
	const TSharedPtr<FJsonValue> JsonPriceLegacyItemIdField = (*Object)->TryGetField(TEXT("price_legacy_item_id"));
	if (JsonPriceLegacyItemIdField.IsValid())
	{
		PriceLegacyItemId_IsNull = JsonPriceLegacyItemIdField->IsNull();
		PriceLegacyItemId_IsSet = PriceLegacyItemId_IsNull || TryGetJsonValue(JsonPriceLegacyItemIdField, PriceLegacyItemId_Optional);
		ParseSuccess &= PriceLegacyItemId_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonCurrentPriceField = (*Object)->TryGetField(TEXT("current_price"));
	const bool CurrentPrice_IsValid = JsonCurrentPriceField.IsValid() && (!JsonCurrentPriceField->IsNull() && TryGetJsonValue(JsonCurrentPriceField, CurrentPrice));
	ParseSuccess &= CurrentPrice_IsValid; 
	const TSharedPtr<FJsonValue> JsonOriginalPriceField = (*Object)->TryGetField(TEXT("original_price"));
	if (JsonOriginalPriceField.IsValid())
	{
		OriginalPrice_IsNull = JsonOriginalPriceField->IsNull();
		OriginalPrice_IsSet = OriginalPrice_IsNull || TryGetJsonValue(JsonOriginalPriceField, OriginalPrice_Optional);
		ParseSuccess &= OriginalPrice_IsSet;
	}

	return ParseSuccess;
}

