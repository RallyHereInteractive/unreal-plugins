// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "SupportLogPageResponse.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_SupportLogPageResponse

void FRHAPI_SupportLogPageResponse::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("logs"));
	RallyHereAPI::WriteJsonValue(Writer, Logs);
	Writer->WriteIdentifierPrefix(TEXT("page"));
	RallyHereAPI::WriteJsonValue(Writer, Page);
	Writer->WriteIdentifierPrefix(TEXT("total_pages"));
	RallyHereAPI::WriteJsonValue(Writer, TotalPages);
	Writer->WriteIdentifierPrefix(TEXT("total_entries"));
	RallyHereAPI::WriteJsonValue(Writer, TotalEntries);
	Writer->WriteObjectEnd();
}

bool FRHAPI_SupportLogPageResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonLogsField = (*Object)->TryGetField(TEXT("logs"));
	const bool Logs_IsValid = JsonLogsField.IsValid() && (!JsonLogsField->IsNull() && TryGetJsonValue(JsonLogsField, Logs));
	ParseSuccess &= Logs_IsValid; 
	const TSharedPtr<FJsonValue> JsonPageField = (*Object)->TryGetField(TEXT("page"));
	const bool Page_IsValid = JsonPageField.IsValid() && (!JsonPageField->IsNull() && TryGetJsonValue(JsonPageField, Page));
	ParseSuccess &= Page_IsValid; 
	const TSharedPtr<FJsonValue> JsonTotalPagesField = (*Object)->TryGetField(TEXT("total_pages"));
	const bool TotalPages_IsValid = JsonTotalPagesField.IsValid() && (!JsonTotalPagesField->IsNull() && TryGetJsonValue(JsonTotalPagesField, TotalPages));
	ParseSuccess &= TotalPages_IsValid; 
	const TSharedPtr<FJsonValue> JsonTotalEntriesField = (*Object)->TryGetField(TEXT("total_entries"));
	const bool TotalEntries_IsValid = JsonTotalEntriesField.IsValid() && (!JsonTotalEntriesField->IsNull() && TryGetJsonValue(JsonTotalEntriesField, TotalEntries));
	ParseSuccess &= TotalEntries_IsValid; 

	return ParseSuccess;
}

