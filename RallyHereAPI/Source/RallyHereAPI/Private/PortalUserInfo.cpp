// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "PortalUserInfo.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_PortalUserInfo

void FRHAPI_PortalUserInfo::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("platform"));
	RallyHereAPI::WriteJsonValue(Writer, EnumToString(Platform));
	Writer->WriteIdentifierPrefix(TEXT("portal_id"));
	RallyHereAPI::WriteJsonValue(Writer, EnumToString(PortalId));
	Writer->WriteIdentifierPrefix(TEXT("portal_user_id"));
	RallyHereAPI::WriteJsonValue(Writer, PortalUserId);
	Writer->WriteIdentifierPrefix(TEXT("display_name"));
	RallyHereAPI::WriteJsonValue(Writer, DisplayName);
	Writer->WriteObjectEnd();
}

bool FRHAPI_PortalUserInfo::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonPlatformField = (*Object)->TryGetField(TEXT("platform"));
	ParseSuccess &= JsonPlatformField.IsValid() && (!JsonPlatformField->IsNull() &&  TryGetJsonValue(JsonPlatformField, Platform));
	const TSharedPtr<FJsonValue> JsonPortalIdField = (*Object)->TryGetField(TEXT("portal_id"));
	ParseSuccess &= JsonPortalIdField.IsValid() && (!JsonPortalIdField->IsNull() &&  TryGetJsonValue(JsonPortalIdField, PortalId));
	const TSharedPtr<FJsonValue> JsonPortalUserIdField = (*Object)->TryGetField(TEXT("portal_user_id"));
	ParseSuccess &= JsonPortalUserIdField.IsValid() && (!JsonPortalUserIdField->IsNull() &&  TryGetJsonValue(JsonPortalUserIdField, PortalUserId));
	const TSharedPtr<FJsonValue> JsonDisplayNameField = (*Object)->TryGetField(TEXT("display_name"));
	ParseSuccess &= JsonDisplayNameField.IsValid() && (!JsonDisplayNameField->IsNull() &&  TryGetJsonValue(JsonDisplayNameField, DisplayName));

	return ParseSuccess;
}

