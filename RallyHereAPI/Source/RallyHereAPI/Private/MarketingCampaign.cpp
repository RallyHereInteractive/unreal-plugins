// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "MarketingCampaign.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_MarketingCampaign

void FRHAPI_MarketingCampaign::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("uuid"));
	RallyHereAPI::WriteJsonValue(Writer, Uuid);
	Writer->WriteIdentifierPrefix(TEXT("name"));
	RallyHereAPI::WriteJsonValue(Writer, Name);
	if (PortalId_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("portal_id"));
		if (PortalId_IsNull)
			WriteJsonValue(Writer, nullptr);
		else
		RallyHereAPI::WriteJsonValue(Writer, EnumToString(PortalId_Optional));
	}
	Writer->WriteIdentifierPrefix(TEXT("key_types"));
	RallyHereAPI::WriteJsonValue(Writer, KeyTypes);
	if (CreatedOn_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("created_on"));
		if (CreatedOn_IsNull)
			WriteJsonValue(Writer, nullptr);
		else
		RallyHereAPI::WriteJsonValue(Writer, CreatedOn_Optional);
	}
	if (LastModifiedOn_IsSet)
	{
		Writer->WriteIdentifierPrefix(TEXT("last_modified_on"));
		if (LastModifiedOn_IsNull)
			WriteJsonValue(Writer, nullptr);
		else
		RallyHereAPI::WriteJsonValue(Writer, LastModifiedOn_Optional);
	}
	Writer->WriteObjectEnd();
}

bool FRHAPI_MarketingCampaign::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	const TSharedPtr<FJsonValue> JsonUuidField = (*Object)->TryGetField(TEXT("uuid"));
	const bool Uuid_IsValid = JsonUuidField.IsValid() && (!JsonUuidField->IsNull() && TryGetJsonValue(JsonUuidField, Uuid));
	ParseSuccess &= Uuid_IsValid; 
	const TSharedPtr<FJsonValue> JsonNameField = (*Object)->TryGetField(TEXT("name"));
	const bool Name_IsValid = JsonNameField.IsValid() && (!JsonNameField->IsNull() && TryGetJsonValue(JsonNameField, Name));
	ParseSuccess &= Name_IsValid; 
	const TSharedPtr<FJsonValue> JsonPortalIdField = (*Object)->TryGetField(TEXT("portal_id"));
	if (JsonPortalIdField.IsValid())
	{
		PortalId_IsNull = JsonPortalIdField->IsNull();
		PortalId_IsSet = PortalId_IsNull || TryGetJsonValue(JsonPortalIdField, PortalId_Optional);
		ParseSuccess &= PortalId_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonKeyTypesField = (*Object)->TryGetField(TEXT("key_types"));
	const bool KeyTypes_IsValid = JsonKeyTypesField.IsValid() && (!JsonKeyTypesField->IsNull() && TryGetJsonValue(JsonKeyTypesField, KeyTypes));
	ParseSuccess &= KeyTypes_IsValid; 
	const TSharedPtr<FJsonValue> JsonCreatedOnField = (*Object)->TryGetField(TEXT("created_on"));
	if (JsonCreatedOnField.IsValid())
	{
		CreatedOn_IsNull = JsonCreatedOnField->IsNull();
		CreatedOn_IsSet = CreatedOn_IsNull || TryGetJsonValue(JsonCreatedOnField, CreatedOn_Optional);
		ParseSuccess &= CreatedOn_IsSet;
	}
	const TSharedPtr<FJsonValue> JsonLastModifiedOnField = (*Object)->TryGetField(TEXT("last_modified_on"));
	if (JsonLastModifiedOnField.IsValid())
	{
		LastModifiedOn_IsNull = JsonLastModifiedOnField->IsNull();
		LastModifiedOn_IsSet = LastModifiedOn_IsNull || TryGetJsonValue(JsonLastModifiedOnField, LastModifiedOn_Optional);
		ParseSuccess &= LastModifiedOn_IsSet;
	}

	return ParseSuccess;
}

