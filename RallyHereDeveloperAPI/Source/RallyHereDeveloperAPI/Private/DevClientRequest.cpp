// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "DevClientRequest.h"
#include "RallyHereDeveloperAPIModule.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_DevClientRequest

void FRHAPI_DevClientRequest::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
    Writer->WriteObjectStart();
    Writer->WriteIdentifierPrefix(TEXT("name"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, Name);
    Writer->WriteIdentifierPrefix(TEXT("client_secret"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, ClientSecret);
    Writer->WriteIdentifierPrefix(TEXT("policy_id"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, PolicyId);
    Writer->WriteIdentifierPrefix(TEXT("description"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, Description);
    Writer->WriteObjectEnd();
}

bool FRHAPI_DevClientRequest::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
    const TSharedPtr<FJsonObject>* Object;
    if (!JsonValue->TryGetObject(Object))
        return false;

    bool ParseSuccess = true;

    const TSharedPtr<FJsonValue> JsonNameField = (*Object)->TryGetField(TEXT("name"));
    ParseSuccess &= JsonNameField.IsValid() && !JsonNameField->IsNull() && TryGetJsonValue(JsonNameField, Name);
    const TSharedPtr<FJsonValue> JsonClientSecretField = (*Object)->TryGetField(TEXT("client_secret"));
    ParseSuccess &= JsonClientSecretField.IsValid() && !JsonClientSecretField->IsNull() && TryGetJsonValue(JsonClientSecretField, ClientSecret);
    const TSharedPtr<FJsonValue> JsonPolicyIdField = (*Object)->TryGetField(TEXT("policy_id"));
    ParseSuccess &= JsonPolicyIdField.IsValid() && !JsonPolicyIdField->IsNull() && TryGetJsonValue(JsonPolicyIdField, PolicyId);
    const TSharedPtr<FJsonValue> JsonDescriptionField = (*Object)->TryGetField(TEXT("description"));
    ParseSuccess &= JsonDescriptionField.IsValid() && !JsonDescriptionField->IsNull() && TryGetJsonValue(JsonDescriptionField, Description);

    return ParseSuccess;
}

