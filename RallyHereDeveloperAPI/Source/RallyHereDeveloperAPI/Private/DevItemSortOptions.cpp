// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "DevItemSortOptions.h"
#include "RallyHereDeveloperAPIModule.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for ERHAPI_DevItemSortOptions
FString EnumToString(const ERHAPI_DevItemSortOptions& Value)
{
    switch (Value)
    {
    case ERHAPI_DevItemSortOptions::ItemId:
        return TEXT("item_id");
    case ERHAPI_DevItemSortOptions::LegacyItemId:
        return TEXT("legacy_item_id");
    case ERHAPI_DevItemSortOptions::Type:
        return TEXT("type");
    case ERHAPI_DevItemSortOptions::CouponDiscountCurrencyItemId:
        return TEXT("coupon_currency_item_id");
    case ERHAPI_DevItemSortOptions::CouponDiscountPercentage:
        return TEXT("coupon_discount_percentage");
    case ERHAPI_DevItemSortOptions::InventoryBucketUseRuleSetId:
        return TEXT("inventory_bucket_use_rule_set_id");
    case ERHAPI_DevItemSortOptions::LevelXpTableId:
        return TEXT("level_xp_table_id");
    case ERHAPI_DevItemSortOptions::LevelVendorId:
        return TEXT("level_vendor_id");
    case ERHAPI_DevItemSortOptions::Name:
        return TEXT("name");
    case ERHAPI_DevItemSortOptions::Description:
        return TEXT("description");
    case ERHAPI_DevItemSortOptions::LastModifiedTimestamp:
        return TEXT("last_modified_timestamp");
    case ERHAPI_DevItemSortOptions::LastModifiedAccountId:
        return TEXT("last_modified_account_id");
    }

    UE_LOG(LogRallyHereDeveloperAPI, Error, TEXT("Invalid ERHAPI_DevItemSortOptions::Values Value (%d)"), (int)Value);
    return TEXT("");
}

bool EnumFromString(const FString& EnumAsString, ERHAPI_DevItemSortOptions& Value)
{
    static TMap<FString, ERHAPI_DevItemSortOptions> StringToEnum = { 
        { TEXT("item_id"), ERHAPI_DevItemSortOptions::ItemId },
        { TEXT("legacy_item_id"), ERHAPI_DevItemSortOptions::LegacyItemId },
        { TEXT("type"), ERHAPI_DevItemSortOptions::Type },
        { TEXT("coupon_currency_item_id"), ERHAPI_DevItemSortOptions::CouponDiscountCurrencyItemId },
        { TEXT("coupon_discount_percentage"), ERHAPI_DevItemSortOptions::CouponDiscountPercentage },
        { TEXT("inventory_bucket_use_rule_set_id"), ERHAPI_DevItemSortOptions::InventoryBucketUseRuleSetId },
        { TEXT("level_xp_table_id"), ERHAPI_DevItemSortOptions::LevelXpTableId },
        { TEXT("level_vendor_id"), ERHAPI_DevItemSortOptions::LevelVendorId },
        { TEXT("name"), ERHAPI_DevItemSortOptions::Name },
        { TEXT("description"), ERHAPI_DevItemSortOptions::Description },
        { TEXT("last_modified_timestamp"), ERHAPI_DevItemSortOptions::LastModifiedTimestamp },
        { TEXT("last_modified_account_id"), ERHAPI_DevItemSortOptions::LastModifiedAccountId },    };

    const auto Found = StringToEnum.Find(EnumAsString);
    if(Found)
        Value = *Found;
    return Found != nullptr;
}

FStringFormatArg ToStringFormatArg(const ERHAPI_DevItemSortOptions& Value)
{
    return FStringFormatArg(EnumToString(Value));
}

void WriteJsonValue(TSharedRef<TJsonWriter<>>& Writer, const ERHAPI_DevItemSortOptions& Value)
{
    RallyHereDeveloperAPI::WriteJsonValue(Writer, EnumToString(Value));
}

bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, ERHAPI_DevItemSortOptions& Value)
{
    FString TmpValue;
    if (JsonValue->TryGetString(TmpValue))
    {
        if (EnumFromString(TmpValue, Value))
            return true;
    }
    return false;
}


