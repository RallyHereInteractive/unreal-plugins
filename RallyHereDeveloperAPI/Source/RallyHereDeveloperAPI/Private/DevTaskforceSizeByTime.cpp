// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "DevTaskforceSizeByTime.h"
#include "RallyHereDeveloperAPIModule.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_DevTaskforceSizeByTime

void FRHAPI_DevTaskforceSizeByTime::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
    Writer->WriteObjectStart();
    Writer->WriteIdentifierPrefix(TEXT("min_decayed_size"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, MinDecayedSize);
    Writer->WriteIdentifierPrefix(TEXT("starting_size"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, StartingSize);
    Writer->WriteIdentifierPrefix(TEXT("decay_power"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, DecayPower);
    Writer->WriteIdentifierPrefix(TEXT("max_minutes"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, MaxMinutes);
    Writer->WriteObjectEnd();
}

bool FRHAPI_DevTaskforceSizeByTime::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
    const TSharedPtr<FJsonObject>* Object;
    if (!JsonValue->TryGetObject(Object))
        return false;

    bool ParseSuccess = true;

    const TSharedPtr<FJsonValue> JsonMinDecayedSizeField = (*Object)->TryGetField(TEXT("min_decayed_size"));
    ParseSuccess &= JsonMinDecayedSizeField.IsValid() && !JsonMinDecayedSizeField->IsNull() && TryGetJsonValue(JsonMinDecayedSizeField, MinDecayedSize);
    const TSharedPtr<FJsonValue> JsonStartingSizeField = (*Object)->TryGetField(TEXT("starting_size"));
    ParseSuccess &= JsonStartingSizeField.IsValid() && !JsonStartingSizeField->IsNull() && TryGetJsonValue(JsonStartingSizeField, StartingSize);
    const TSharedPtr<FJsonValue> JsonDecayPowerField = (*Object)->TryGetField(TEXT("decay_power"));
    ParseSuccess &= JsonDecayPowerField.IsValid() && !JsonDecayPowerField->IsNull() && TryGetJsonValue(JsonDecayPowerField, DecayPower);
    const TSharedPtr<FJsonValue> JsonMaxMinutesField = (*Object)->TryGetField(TEXT("max_minutes"));
    ParseSuccess &= JsonMaxMinutesField.IsValid() && !JsonMaxMinutesField->IsNull() && TryGetJsonValue(JsonMaxMinutesField, MaxMinutes);

    return ParseSuccess;
}

