// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "DevMenuDataOrg.h"
#include "RallyHereDeveloperAPIModule.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_DevMenuDataOrg

void FRHAPI_DevMenuDataOrg::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
    Writer->WriteObjectStart();
    Writer->WriteIdentifierPrefix(TEXT("orgId"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, OrgId);
    Writer->WriteIdentifierPrefix(TEXT("orgName"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, OrgName);
    Writer->WriteIdentifierPrefix(TEXT("shortName"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, ShortName);
    Writer->WriteIdentifierPrefix(TEXT("products"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, Products);
    Writer->WriteIdentifierPrefix(TEXT("archive"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, Archive);
    Writer->WriteObjectEnd();
}

bool FRHAPI_DevMenuDataOrg::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
    const TSharedPtr<FJsonObject>* Object;
    if (!JsonValue->TryGetObject(Object))
        return false;

    bool ParseSuccess = true;

    const TSharedPtr<FJsonValue> JsonOrgIdField = (*Object)->TryGetField(TEXT("orgId"));
    ParseSuccess &= JsonOrgIdField.IsValid() && !JsonOrgIdField->IsNull() && TryGetJsonValue(JsonOrgIdField, OrgId);
    const TSharedPtr<FJsonValue> JsonOrgNameField = (*Object)->TryGetField(TEXT("orgName"));
    ParseSuccess &= JsonOrgNameField.IsValid() && !JsonOrgNameField->IsNull() && TryGetJsonValue(JsonOrgNameField, OrgName);
    const TSharedPtr<FJsonValue> JsonShortNameField = (*Object)->TryGetField(TEXT("shortName"));
    ParseSuccess &= JsonShortNameField.IsValid() && !JsonShortNameField->IsNull() && TryGetJsonValue(JsonShortNameField, ShortName);
    const TSharedPtr<FJsonValue> JsonProductsField = (*Object)->TryGetField(TEXT("products"));
    ParseSuccess &= JsonProductsField.IsValid() && !JsonProductsField->IsNull() && TryGetJsonValue(JsonProductsField, Products);
    const TSharedPtr<FJsonValue> JsonArchiveField = (*Object)->TryGetField(TEXT("archive"));
    ParseSuccess &= JsonArchiveField.IsValid() && !JsonArchiveField->IsNull() && TryGetJsonValue(JsonArchiveField, Archive);

    return ParseSuccess;
}

