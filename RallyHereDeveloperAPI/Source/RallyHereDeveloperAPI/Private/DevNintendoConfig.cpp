// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "DevNintendoConfig.h"
#include "RallyHereDeveloperAPIModule.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_DevNintendoConfig

void FRHAPI_DevNintendoConfig::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
    Writer->WriteObjectStart();
    Writer->WriteIdentifierPrefix(TEXT("environments"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, Environments);
    if (ActiveEnvs_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("active_envs"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, ActiveEnvs_Optional);
    }
    Writer->WriteIdentifierPrefix(TEXT("app_id"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, AppId);
    Writer->WriteObjectEnd();
}

bool FRHAPI_DevNintendoConfig::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
    const TSharedPtr<FJsonObject>* Object;
    if (!JsonValue->TryGetObject(Object))
        return false;

    bool ParseSuccess = true;

    const TSharedPtr<FJsonValue> JsonEnvironmentsField = (*Object)->TryGetField(TEXT("environments"));
    ParseSuccess &= JsonEnvironmentsField.IsValid() && !JsonEnvironmentsField->IsNull() && TryGetJsonValue(JsonEnvironmentsField, Environments);
    const TSharedPtr<FJsonValue> JsonActiveEnvsField = (*Object)->TryGetField(TEXT("active_envs"));
    if (JsonActiveEnvsField.IsValid() && !JsonActiveEnvsField->IsNull())
    {
        ActiveEnvs_IsSet = TryGetJsonValue(JsonActiveEnvsField, ActiveEnvs_Optional);
        ParseSuccess &= ActiveEnvs_IsSet;
    }
    const TSharedPtr<FJsonValue> JsonAppIdField = (*Object)->TryGetField(TEXT("app_id"));
    ParseSuccess &= JsonAppIdField.IsValid() && !JsonAppIdField->IsNull() && TryGetJsonValue(JsonAppIdField, AppId);

    return ParseSuccess;
}

