// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "DevAccountOrganizationCreateRequest.h"
#include "RallyHereDeveloperAPIModule.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_DevAccountOrganizationCreateRequest

void FRHAPI_DevAccountOrganizationCreateRequest::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
    Writer->WriteObjectStart();
    Writer->WriteIdentifierPrefix(TEXT("org_id"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, OrgId);
    Writer->WriteIdentifierPrefix(TEXT("account_email"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, AccountEmail);
    if (FirstName_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("first_name"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, FirstName_Optional);
    }
    if (LastName_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("last_name"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, LastName_Optional);
    }
    if (Nickname_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("nickname"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, Nickname_Optional);
    }
    if (Password_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("password"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, Password_Optional);
    }
    Writer->WriteObjectEnd();
}

bool FRHAPI_DevAccountOrganizationCreateRequest::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
    const TSharedPtr<FJsonObject>* Object;
    if (!JsonValue->TryGetObject(Object))
        return false;

    bool ParseSuccess = true;

    const TSharedPtr<FJsonValue> JsonOrgIdField = (*Object)->TryGetField(TEXT("org_id"));
    ParseSuccess &= JsonOrgIdField.IsValid() && !JsonOrgIdField->IsNull() && TryGetJsonValue(JsonOrgIdField, OrgId);
    const TSharedPtr<FJsonValue> JsonAccountEmailField = (*Object)->TryGetField(TEXT("account_email"));
    ParseSuccess &= JsonAccountEmailField.IsValid() && !JsonAccountEmailField->IsNull() && TryGetJsonValue(JsonAccountEmailField, AccountEmail);
    const TSharedPtr<FJsonValue> JsonFirstNameField = (*Object)->TryGetField(TEXT("first_name"));
    if (JsonFirstNameField.IsValid() && !JsonFirstNameField->IsNull())
    {
        FirstName_IsSet = TryGetJsonValue(JsonFirstNameField, FirstName_Optional);
        ParseSuccess &= FirstName_IsSet;
    }
    const TSharedPtr<FJsonValue> JsonLastNameField = (*Object)->TryGetField(TEXT("last_name"));
    if (JsonLastNameField.IsValid() && !JsonLastNameField->IsNull())
    {
        LastName_IsSet = TryGetJsonValue(JsonLastNameField, LastName_Optional);
        ParseSuccess &= LastName_IsSet;
    }
    const TSharedPtr<FJsonValue> JsonNicknameField = (*Object)->TryGetField(TEXT("nickname"));
    if (JsonNicknameField.IsValid() && !JsonNicknameField->IsNull())
    {
        Nickname_IsSet = TryGetJsonValue(JsonNicknameField, Nickname_Optional);
        ParseSuccess &= Nickname_IsSet;
    }
    const TSharedPtr<FJsonValue> JsonPasswordField = (*Object)->TryGetField(TEXT("password"));
    if (JsonPasswordField.IsValid() && !JsonPasswordField->IsNull())
    {
        Password_IsSet = TryGetJsonValue(JsonPasswordField, Password_Optional);
        ParseSuccess &= Password_IsSet;
    }

    return ParseSuccess;
}

