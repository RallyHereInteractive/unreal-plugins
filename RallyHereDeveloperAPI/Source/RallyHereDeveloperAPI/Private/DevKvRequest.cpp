// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "DevKvRequest.h"
#include "RallyHereDeveloperAPIModule.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_DevKvRequest

void FRHAPI_DevKvRequest::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
    Writer->WriteObjectStart();
    if (Value_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("value"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, Value_Optional);
    }
    if (Notes_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("notes"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, Notes_Optional);
    }
    Writer->WriteIdentifierPrefix(TEXT("key"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, Key);
    Writer->WriteObjectEnd();
}

bool FRHAPI_DevKvRequest::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
    const TSharedPtr<FJsonObject>* Object;
    if (!JsonValue->TryGetObject(Object))
        return false;

    bool ParseSuccess = true;

    const TSharedPtr<FJsonValue> JsonValueField = (*Object)->TryGetField(TEXT("value"));
    if (JsonValueField.IsValid() && !JsonValueField->IsNull())
    {
        Value_IsSet = TryGetJsonValue(JsonValueField, Value_Optional);
        ParseSuccess &= Value_IsSet;
    }
    const TSharedPtr<FJsonValue> JsonNotesField = (*Object)->TryGetField(TEXT("notes"));
    if (JsonNotesField.IsValid() && !JsonNotesField->IsNull())
    {
        Notes_IsSet = TryGetJsonValue(JsonNotesField, Notes_Optional);
        ParseSuccess &= Notes_IsSet;
    }
    const TSharedPtr<FJsonValue> JsonKeyField = (*Object)->TryGetField(TEXT("key"));
    ParseSuccess &= JsonKeyField.IsValid() && !JsonKeyField->IsNull() && TryGetJsonValue(JsonKeyField, Key);

    return ParseSuccess;
}

