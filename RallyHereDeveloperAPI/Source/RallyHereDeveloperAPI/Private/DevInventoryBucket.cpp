// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "DevInventoryBucket.h"
#include "RallyHereDeveloperAPIModule.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for ERHAPI_DevInventoryBucket
FString EnumToString(const ERHAPI_DevInventoryBucket& Value)
{
    switch (Value)
    {
    case ERHAPI_DevInventoryBucket::Free:
        return TEXT("free");
    case ERHAPI_DevInventoryBucket::Sweat:
        return TEXT("sweat");
    case ERHAPI_DevInventoryBucket::None:
        return TEXT("none");
    case ERHAPI_DevInventoryBucket::Anon:
        return TEXT("anon");
    case ERHAPI_DevInventoryBucket::Amazon:
        return TEXT("amazon");
    case ERHAPI_DevInventoryBucket::Steam:
        return TEXT("steam");
    case ERHAPI_DevInventoryBucket::Psn:
        return TEXT("psn");
    case ERHAPI_DevInventoryBucket::XboxLive:
        return TEXT("xbox_live");
    case ERHAPI_DevInventoryBucket::Google:
        return TEXT("google");
    case ERHAPI_DevInventoryBucket::Twitch:
        return TEXT("twitch");
    case ERHAPI_DevInventoryBucket::NintendoSwitch:
        return TEXT("nintendo_switch");
    case ERHAPI_DevInventoryBucket::Apple:
        return TEXT("apple");
    case ERHAPI_DevInventoryBucket::Nintendo:
        return TEXT("nintendo");
    case ERHAPI_DevInventoryBucket::Epic:
        return TEXT("epic");
    case ERHAPI_DevInventoryBucket::GooglePlay:
        return TEXT("google_play");
    case ERHAPI_DevInventoryBucket::NintendoPpid:
        return TEXT("nintendo_ppid");
    }

    UE_LOG(LogRallyHereDeveloperAPI, Error, TEXT("Invalid ERHAPI_DevInventoryBucket::Values Value (%d)"), (int)Value);
    return TEXT("");
}

bool EnumFromString(const FString& EnumAsString, ERHAPI_DevInventoryBucket& Value)
{
    static TMap<FString, ERHAPI_DevInventoryBucket> StringToEnum = { 
        { TEXT("free"), ERHAPI_DevInventoryBucket::Free },
        { TEXT("sweat"), ERHAPI_DevInventoryBucket::Sweat },
        { TEXT("none"), ERHAPI_DevInventoryBucket::None },
        { TEXT("anon"), ERHAPI_DevInventoryBucket::Anon },
        { TEXT("amazon"), ERHAPI_DevInventoryBucket::Amazon },
        { TEXT("steam"), ERHAPI_DevInventoryBucket::Steam },
        { TEXT("psn"), ERHAPI_DevInventoryBucket::Psn },
        { TEXT("xbox_live"), ERHAPI_DevInventoryBucket::XboxLive },
        { TEXT("google"), ERHAPI_DevInventoryBucket::Google },
        { TEXT("twitch"), ERHAPI_DevInventoryBucket::Twitch },
        { TEXT("nintendo_switch"), ERHAPI_DevInventoryBucket::NintendoSwitch },
        { TEXT("apple"), ERHAPI_DevInventoryBucket::Apple },
        { TEXT("nintendo"), ERHAPI_DevInventoryBucket::Nintendo },
        { TEXT("epic"), ERHAPI_DevInventoryBucket::Epic },
        { TEXT("google_play"), ERHAPI_DevInventoryBucket::GooglePlay },
        { TEXT("nintendo_ppid"), ERHAPI_DevInventoryBucket::NintendoPpid },    };

    const auto Found = StringToEnum.Find(EnumAsString);
    if(Found)
        Value = *Found;
    return Found != nullptr;
}

FStringFormatArg ToStringFormatArg(const ERHAPI_DevInventoryBucket& Value)
{
    return FStringFormatArg(EnumToString(Value));
}

void WriteJsonValue(TSharedRef<TJsonWriter<>>& Writer, const ERHAPI_DevInventoryBucket& Value)
{
    RallyHereDeveloperAPI::WriteJsonValue(Writer, EnumToString(Value));
}

bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, ERHAPI_DevInventoryBucket& Value)
{
    FString TmpValue;
    if (JsonValue->TryGetString(TmpValue))
    {
        if (EnumFromString(TmpValue, Value))
            return true;
    }
    return false;
}


