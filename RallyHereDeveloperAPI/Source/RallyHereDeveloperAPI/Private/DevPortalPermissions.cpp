// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "DevPortalPermissions.h"
#include "RallyHereDeveloperAPIModule.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_DevPortalPermissions

void FRHAPI_DevPortalPermissions::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
    Writer->WriteObjectStart();
    Writer->WriteIdentifierPrefix(TEXT("account_id"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, AccountId);
    Writer->WriteIdentifierPrefix(TEXT("is_global_admin"));
    RallyHereDeveloperAPI::WriteJsonValue(Writer, IsGlobalAdmin);
    if (AccountPermissions_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("accountPermissions"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, AccountPermissions_Optional);
    }
    if (GroupPermissions_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("groupPermissions"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, GroupPermissions_Optional);
    }
    Writer->WriteObjectEnd();
}

bool FRHAPI_DevPortalPermissions::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
    const TSharedPtr<FJsonObject>* Object;
    if (!JsonValue->TryGetObject(Object))
        return false;

    bool ParseSuccess = true;

    const TSharedPtr<FJsonValue> JsonAccountIdField = (*Object)->TryGetField(TEXT("account_id"));
    ParseSuccess &= JsonAccountIdField.IsValid() && !JsonAccountIdField->IsNull() && TryGetJsonValue(JsonAccountIdField, AccountId);
    const TSharedPtr<FJsonValue> JsonIsGlobalAdminField = (*Object)->TryGetField(TEXT("is_global_admin"));
    ParseSuccess &= JsonIsGlobalAdminField.IsValid() && !JsonIsGlobalAdminField->IsNull() && TryGetJsonValue(JsonIsGlobalAdminField, IsGlobalAdmin);
    const TSharedPtr<FJsonValue> JsonAccountPermissionsField = (*Object)->TryGetField(TEXT("accountPermissions"));
    if (JsonAccountPermissionsField.IsValid() && !JsonAccountPermissionsField->IsNull())
    {
        AccountPermissions_IsSet = TryGetJsonValue(JsonAccountPermissionsField, AccountPermissions_Optional);
        ParseSuccess &= AccountPermissions_IsSet;
    }
    const TSharedPtr<FJsonValue> JsonGroupPermissionsField = (*Object)->TryGetField(TEXT("groupPermissions"));
    if (JsonGroupPermissionsField.IsValid() && !JsonGroupPermissionsField->IsNull())
    {
        GroupPermissions_IsSet = TryGetJsonValue(JsonGroupPermissionsField, GroupPermissions_Optional);
        ParseSuccess &= GroupPermissions_IsSet;
    }

    return ParseSuccess;
}

