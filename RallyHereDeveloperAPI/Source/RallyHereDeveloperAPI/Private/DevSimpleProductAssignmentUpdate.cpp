// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "DevSimpleProductAssignmentUpdate.h"
#include "RallyHereDeveloperAPIModule.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_DevSimpleProductAssignmentUpdate

void FRHAPI_DevSimpleProductAssignmentUpdate::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
    Writer->WriteObjectStart();
    if (Name_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("name"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, Name_Optional);
    }
    if (Count_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("count"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, Count_Optional);
    }
    if (HostId_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("host_id"));
        RallyHereDeveloperAPI::WriteJsonValue(Writer, HostId_Optional);
    }
    Writer->WriteObjectEnd();
}

bool FRHAPI_DevSimpleProductAssignmentUpdate::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
    const TSharedPtr<FJsonObject>* Object;
    if (!JsonValue->TryGetObject(Object))
        return false;

    bool ParseSuccess = true;

    const TSharedPtr<FJsonValue> JsonNameField = (*Object)->TryGetField(TEXT("name"));
    if (JsonNameField.IsValid() && !JsonNameField->IsNull())
    {
        Name_IsSet = TryGetJsonValue(JsonNameField, Name_Optional);
        ParseSuccess &= Name_IsSet;
    }
    const TSharedPtr<FJsonValue> JsonCountField = (*Object)->TryGetField(TEXT("count"));
    if (JsonCountField.IsValid() && !JsonCountField->IsNull())
    {
        Count_IsSet = TryGetJsonValue(JsonCountField, Count_Optional);
        ParseSuccess &= Count_IsSet;
    }
    const TSharedPtr<FJsonValue> JsonHostIdField = (*Object)->TryGetField(TEXT("host_id"));
    if (JsonHostIdField.IsValid() && !JsonHostIdField->IsNull())
    {
        HostId_IsSet = TryGetJsonValue(JsonHostIdField, HostId_Optional);
        ParseSuccess &= HostId_IsSet;
    }

    return ParseSuccess;
}

