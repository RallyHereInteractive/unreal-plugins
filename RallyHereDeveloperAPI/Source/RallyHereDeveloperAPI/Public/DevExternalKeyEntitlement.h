// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevExternalKeyEntitlement.generated.h"

/** @defgroup RHAPI_DevExternalKeyEntitlement RallyHere API Model DevExternalKeyEntitlement
 *  @{
 */

/**
 * @brief Represents the mapping of an External SKU to a External Key that will be granted to the player when the player has a matching sku.
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevExternalKeyEntitlement : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief The External Key Campaign ID. */
    FGuid ExternalKeyCampaignId{  };
    /** @brief Gets the value of ExternalKeyCampaignId */
    FGuid& GetExternalKeyCampaignId() { return ExternalKeyCampaignId; }
    /** @brief Gets the value of ExternalKeyCampaignId */
    const FGuid& GetExternalKeyCampaignId() const { return ExternalKeyCampaignId; }
    /** @brief Sets the value of ExternalKeyCampaignId */
    void SetExternalKeyCampaignId(FGuid NewValue) { ExternalKeyCampaignId = NewValue;  }

    /** @brief The quantity of keys to grant to the player. */
    int32 Quantity{ 0 };
    /** @brief Gets the value of Quantity */
    int32& GetQuantity() { return Quantity; }
    /** @brief Gets the value of Quantity */
    const int32& GetQuantity() const { return Quantity; }
    /** @brief Sets the value of Quantity */
    void SetQuantity(int32 NewValue) { Quantity = NewValue;  }
    /** @brief Returns true if Quantity matches the default value */
    bool IsQuantityDefaultValue() const { return Quantity == 0; }
    /** @brief Sets the value of Quantity to its default  */
    void SetQuantityToDefault() { Quantity = 0;  }
};

/** @} */
