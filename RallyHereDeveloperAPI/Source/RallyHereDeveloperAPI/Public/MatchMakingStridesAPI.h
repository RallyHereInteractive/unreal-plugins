// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereDeveloperAPIAuthContext.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevAllMatchMakingStrideEntriesResponse.h"
#include "DevAllMatchMakingStridesResponse.h"
#include "DevHTTPValidationError.h"
#include "DevMatchMakingStride.h"
#include "DevMatchMakingStrideEntry.h"
#include "DevMatchMakingStrideEntryRequest.h"
#include "DevMatchMakingStrideEntryUpdateRequest.h"
#include "DevMatchMakingStrideRequest.h"
#include "DevMatchMakingStrideResponse.h"
#include "DevMatchMakingStrideUpdateRequest.h"

namespace RallyHereDeveloperAPI
{
using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

struct FRequest_SandboxCreateStride;
struct FResponse_SandboxCreateStride;
struct FRequest_SandboxCreateStrideEntry;
struct FResponse_SandboxCreateStrideEntry;
struct FRequest_SandboxDeleteStride;
struct FResponse_SandboxDeleteStride;
struct FRequest_SandboxDeleteStrideEntry;
struct FResponse_SandboxDeleteStrideEntry;
struct FRequest_SandboxGetAllStrideEntries;
struct FResponse_SandboxGetAllStrideEntries;
struct FRequest_SandboxGetAllStrides;
struct FResponse_SandboxGetAllStrides;
struct FRequest_SandboxGetStride;
struct FResponse_SandboxGetStride;
struct FRequest_SandboxGetStrideEntry;
struct FResponse_SandboxGetStrideEntry;
struct FRequest_SandboxPatchStride;
struct FResponse_SandboxPatchStride;
struct FRequest_SandboxPatchStrideEntry;
struct FResponse_SandboxPatchStrideEntry;
struct FRequest_SandboxPutStride;
struct FResponse_SandboxPutStride;
struct FRequest_SandboxPutStrideEntry;
struct FResponse_SandboxPutStrideEntry;

DECLARE_DELEGATE_OneParam(FDelegate_SandboxCreateStride, const FResponse_SandboxCreateStride&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxCreateStrideEntry, const FResponse_SandboxCreateStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxDeleteStride, const FResponse_SandboxDeleteStride&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxDeleteStrideEntry, const FResponse_SandboxDeleteStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetAllStrideEntries, const FResponse_SandboxGetAllStrideEntries&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetAllStrides, const FResponse_SandboxGetAllStrides&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetStride, const FResponse_SandboxGetStride&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetStrideEntry, const FResponse_SandboxGetStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPatchStride, const FResponse_SandboxPatchStride&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPatchStrideEntry, const FResponse_SandboxPatchStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPutStride, const FResponse_SandboxPutStride&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPutStrideEntry, const FResponse_SandboxPutStrideEntry&);

class RALLYHEREDEVELOPERAPI_API FMatchMakingStridesAPI : public FAPI
{
public:
    FMatchMakingStridesAPI();
    virtual ~FMatchMakingStridesAPI();

    FHttpRequestPtr SandboxCreateStride(const FRequest_SandboxCreateStride& Request, const FDelegate_SandboxCreateStride& Delegate = FDelegate_SandboxCreateStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxCreateStrideEntry(const FRequest_SandboxCreateStrideEntry& Request, const FDelegate_SandboxCreateStrideEntry& Delegate = FDelegate_SandboxCreateStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxDeleteStride(const FRequest_SandboxDeleteStride& Request, const FDelegate_SandboxDeleteStride& Delegate = FDelegate_SandboxDeleteStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxDeleteStrideEntry(const FRequest_SandboxDeleteStrideEntry& Request, const FDelegate_SandboxDeleteStrideEntry& Delegate = FDelegate_SandboxDeleteStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetAllStrideEntries(const FRequest_SandboxGetAllStrideEntries& Request, const FDelegate_SandboxGetAllStrideEntries& Delegate = FDelegate_SandboxGetAllStrideEntries(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetAllStrides(const FRequest_SandboxGetAllStrides& Request, const FDelegate_SandboxGetAllStrides& Delegate = FDelegate_SandboxGetAllStrides(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetStride(const FRequest_SandboxGetStride& Request, const FDelegate_SandboxGetStride& Delegate = FDelegate_SandboxGetStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetStrideEntry(const FRequest_SandboxGetStrideEntry& Request, const FDelegate_SandboxGetStrideEntry& Delegate = FDelegate_SandboxGetStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPatchStride(const FRequest_SandboxPatchStride& Request, const FDelegate_SandboxPatchStride& Delegate = FDelegate_SandboxPatchStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPatchStrideEntry(const FRequest_SandboxPatchStrideEntry& Request, const FDelegate_SandboxPatchStrideEntry& Delegate = FDelegate_SandboxPatchStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPutStride(const FRequest_SandboxPutStride& Request, const FDelegate_SandboxPutStride& Delegate = FDelegate_SandboxPutStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPutStrideEntry(const FRequest_SandboxPutStrideEntry& Request, const FDelegate_SandboxPutStrideEntry& Delegate = FDelegate_SandboxPutStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);

private:
    void OnSandboxCreateStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxCreateStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxCreateStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxCreateStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxDeleteStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxDeleteStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxDeleteStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxDeleteStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetAllStrideEntriesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetAllStrideEntries Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetAllStridesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetAllStrides Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPatchStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPatchStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPatchStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPatchStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPutStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPutStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPutStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPutStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);

};

/* Create Stride
 *
 * Create a new MatchMakingStrides in a sandbox
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxCreateStride : public FRequest
{
    FRequest_SandboxCreateStride();
    virtual ~FRequest_SandboxCreateStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideRequest MatchMakingStrideRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxCreateStride : public FResponse
{
    FResponse_SandboxCreateStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxCreateStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStride Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMatchMakingStride& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxCreateStride
{
    typedef FRequest_SandboxCreateStride Request;
    typedef FResponse_SandboxCreateStride Response;
    typedef FDelegate_SandboxCreateStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxCreateStride(InRequest, InDelegate, Priority); }
};

/* Create Stride Entry
 *
 * Create a new MatchMakingStrideEntries in a MatchMakingStride
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxCreateStrideEntry : public FRequest
{
    FRequest_SandboxCreateStrideEntry();
    virtual ~FRequest_SandboxCreateStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid MatchMakingStrideId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideEntryRequest MatchMakingStrideEntryRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxCreateStrideEntry : public FResponse
{
    FResponse_SandboxCreateStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxCreateStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMatchMakingStrideEntry& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxCreateStrideEntry
{
    typedef FRequest_SandboxCreateStrideEntry Request;
    typedef FResponse_SandboxCreateStrideEntry Response;
    typedef FDelegate_SandboxCreateStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxCreateStrideEntry(InRequest, InDelegate, Priority); }
};

/* Delete Stride
 *
 * Delete an existing MatchMakingStrides in a sandbox
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxDeleteStride : public FRequest
{
    FRequest_SandboxDeleteStride();
    virtual ~FRequest_SandboxDeleteStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid MatchMakingStrideId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxDeleteStride : public FResponse
{
    FResponse_SandboxDeleteStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxDeleteStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    


    // Manual Response Helpers
    /* Response 204
    Successful Response
    */

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxDeleteStride
{
    typedef FRequest_SandboxDeleteStride Request;
    typedef FResponse_SandboxDeleteStride Response;
    typedef FDelegate_SandboxDeleteStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxDeleteStride(InRequest, InDelegate, Priority); }
};

/* Delete Stride Entry
 *
 * Delete an existing MatchMakingStrideEntry in a MatchMakingStride
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxDeleteStrideEntry : public FRequest
{
    FRequest_SandboxDeleteStrideEntry();
    virtual ~FRequest_SandboxDeleteStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid MatchMakingStrideId;
    FGuid MatchMakingStrideEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxDeleteStrideEntry : public FResponse
{
    FResponse_SandboxDeleteStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxDeleteStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    


    // Manual Response Helpers
    /* Response 204
    Successful Response
    */

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxDeleteStrideEntry
{
    typedef FRequest_SandboxDeleteStrideEntry Request;
    typedef FResponse_SandboxDeleteStrideEntry Response;
    typedef FDelegate_SandboxDeleteStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxDeleteStrideEntry(InRequest, InDelegate, Priority); }
};

/* Get All Stride Entries
 *
 * Get all MatchMakingStrideEntries in a MatchMakingStride
 * 
 * Requires any of permissions: 
 * 	 sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetAllStrideEntries : public FRequest
{
    FRequest_SandboxGetAllStrideEntries();
    virtual ~FRequest_SandboxGetAllStrideEntries() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid MatchMakingStrideId;
    /* Sandbox ID */
    FGuid SandboxId;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetAllStrideEntries : public FResponse
{
    FResponse_SandboxGetAllStrideEntries(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetAllStrideEntries() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingStrideEntriesResponse Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevAllMatchMakingStrideEntriesResponse& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetAllStrideEntries
{
    typedef FRequest_SandboxGetAllStrideEntries Request;
    typedef FResponse_SandboxGetAllStrideEntries Response;
    typedef FDelegate_SandboxGetAllStrideEntries Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetAllStrideEntries(InRequest, InDelegate, Priority); }
};

/* Get All Strides
 *
 * Get all MatchMakingStrides in a sandbox
 * 
 * Requires any of permissions: 
 * 	 sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetAllStrides : public FRequest
{
    FRequest_SandboxGetAllStrides();
    virtual ~FRequest_SandboxGetAllStrides() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox ID */
    FGuid SandboxId;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetAllStrides : public FResponse
{
    FResponse_SandboxGetAllStrides(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetAllStrides() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingStridesResponse Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevAllMatchMakingStridesResponse& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetAllStrides
{
    typedef FRequest_SandboxGetAllStrides Request;
    typedef FResponse_SandboxGetAllStrides Response;
    typedef FDelegate_SandboxGetAllStrides Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetAllStrides(InRequest, InDelegate, Priority); }
};

/* Get Stride
 *
 * Get specific MatchMakingStride in a sandbox
 * 
 * Requires any of permissions: 
 * 	 sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetStride : public FRequest
{
    FRequest_SandboxGetStride();
    virtual ~FRequest_SandboxGetStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid MatchMakingStrideId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetStride : public FResponse
{
    FResponse_SandboxGetStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideResponse Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMatchMakingStrideResponse& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetStride
{
    typedef FRequest_SandboxGetStride Request;
    typedef FResponse_SandboxGetStride Response;
    typedef FDelegate_SandboxGetStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetStride(InRequest, InDelegate, Priority); }
};

/* Get Stride Entry
 *
 * Get a specific MatchMakingStrideEntries in a MatchMakingStride
 * 
 * Requires any of permissions: 
 * 	 sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetStrideEntry : public FRequest
{
    FRequest_SandboxGetStrideEntry();
    virtual ~FRequest_SandboxGetStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid MatchMakingStrideId;
    FGuid MatchMakingStrideEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetStrideEntry : public FResponse
{
    FResponse_SandboxGetStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMatchMakingStrideEntry& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetStrideEntry
{
    typedef FRequest_SandboxGetStrideEntry Request;
    typedef FResponse_SandboxGetStrideEntry Response;
    typedef FDelegate_SandboxGetStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetStrideEntry(InRequest, InDelegate, Priority); }
};

/* Patch Stride
 *
 * Update an existing MatchMakingStrides in a sandbox
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPatchStride : public FRequest
{
    FRequest_SandboxPatchStride();
    virtual ~FRequest_SandboxPatchStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid MatchMakingStrideId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideUpdateRequest MatchMakingStrideUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPatchStride : public FResponse
{
    FResponse_SandboxPatchStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPatchStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStride Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMatchMakingStride& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPatchStride
{
    typedef FRequest_SandboxPatchStride Request;
    typedef FResponse_SandboxPatchStride Response;
    typedef FDelegate_SandboxPatchStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPatchStride(InRequest, InDelegate, Priority); }
};

/* Patch Stride Entry
 *
 * Update an existing MatchMakingStrideEntries in a MatchMakingStride
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPatchStrideEntry : public FRequest
{
    FRequest_SandboxPatchStrideEntry();
    virtual ~FRequest_SandboxPatchStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid MatchMakingStrideId;
    FGuid MatchMakingStrideEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideEntryUpdateRequest MatchMakingStrideEntryUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPatchStrideEntry : public FResponse
{
    FResponse_SandboxPatchStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPatchStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMatchMakingStrideEntry& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPatchStrideEntry
{
    typedef FRequest_SandboxPatchStrideEntry Request;
    typedef FResponse_SandboxPatchStrideEntry Response;
    typedef FDelegate_SandboxPatchStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPatchStrideEntry(InRequest, InDelegate, Priority); }
};

/* Put Stride
 *
 * Update an existing MatchMakingStrides in a sandbox
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPutStride : public FRequest
{
    FRequest_SandboxPutStride();
    virtual ~FRequest_SandboxPutStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid MatchMakingStrideId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideRequest MatchMakingStrideRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPutStride : public FResponse
{
    FResponse_SandboxPutStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPutStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStride Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMatchMakingStride& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPutStride
{
    typedef FRequest_SandboxPutStride Request;
    typedef FResponse_SandboxPutStride Response;
    typedef FDelegate_SandboxPutStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPutStride(InRequest, InDelegate, Priority); }
};

/* Put Stride Entry
 *
 * Update an existing MatchMakingStrideEntries in a MatchMakingStride
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPutStrideEntry : public FRequest
{
    FRequest_SandboxPutStrideEntry();
    virtual ~FRequest_SandboxPutStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid MatchMakingStrideId;
    FGuid MatchMakingStrideEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideEntryRequest MatchMakingStrideEntryRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPutStrideEntry : public FResponse
{
    FResponse_SandboxPutStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPutStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMatchMakingStrideEntry& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPutStrideEntry
{
    typedef FRequest_SandboxPutStrideEntry Request;
    typedef FResponse_SandboxPutStrideEntry Response;
    typedef FDelegate_SandboxPutStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPutStrideEntry(InRequest, InDelegate, Priority); }
};


}
