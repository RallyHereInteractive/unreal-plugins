// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereDeveloperAPIAuthContext.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevAllMatchMakingStrideEntriesResponse.h"
#include "DevAllMatchMakingStridesResponse.h"
#include "DevHTTPValidationError.h"
#include "DevMatchMakingStride.h"
#include "DevMatchMakingStrideEntry.h"
#include "DevMatchMakingStrideEntryRequest.h"
#include "DevMatchMakingStrideEntryUpdateRequest.h"
#include "DevMatchMakingStrideRequest.h"
#include "DevMatchMakingStrideUpdateRequest.h"
#include "Misc/TVariant.h"

namespace RallyHereDeveloperAPI
{
using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

struct FRequest_OrgProductSandboxCreateStride;
struct FResponse_OrgProductSandboxCreateStride;
struct FRequest_OrgProductSandboxCreateStrideEntry;
struct FResponse_OrgProductSandboxCreateStrideEntry;
struct FRequest_OrgProductSandboxDeleteStride;
struct FResponse_OrgProductSandboxDeleteStride;
struct FRequest_OrgProductSandboxDeleteStrideEntry;
struct FResponse_OrgProductSandboxDeleteStrideEntry;
struct FRequest_OrgProductSandboxGetAllStrideEntries;
struct FResponse_OrgProductSandboxGetAllStrideEntries;
struct FRequest_OrgProductSandboxGetAllStrides;
struct FResponse_OrgProductSandboxGetAllStrides;
struct FRequest_OrgProductSandboxGetStride;
struct FResponse_OrgProductSandboxGetStride;
struct FRequest_OrgProductSandboxGetStrideEntry;
struct FResponse_OrgProductSandboxGetStrideEntry;
struct FRequest_OrgProductSandboxPatchStride;
struct FResponse_OrgProductSandboxPatchStride;
struct FRequest_OrgProductSandboxPatchStrideEntry;
struct FResponse_OrgProductSandboxPatchStrideEntry;
struct FRequest_OrgProductSandboxPutStride;
struct FResponse_OrgProductSandboxPutStride;
struct FRequest_OrgProductSandboxPutStrideEntry;
struct FResponse_OrgProductSandboxPutStrideEntry;
struct FRequest_SandboxCreateStride;
struct FResponse_SandboxCreateStride;
struct FRequest_SandboxCreateStrideEntry;
struct FResponse_SandboxCreateStrideEntry;
struct FRequest_SandboxDeleteStride;
struct FResponse_SandboxDeleteStride;
struct FRequest_SandboxDeleteStrideEntry;
struct FResponse_SandboxDeleteStrideEntry;
struct FRequest_SandboxGetAllStrideEntries;
struct FResponse_SandboxGetAllStrideEntries;
struct FRequest_SandboxGetAllStrides;
struct FResponse_SandboxGetAllStrides;
struct FRequest_SandboxGetStride;
struct FResponse_SandboxGetStride;
struct FRequest_SandboxGetStrideEntry;
struct FResponse_SandboxGetStrideEntry;
struct FRequest_SandboxPatchStride;
struct FResponse_SandboxPatchStride;
struct FRequest_SandboxPatchStrideEntry;
struct FResponse_SandboxPatchStrideEntry;
struct FRequest_SandboxPutStride;
struct FResponse_SandboxPutStride;
struct FRequest_SandboxPutStrideEntry;
struct FResponse_SandboxPutStrideEntry;

DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxCreateStride, const FResponse_OrgProductSandboxCreateStride&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxCreateStrideEntry, const FResponse_OrgProductSandboxCreateStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxDeleteStride, const FResponse_OrgProductSandboxDeleteStride&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxDeleteStrideEntry, const FResponse_OrgProductSandboxDeleteStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxGetAllStrideEntries, const FResponse_OrgProductSandboxGetAllStrideEntries&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxGetAllStrides, const FResponse_OrgProductSandboxGetAllStrides&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxGetStride, const FResponse_OrgProductSandboxGetStride&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxGetStrideEntry, const FResponse_OrgProductSandboxGetStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxPatchStride, const FResponse_OrgProductSandboxPatchStride&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxPatchStrideEntry, const FResponse_OrgProductSandboxPatchStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxPutStride, const FResponse_OrgProductSandboxPutStride&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxPutStrideEntry, const FResponse_OrgProductSandboxPutStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxCreateStride, const FResponse_SandboxCreateStride&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxCreateStrideEntry, const FResponse_SandboxCreateStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxDeleteStride, const FResponse_SandboxDeleteStride&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxDeleteStrideEntry, const FResponse_SandboxDeleteStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetAllStrideEntries, const FResponse_SandboxGetAllStrideEntries&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetAllStrides, const FResponse_SandboxGetAllStrides&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetStride, const FResponse_SandboxGetStride&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetStrideEntry, const FResponse_SandboxGetStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPatchStride, const FResponse_SandboxPatchStride&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPatchStrideEntry, const FResponse_SandboxPatchStrideEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPutStride, const FResponse_SandboxPutStride&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPutStrideEntry, const FResponse_SandboxPutStrideEntry&);

class RALLYHEREDEVELOPERAPI_API FMatchMakingStridesAPI : public FAPI
{
public:
    FMatchMakingStridesAPI();
    virtual ~FMatchMakingStridesAPI();

    FHttpRequestPtr OrgProductSandboxCreateStride(const FRequest_OrgProductSandboxCreateStride& Request, const FDelegate_OrgProductSandboxCreateStride& Delegate = FDelegate_OrgProductSandboxCreateStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxCreateStrideEntry(const FRequest_OrgProductSandboxCreateStrideEntry& Request, const FDelegate_OrgProductSandboxCreateStrideEntry& Delegate = FDelegate_OrgProductSandboxCreateStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxDeleteStride(const FRequest_OrgProductSandboxDeleteStride& Request, const FDelegate_OrgProductSandboxDeleteStride& Delegate = FDelegate_OrgProductSandboxDeleteStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxDeleteStrideEntry(const FRequest_OrgProductSandboxDeleteStrideEntry& Request, const FDelegate_OrgProductSandboxDeleteStrideEntry& Delegate = FDelegate_OrgProductSandboxDeleteStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxGetAllStrideEntries(const FRequest_OrgProductSandboxGetAllStrideEntries& Request, const FDelegate_OrgProductSandboxGetAllStrideEntries& Delegate = FDelegate_OrgProductSandboxGetAllStrideEntries(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxGetAllStrides(const FRequest_OrgProductSandboxGetAllStrides& Request, const FDelegate_OrgProductSandboxGetAllStrides& Delegate = FDelegate_OrgProductSandboxGetAllStrides(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxGetStride(const FRequest_OrgProductSandboxGetStride& Request, const FDelegate_OrgProductSandboxGetStride& Delegate = FDelegate_OrgProductSandboxGetStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxGetStrideEntry(const FRequest_OrgProductSandboxGetStrideEntry& Request, const FDelegate_OrgProductSandboxGetStrideEntry& Delegate = FDelegate_OrgProductSandboxGetStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxPatchStride(const FRequest_OrgProductSandboxPatchStride& Request, const FDelegate_OrgProductSandboxPatchStride& Delegate = FDelegate_OrgProductSandboxPatchStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxPatchStrideEntry(const FRequest_OrgProductSandboxPatchStrideEntry& Request, const FDelegate_OrgProductSandboxPatchStrideEntry& Delegate = FDelegate_OrgProductSandboxPatchStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxPutStride(const FRequest_OrgProductSandboxPutStride& Request, const FDelegate_OrgProductSandboxPutStride& Delegate = FDelegate_OrgProductSandboxPutStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxPutStrideEntry(const FRequest_OrgProductSandboxPutStrideEntry& Request, const FDelegate_OrgProductSandboxPutStrideEntry& Delegate = FDelegate_OrgProductSandboxPutStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxCreateStride(const FRequest_SandboxCreateStride& Request, const FDelegate_SandboxCreateStride& Delegate = FDelegate_SandboxCreateStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxCreateStrideEntry(const FRequest_SandboxCreateStrideEntry& Request, const FDelegate_SandboxCreateStrideEntry& Delegate = FDelegate_SandboxCreateStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxDeleteStride(const FRequest_SandboxDeleteStride& Request, const FDelegate_SandboxDeleteStride& Delegate = FDelegate_SandboxDeleteStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxDeleteStrideEntry(const FRequest_SandboxDeleteStrideEntry& Request, const FDelegate_SandboxDeleteStrideEntry& Delegate = FDelegate_SandboxDeleteStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetAllStrideEntries(const FRequest_SandboxGetAllStrideEntries& Request, const FDelegate_SandboxGetAllStrideEntries& Delegate = FDelegate_SandboxGetAllStrideEntries(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetAllStrides(const FRequest_SandboxGetAllStrides& Request, const FDelegate_SandboxGetAllStrides& Delegate = FDelegate_SandboxGetAllStrides(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetStride(const FRequest_SandboxGetStride& Request, const FDelegate_SandboxGetStride& Delegate = FDelegate_SandboxGetStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetStrideEntry(const FRequest_SandboxGetStrideEntry& Request, const FDelegate_SandboxGetStrideEntry& Delegate = FDelegate_SandboxGetStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPatchStride(const FRequest_SandboxPatchStride& Request, const FDelegate_SandboxPatchStride& Delegate = FDelegate_SandboxPatchStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPatchStrideEntry(const FRequest_SandboxPatchStrideEntry& Request, const FDelegate_SandboxPatchStrideEntry& Delegate = FDelegate_SandboxPatchStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPutStride(const FRequest_SandboxPutStride& Request, const FDelegate_SandboxPutStride& Delegate = FDelegate_SandboxPutStride(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPutStrideEntry(const FRequest_SandboxPutStrideEntry& Request, const FDelegate_SandboxPutStrideEntry& Delegate = FDelegate_SandboxPutStrideEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);

private:
    void OnOrgProductSandboxCreateStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxCreateStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxCreateStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxCreateStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxDeleteStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxDeleteStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxDeleteStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxDeleteStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxGetAllStrideEntriesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxGetAllStrideEntries Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxGetAllStridesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxGetAllStrides Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxGetStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxGetStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxGetStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxGetStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxPatchStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxPatchStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxPatchStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxPatchStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxPutStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxPutStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxPutStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxPutStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxCreateStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxCreateStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxCreateStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxCreateStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxDeleteStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxDeleteStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxDeleteStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxDeleteStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetAllStrideEntriesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetAllStrideEntries Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetAllStridesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetAllStrides Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPatchStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPatchStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPatchStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPatchStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPutStrideResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPutStride Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPutStrideEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPutStrideEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);

};

/* Create Stride
 *
 * Create a new MatchMakingStrides in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxCreateStride : public FRequest
{
    FRequest_OrgProductSandboxCreateStride();
    virtual ~FRequest_OrgProductSandboxCreateStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingStrideRequest MatchMakingStrideRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxCreateStride : public FResponse
{
    FResponse_OrgProductSandboxCreateStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxCreateStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStride Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxCreateStride
{
    typedef FRequest_OrgProductSandboxCreateStride Request;
    typedef FResponse_OrgProductSandboxCreateStride Response;
    typedef FDelegate_OrgProductSandboxCreateStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxCreateStride(InRequest, InDelegate, Priority); }
};

/* Create Stride Entry
 *
 * Create a new MatchMakingStrideEntries in a MatchMakingStride  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxCreateStrideEntry : public FRequest
{
    FRequest_OrgProductSandboxCreateStrideEntry();
    virtual ~FRequest_OrgProductSandboxCreateStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingStrideEntryRequest MatchMakingStrideEntryRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxCreateStrideEntry : public FResponse
{
    FResponse_OrgProductSandboxCreateStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxCreateStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxCreateStrideEntry
{
    typedef FRequest_OrgProductSandboxCreateStrideEntry Request;
    typedef FResponse_OrgProductSandboxCreateStrideEntry Response;
    typedef FDelegate_OrgProductSandboxCreateStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxCreateStrideEntry(InRequest, InDelegate, Priority); }
};

/* Delete Stride
 *
 * Delete an existing MatchMakingStrides in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxDeleteStride : public FRequest
{
    FRequest_OrgProductSandboxDeleteStride();
    virtual ~FRequest_OrgProductSandboxDeleteStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxDeleteStride : public FResponse
{
    FResponse_OrgProductSandboxDeleteStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxDeleteStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;



};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxDeleteStride
{
    typedef FRequest_OrgProductSandboxDeleteStride Request;
    typedef FResponse_OrgProductSandboxDeleteStride Response;
    typedef FDelegate_OrgProductSandboxDeleteStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxDeleteStride(InRequest, InDelegate, Priority); }
};

/* Delete Stride Entry
 *
 * Delete an existing MatchMakingStrideEntry in a MatchMakingStride  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxDeleteStrideEntry : public FRequest
{
    FRequest_OrgProductSandboxDeleteStrideEntry();
    virtual ~FRequest_OrgProductSandboxDeleteStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    FGuid StrideEntryId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxDeleteStrideEntry : public FResponse
{
    FResponse_OrgProductSandboxDeleteStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxDeleteStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;



};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxDeleteStrideEntry
{
    typedef FRequest_OrgProductSandboxDeleteStrideEntry Request;
    typedef FResponse_OrgProductSandboxDeleteStrideEntry Response;
    typedef FDelegate_OrgProductSandboxDeleteStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxDeleteStrideEntry(InRequest, InDelegate, Priority); }
};

/* Get All Stride Entries
 *
 * Get all MatchMakingStrideEntries in a MatchMakingStride  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxGetAllStrideEntries : public FRequest
{
    FRequest_OrgProductSandboxGetAllStrideEntries();
    virtual ~FRequest_OrgProductSandboxGetAllStrideEntries() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxGetAllStrideEntries : public FResponse
{
    FResponse_OrgProductSandboxGetAllStrideEntries(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxGetAllStrideEntries() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingStrideEntriesResponse Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxGetAllStrideEntries
{
    typedef FRequest_OrgProductSandboxGetAllStrideEntries Request;
    typedef FResponse_OrgProductSandboxGetAllStrideEntries Response;
    typedef FDelegate_OrgProductSandboxGetAllStrideEntries Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxGetAllStrideEntries(InRequest, InDelegate, Priority); }
};

/* Get All Strides
 *
 * Get all MatchMakingStrides in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxGetAllStrides : public FRequest
{
    FRequest_OrgProductSandboxGetAllStrides();
    virtual ~FRequest_OrgProductSandboxGetAllStrides() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxGetAllStrides : public FResponse
{
    FResponse_OrgProductSandboxGetAllStrides(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxGetAllStrides() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingStridesResponse Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxGetAllStrides
{
    typedef FRequest_OrgProductSandboxGetAllStrides Request;
    typedef FResponse_OrgProductSandboxGetAllStrides Response;
    typedef FDelegate_OrgProductSandboxGetAllStrides Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxGetAllStrides(InRequest, InDelegate, Priority); }
};

/* Get Stride
 *
 * Get specific MatchMakingStride in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxGetStride : public FRequest
{
    FRequest_OrgProductSandboxGetStride();
    virtual ~FRequest_OrgProductSandboxGetStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxGetStride : public FResponse
{
    FResponse_OrgProductSandboxGetStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxGetStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStride Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxGetStride
{
    typedef FRequest_OrgProductSandboxGetStride Request;
    typedef FResponse_OrgProductSandboxGetStride Response;
    typedef FDelegate_OrgProductSandboxGetStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxGetStride(InRequest, InDelegate, Priority); }
};

/* Get Stride Entry
 *
 * Get a specific MatchMakingStrideEntries in a MatchMakingStride  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxGetStrideEntry : public FRequest
{
    FRequest_OrgProductSandboxGetStrideEntry();
    virtual ~FRequest_OrgProductSandboxGetStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    FGuid StrideEntryId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxGetStrideEntry : public FResponse
{
    FResponse_OrgProductSandboxGetStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxGetStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxGetStrideEntry
{
    typedef FRequest_OrgProductSandboxGetStrideEntry Request;
    typedef FResponse_OrgProductSandboxGetStrideEntry Response;
    typedef FDelegate_OrgProductSandboxGetStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxGetStrideEntry(InRequest, InDelegate, Priority); }
};

/* Patch Stride
 *
 * Update an existing MatchMakingStrides in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxPatchStride : public FRequest
{
    FRequest_OrgProductSandboxPatchStride();
    virtual ~FRequest_OrgProductSandboxPatchStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingStrideUpdateRequest MatchMakingStrideUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxPatchStride : public FResponse
{
    FResponse_OrgProductSandboxPatchStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxPatchStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStride Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxPatchStride
{
    typedef FRequest_OrgProductSandboxPatchStride Request;
    typedef FResponse_OrgProductSandboxPatchStride Response;
    typedef FDelegate_OrgProductSandboxPatchStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxPatchStride(InRequest, InDelegate, Priority); }
};

/* Patch Stride Entry
 *
 * Update an existing MatchMakingStrideEntries in a MatchMakingStride  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxPatchStrideEntry : public FRequest
{
    FRequest_OrgProductSandboxPatchStrideEntry();
    virtual ~FRequest_OrgProductSandboxPatchStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    FGuid StrideEntryId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingStrideEntryUpdateRequest MatchMakingStrideEntryUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxPatchStrideEntry : public FResponse
{
    FResponse_OrgProductSandboxPatchStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxPatchStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxPatchStrideEntry
{
    typedef FRequest_OrgProductSandboxPatchStrideEntry Request;
    typedef FResponse_OrgProductSandboxPatchStrideEntry Response;
    typedef FDelegate_OrgProductSandboxPatchStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxPatchStrideEntry(InRequest, InDelegate, Priority); }
};

/* Put Stride
 *
 * Update an existing MatchMakingStrides in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxPutStride : public FRequest
{
    FRequest_OrgProductSandboxPutStride();
    virtual ~FRequest_OrgProductSandboxPutStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingStrideRequest MatchMakingStrideRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxPutStride : public FResponse
{
    FResponse_OrgProductSandboxPutStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxPutStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStride Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxPutStride
{
    typedef FRequest_OrgProductSandboxPutStride Request;
    typedef FResponse_OrgProductSandboxPutStride Response;
    typedef FDelegate_OrgProductSandboxPutStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxPutStride(InRequest, InDelegate, Priority); }
};

/* Put Stride Entry
 *
 * Update an existing MatchMakingStrideEntries in a MatchMakingStride  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxPutStrideEntry : public FRequest
{
    FRequest_OrgProductSandboxPutStrideEntry();
    virtual ~FRequest_OrgProductSandboxPutStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    FGuid StrideEntryId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingStrideEntryRequest MatchMakingStrideEntryRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxPutStrideEntry : public FResponse
{
    FResponse_OrgProductSandboxPutStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxPutStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxPutStrideEntry
{
    typedef FRequest_OrgProductSandboxPutStrideEntry Request;
    typedef FResponse_OrgProductSandboxPutStrideEntry Response;
    typedef FDelegate_OrgProductSandboxPutStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxPutStrideEntry(InRequest, InDelegate, Priority); }
};

/* Create Stride
 *
 * Create a new MatchMakingStrides in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxCreateStride : public FRequest
{
    FRequest_SandboxCreateStride();
    virtual ~FRequest_SandboxCreateStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideRequest MatchMakingStrideRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxCreateStride : public FResponse
{
    FResponse_SandboxCreateStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxCreateStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStride Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxCreateStride
{
    typedef FRequest_SandboxCreateStride Request;
    typedef FResponse_SandboxCreateStride Response;
    typedef FDelegate_SandboxCreateStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxCreateStride(InRequest, InDelegate, Priority); }
};

/* Create Stride Entry
 *
 * Create a new MatchMakingStrideEntries in a MatchMakingStride  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxCreateStrideEntry : public FRequest
{
    FRequest_SandboxCreateStrideEntry();
    virtual ~FRequest_SandboxCreateStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideEntryRequest MatchMakingStrideEntryRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxCreateStrideEntry : public FResponse
{
    FResponse_SandboxCreateStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxCreateStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxCreateStrideEntry
{
    typedef FRequest_SandboxCreateStrideEntry Request;
    typedef FResponse_SandboxCreateStrideEntry Response;
    typedef FDelegate_SandboxCreateStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxCreateStrideEntry(InRequest, InDelegate, Priority); }
};

/* Delete Stride
 *
 * Delete an existing MatchMakingStrides in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxDeleteStride : public FRequest
{
    FRequest_SandboxDeleteStride();
    virtual ~FRequest_SandboxDeleteStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxDeleteStride : public FResponse
{
    FResponse_SandboxDeleteStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxDeleteStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;



};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxDeleteStride
{
    typedef FRequest_SandboxDeleteStride Request;
    typedef FResponse_SandboxDeleteStride Response;
    typedef FDelegate_SandboxDeleteStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxDeleteStride(InRequest, InDelegate, Priority); }
};

/* Delete Stride Entry
 *
 * Delete an existing MatchMakingStrideEntry in a MatchMakingStride  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxDeleteStrideEntry : public FRequest
{
    FRequest_SandboxDeleteStrideEntry();
    virtual ~FRequest_SandboxDeleteStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    FGuid StrideEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxDeleteStrideEntry : public FResponse
{
    FResponse_SandboxDeleteStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxDeleteStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;



};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxDeleteStrideEntry
{
    typedef FRequest_SandboxDeleteStrideEntry Request;
    typedef FResponse_SandboxDeleteStrideEntry Response;
    typedef FDelegate_SandboxDeleteStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxDeleteStrideEntry(InRequest, InDelegate, Priority); }
};

/* Get All Stride Entries
 *
 * Get all MatchMakingStrideEntries in a MatchMakingStride  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetAllStrideEntries : public FRequest
{
    FRequest_SandboxGetAllStrideEntries();
    virtual ~FRequest_SandboxGetAllStrideEntries() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Sandbox ID */
    FGuid SandboxId;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetAllStrideEntries : public FResponse
{
    FResponse_SandboxGetAllStrideEntries(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetAllStrideEntries() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingStrideEntriesResponse Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetAllStrideEntries
{
    typedef FRequest_SandboxGetAllStrideEntries Request;
    typedef FResponse_SandboxGetAllStrideEntries Response;
    typedef FDelegate_SandboxGetAllStrideEntries Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetAllStrideEntries(InRequest, InDelegate, Priority); }
};

/* Get All Strides
 *
 * Get all MatchMakingStrides in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetAllStrides : public FRequest
{
    FRequest_SandboxGetAllStrides();
    virtual ~FRequest_SandboxGetAllStrides() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox ID */
    FGuid SandboxId;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetAllStrides : public FResponse
{
    FResponse_SandboxGetAllStrides(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetAllStrides() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingStridesResponse Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetAllStrides
{
    typedef FRequest_SandboxGetAllStrides Request;
    typedef FResponse_SandboxGetAllStrides Response;
    typedef FDelegate_SandboxGetAllStrides Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetAllStrides(InRequest, InDelegate, Priority); }
};

/* Get Stride
 *
 * Get specific MatchMakingStride in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetStride : public FRequest
{
    FRequest_SandboxGetStride();
    virtual ~FRequest_SandboxGetStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetStride : public FResponse
{
    FResponse_SandboxGetStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStride Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetStride
{
    typedef FRequest_SandboxGetStride Request;
    typedef FResponse_SandboxGetStride Response;
    typedef FDelegate_SandboxGetStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetStride(InRequest, InDelegate, Priority); }
};

/* Get Stride Entry
 *
 * Get a specific MatchMakingStrideEntries in a MatchMakingStride  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetStrideEntry : public FRequest
{
    FRequest_SandboxGetStrideEntry();
    virtual ~FRequest_SandboxGetStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    FGuid StrideEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetStrideEntry : public FResponse
{
    FResponse_SandboxGetStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetStrideEntry
{
    typedef FRequest_SandboxGetStrideEntry Request;
    typedef FResponse_SandboxGetStrideEntry Response;
    typedef FDelegate_SandboxGetStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetStrideEntry(InRequest, InDelegate, Priority); }
};

/* Patch Stride
 *
 * Update an existing MatchMakingStrides in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPatchStride : public FRequest
{
    FRequest_SandboxPatchStride();
    virtual ~FRequest_SandboxPatchStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideUpdateRequest MatchMakingStrideUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPatchStride : public FResponse
{
    FResponse_SandboxPatchStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPatchStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStride Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPatchStride
{
    typedef FRequest_SandboxPatchStride Request;
    typedef FResponse_SandboxPatchStride Response;
    typedef FDelegate_SandboxPatchStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPatchStride(InRequest, InDelegate, Priority); }
};

/* Patch Stride Entry
 *
 * Update an existing MatchMakingStrideEntries in a MatchMakingStride  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPatchStrideEntry : public FRequest
{
    FRequest_SandboxPatchStrideEntry();
    virtual ~FRequest_SandboxPatchStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    FGuid StrideEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideEntryUpdateRequest MatchMakingStrideEntryUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPatchStrideEntry : public FResponse
{
    FResponse_SandboxPatchStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPatchStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPatchStrideEntry
{
    typedef FRequest_SandboxPatchStrideEntry Request;
    typedef FResponse_SandboxPatchStrideEntry Response;
    typedef FDelegate_SandboxPatchStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPatchStrideEntry(InRequest, InDelegate, Priority); }
};

/* Put Stride
 *
 * Update an existing MatchMakingStrides in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPutStride : public FRequest
{
    FRequest_SandboxPutStride();
    virtual ~FRequest_SandboxPutStride() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideRequest MatchMakingStrideRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPutStride : public FResponse
{
    FResponse_SandboxPutStride(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPutStride() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStride Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPutStride
{
    typedef FRequest_SandboxPutStride Request;
    typedef FResponse_SandboxPutStride Response;
    typedef FDelegate_SandboxPutStride Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPutStride(InRequest, InDelegate, Priority); }
};

/* Put Stride Entry
 *
 * Update an existing MatchMakingStrideEntries in a MatchMakingStride  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPutStrideEntry : public FRequest
{
    FRequest_SandboxPutStrideEntry();
    virtual ~FRequest_SandboxPutStrideEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid StrideId;
    FGuid StrideEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingStrideEntryRequest MatchMakingStrideEntryRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPutStrideEntry : public FResponse
{
    FResponse_SandboxPutStrideEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPutStrideEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingStrideEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPutStrideEntry
{
    typedef FRequest_SandboxPutStrideEntry Request;
    typedef FResponse_SandboxPutStrideEntry Response;
    typedef FDelegate_SandboxPutStrideEntry Delegate;
    typedef FMatchMakingStridesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPutStrideEntry(InRequest, InDelegate, Priority); }
};


}
