// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevMatchMakingProfileListEntryUpdateRequest.generated.h"

/** @defgroup RHAPI_DevMatchMakingProfileListEntryUpdateRequest RallyHere API Model DevMatchMakingProfileListEntryUpdateRequest
 *  @{
 */

/**
 * @brief
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevMatchMakingProfileListEntryUpdateRequest : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief Which MatchMakingProfile this entry refers to */
    FGuid ProfileId_Optional{  };
    /** @brief true if ProfileId_Optional has been set to a value */
    bool ProfileId_IsSet{ false };
    /** @brief Gets the value of ProfileId_Optional, regardless of it having been set */
    FGuid& GetProfileId() { return ProfileId_Optional; }
    /** @brief Gets the value of ProfileId_Optional, regardless of it having been set */
    const FGuid& GetProfileId() const { return ProfileId_Optional; }
    /** @brief Gets the value of ProfileId_Optional, if it has been set, otherwise it returns DefaultValue */
    const FGuid& GetProfileId(const FGuid& DefaultValue) const { if (ProfileId_IsSet) return ProfileId_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of ProfileId_Optional and returns true if it has been set, otherwise returns false */
    bool GetProfileId(FGuid& OutValue) const { if (ProfileId_IsSet) OutValue = ProfileId_Optional; return ProfileId_IsSet; }
    /** @brief Returns a pointer to ProfileId_Optional, if it has been set, otherwise returns nullptr */
    FGuid* GetProfileIdOrNull() { if (ProfileId_IsSet) return &ProfileId_Optional; return nullptr; }
    /** @brief Returns a pointer to ProfileId_Optional, if it has been set, otherwise returns nullptr */
    const FGuid* GetProfileIdOrNull() const { if (ProfileId_IsSet) return &ProfileId_Optional; return nullptr; }
    /** @brief Sets the value of ProfileId_Optional and also sets ProfileId_IsSet to true */
    void SetProfileId(FGuid NewValue) { ProfileId_Optional = NewValue; ProfileId_IsSet = true; }
     /** @brief Clears the value of ProfileId_Optional and sets ProfileId_IsSet to false */
    void ClearProfileId() { ProfileId_IsSet = false; }
};

/** @} */
