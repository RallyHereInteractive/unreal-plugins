// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereDeveloperAPIAuthContext.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevHTTPValidationError.h"
#include "DevMachineClass.h"
#include "DevMachineClassCreate.h"
#include "DevMachineClassLabel.h"
#include "DevMachineClassLabelCreate.h"
#include "DevMachineClassUpdate.h"
#include "DevMachineClassVersionsAndTransactions.h"

namespace RallyHereDeveloperAPI
{
using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

struct FRequest_CreateMc;
struct FResponse_CreateMc;
struct FRequest_CreateMcl;
struct FResponse_CreateMcl;
struct FRequest_DeleteMcl;
struct FResponse_DeleteMcl;
struct FRequest_GetAllMcs;
struct FResponse_GetAllMcs;
struct FRequest_GetMc;
struct FResponse_GetMc;
struct FRequest_GetMcVersions;
struct FResponse_GetMcVersions;
struct FRequest_UpdateMc;
struct FResponse_UpdateMc;

DECLARE_DELEGATE_OneParam(FDelegate_CreateMc, const FResponse_CreateMc&);
DECLARE_DELEGATE_OneParam(FDelegate_CreateMcl, const FResponse_CreateMcl&);
DECLARE_DELEGATE_OneParam(FDelegate_DeleteMcl, const FResponse_DeleteMcl&);
DECLARE_DELEGATE_OneParam(FDelegate_GetAllMcs, const FResponse_GetAllMcs&);
DECLARE_DELEGATE_OneParam(FDelegate_GetMc, const FResponse_GetMc&);
DECLARE_DELEGATE_OneParam(FDelegate_GetMcVersions, const FResponse_GetMcVersions&);
DECLARE_DELEGATE_OneParam(FDelegate_UpdateMc, const FResponse_UpdateMc&);

class RALLYHEREDEVELOPERAPI_API FArmadaMachineClassAPI : public FAPI
{
public:
    FArmadaMachineClassAPI();
    virtual ~FArmadaMachineClassAPI();

    FHttpRequestPtr CreateMc(const FRequest_CreateMc& Request, const FDelegate_CreateMc& Delegate = FDelegate_CreateMc(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr CreateMcl(const FRequest_CreateMcl& Request, const FDelegate_CreateMcl& Delegate = FDelegate_CreateMcl(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr DeleteMcl(const FRequest_DeleteMcl& Request, const FDelegate_DeleteMcl& Delegate = FDelegate_DeleteMcl(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr GetAllMcs(const FRequest_GetAllMcs& Request, const FDelegate_GetAllMcs& Delegate = FDelegate_GetAllMcs(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr GetMc(const FRequest_GetMc& Request, const FDelegate_GetMc& Delegate = FDelegate_GetMc(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr GetMcVersions(const FRequest_GetMcVersions& Request, const FDelegate_GetMcVersions& Delegate = FDelegate_GetMcVersions(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr UpdateMc(const FRequest_UpdateMc& Request, const FDelegate_UpdateMc& Delegate = FDelegate_UpdateMc(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);

private:
    void OnCreateMcResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_CreateMc Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnCreateMclResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_CreateMcl Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnDeleteMclResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_DeleteMcl Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnGetAllMcsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetAllMcs Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnGetMcResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetMc Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnGetMcVersionsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetMcVersions Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnUpdateMcResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_UpdateMc Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);

};

/* Create Mc
 *
 * Create a machine class
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_CreateMc : public FRequest
{
    FRequest_CreateMc();
    virtual ~FRequest_CreateMc() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FRHAPI_DevMachineClassCreate MachineClassCreate;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_CreateMc : public FResponse
{
    FResponse_CreateMc(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_CreateMc() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMachineClass Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMachineClass& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_CreateMc
{
    typedef FRequest_CreateMc Request;
    typedef FResponse_CreateMc Response;
    typedef FDelegate_CreateMc Delegate;
    typedef FArmadaMachineClassAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.CreateMc(InRequest, InDelegate, Priority); }
};

/* Create Mcl
 *
 * Create a machine class label
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_CreateMcl : public FRequest
{
    FRequest_CreateMcl();
    virtual ~FRequest_CreateMcl() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FRHAPI_DevMachineClassLabelCreate MachineClassLabelCreate;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_CreateMcl : public FResponse
{
    FResponse_CreateMcl(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_CreateMcl() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMachineClassLabel Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMachineClassLabel& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_CreateMcl
{
    typedef FRequest_CreateMcl Request;
    typedef FResponse_CreateMcl Response;
    typedef FDelegate_CreateMcl Delegate;
    typedef FArmadaMachineClassAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.CreateMcl(InRequest, InDelegate, Priority); }
};

/* Delete Mcl
 *
 * Delete a machine class label
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_DeleteMcl : public FRequest
{
    FRequest_DeleteMcl();
    virtual ~FRequest_DeleteMcl() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* The machine class label ID */
    int32 MclId = 0;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_DeleteMcl : public FResponse
{
    FResponse_DeleteMcl(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_DeleteMcl() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevJsonValue Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevJsonValue& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_DeleteMcl
{
    typedef FRequest_DeleteMcl Request;
    typedef FResponse_DeleteMcl Response;
    typedef FDelegate_DeleteMcl Delegate;
    typedef FArmadaMachineClassAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.DeleteMcl(InRequest, InDelegate, Priority); }
};

/* Get All Mcs
 *
 * Get all machine classes
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_GetAllMcs : public FRequest
{
    FRequest_GetAllMcs();
    virtual ~FRequest_GetAllMcs() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    TOptional<FString> Label;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_GetAllMcs : public FResponse
{
    FResponse_GetAllMcs(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_GetAllMcs() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    TArray<FRHAPI_DevMachineClass> Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(TArray<FRHAPI_DevMachineClass>& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_GetAllMcs
{
    typedef FRequest_GetAllMcs Request;
    typedef FResponse_GetAllMcs Response;
    typedef FDelegate_GetAllMcs Delegate;
    typedef FArmadaMachineClassAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.GetAllMcs(InRequest, InDelegate, Priority); }
};

/* Get Mc
 *
 * Get a machine class
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_GetMc : public FRequest
{
    FRequest_GetMc();
    virtual ~FRequest_GetMc() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* The machine class ID */
    FGuid McId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_GetMc : public FResponse
{
    FResponse_GetMc(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_GetMc() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMachineClass Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMachineClass& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_GetMc
{
    typedef FRequest_GetMc Request;
    typedef FResponse_GetMc Response;
    typedef FDelegate_GetMc Delegate;
    typedef FArmadaMachineClassAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.GetMc(InRequest, InDelegate, Priority); }
};

/* Get Mc Versions
 *
 * Get a machine class
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_GetMcVersions : public FRequest
{
    FRequest_GetMcVersions();
    virtual ~FRequest_GetMcVersions() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* The machine class ID */
    FGuid McId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_GetMcVersions : public FResponse
{
    FResponse_GetMcVersions(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_GetMcVersions() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMachineClassVersionsAndTransactions Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMachineClassVersionsAndTransactions& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_GetMcVersions
{
    typedef FRequest_GetMcVersions Request;
    typedef FResponse_GetMcVersions Response;
    typedef FDelegate_GetMcVersions Delegate;
    typedef FArmadaMachineClassAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.GetMcVersions(InRequest, InDelegate, Priority); }
};

/* Update Mc
 *
 * Update a machine class
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_UpdateMc : public FRequest
{
    FRequest_UpdateMc();
    virtual ~FRequest_UpdateMc() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* The machine class ID */
    FGuid McId;
    FRHAPI_DevMachineClassUpdate MachineClassUpdate;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_UpdateMc : public FResponse
{
    FResponse_UpdateMc(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_UpdateMc() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMachineClass Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevMachineClass& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_UpdateMc
{
    typedef FRequest_UpdateMc Request;
    typedef FResponse_UpdateMc Response;
    typedef FDelegate_UpdateMc Delegate;
    typedef FArmadaMachineClassAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.UpdateMc(InRequest, InDelegate, Priority); }
};


}
