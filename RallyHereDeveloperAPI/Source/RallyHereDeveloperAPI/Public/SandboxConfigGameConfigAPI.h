// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereDeveloperAPIAuthContext.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevGeneralConfig.h"
#include "DevGeneralConfigCreateUpdate.h"
#include "DevHTTPValidationError.h"
#include "Misc/TVariant.h"

namespace RallyHereDeveloperAPI
{
using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

struct FRequest_GetSandboxGameConfig;
struct FResponse_GetSandboxGameConfig;
struct FRequest_UpdateSandboxGameConfig;
struct FResponse_UpdateSandboxGameConfig;

DECLARE_DELEGATE_OneParam(FDelegate_GetSandboxGameConfig, const FResponse_GetSandboxGameConfig&);
DECLARE_DELEGATE_OneParam(FDelegate_UpdateSandboxGameConfig, const FResponse_UpdateSandboxGameConfig&);

class RALLYHEREDEVELOPERAPI_API FSandboxConfigGameConfigAPI : public FAPI
{
public:
    FSandboxConfigGameConfigAPI();
    virtual ~FSandboxConfigGameConfigAPI();

    FHttpRequestPtr GetSandboxGameConfig(const FRequest_GetSandboxGameConfig& Request, const FDelegate_GetSandboxGameConfig& Delegate = FDelegate_GetSandboxGameConfig(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr UpdateSandboxGameConfig(const FRequest_UpdateSandboxGameConfig& Request, const FDelegate_UpdateSandboxGameConfig& Delegate = FDelegate_UpdateSandboxGameConfig(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);

private:
    void OnGetSandboxGameConfigResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetSandboxGameConfig Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnUpdateSandboxGameConfigResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_UpdateSandboxGameConfig Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);

};

/* Get Sandbox Game Config
 *
 * Get sandbox game config, requires sandbox:config:view or sandbox:config:edit permissions
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_GetSandboxGameConfig : public FRequest
{
    FRequest_GetSandboxGameConfig();
    virtual ~FRequest_GetSandboxGameConfig() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox identifier */
    TVariant<FGuid, FString> SandboxIdentifier;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_GetSandboxGameConfig : public FResponse
{
    FResponse_GetSandboxGameConfig(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_GetSandboxGameConfig() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevGeneralConfig Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_GetSandboxGameConfig
{
    typedef FRequest_GetSandboxGameConfig Request;
    typedef FResponse_GetSandboxGameConfig Response;
    typedef FDelegate_GetSandboxGameConfig Delegate;
    typedef FSandboxConfigGameConfigAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.GetSandboxGameConfig(InRequest, InDelegate, Priority); }
};

/* Update Sandbox Game Config
 *
 * Upsert sandbox game config, requires sandbox:config:edit permissions
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_UpdateSandboxGameConfig : public FRequest
{
    FRequest_UpdateSandboxGameConfig();
    virtual ~FRequest_UpdateSandboxGameConfig() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox identifier */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevGeneralConfigCreateUpdate Body;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_UpdateSandboxGameConfig : public FResponse
{
    FResponse_UpdateSandboxGameConfig(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_UpdateSandboxGameConfig() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevGeneralConfig Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_UpdateSandboxGameConfig
{
    typedef FRequest_UpdateSandboxGameConfig Request;
    typedef FResponse_UpdateSandboxGameConfig Response;
    typedef FDelegate_UpdateSandboxGameConfig Delegate;
    typedef FSandboxConfigGameConfigAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.UpdateSandboxGameConfig(InRequest, InDelegate, Priority); }
};


}
