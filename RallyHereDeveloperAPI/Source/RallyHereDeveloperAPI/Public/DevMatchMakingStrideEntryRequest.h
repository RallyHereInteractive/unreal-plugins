// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevMatchMakingStrideEntryRequest.generated.h"

/** @defgroup RHAPI_DevMatchMakingStrideEntryRequest RallyHere API Model DevMatchMakingStrideEntryRequest
 *  @{
 */

/**
 * @brief
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevMatchMakingStrideEntryRequest : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief How many partitions are created at this point in the stride */
    int32 Step{ 0 };
    /** @brief Gets the value of Step */
    int32& GetStep() { return Step; }
    /** @brief Gets the value of Step */
    const int32& GetStep() const { return Step; }
    /** @brief Sets the value of Step */
    void SetStep(int32 NewValue) { Step = NewValue;  }
    /** @brief Returns true if Step matches the default value */
    bool IsStepDefaultValue() const { return Step == 0; }
    /** @brief Sets the value of Step to its default  */
    void SetStepToDefault() { Step = 0;  }

    /** @brief How far into adjacent skill partitions overlap when trying to match players together */
    int32 Overlap{ 0 };
    /** @brief Gets the value of Overlap */
    int32& GetOverlap() { return Overlap; }
    /** @brief Gets the value of Overlap */
    const int32& GetOverlap() const { return Overlap; }
    /** @brief Sets the value of Overlap */
    void SetOverlap(int32 NewValue) { Overlap = NewValue;  }
    /** @brief Returns true if Overlap matches the default value */
    bool IsOverlapDefaultValue() const { return Overlap == 0; }
    /** @brief Sets the value of Overlap to its default  */
    void SetOverlapToDefault() { Overlap = 0;  }

    /** @brief The minimum popluation required to use this step of the stride */
    int32 MinPopulation{ 0 };
    /** @brief Gets the value of MinPopulation */
    int32& GetMinPopulation() { return MinPopulation; }
    /** @brief Gets the value of MinPopulation */
    const int32& GetMinPopulation() const { return MinPopulation; }
    /** @brief Sets the value of MinPopulation */
    void SetMinPopulation(int32 NewValue) { MinPopulation = NewValue;  }
    /** @brief Returns true if MinPopulation matches the default value */
    bool IsMinPopulationDefaultValue() const { return MinPopulation == 0; }
    /** @brief Sets the value of MinPopulation to its default  */
    void SetMinPopulationToDefault() { MinPopulation = 0;  }
};

/** @} */
