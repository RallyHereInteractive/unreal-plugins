// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereDeveloperAPIBaseModel.h"
//#include "LoginResult.h"
//#include "TokenResponse.h"
#include "RallyHereDeveloperAPIAuthContext.generated.h"

namespace RallyHereDeveloperAPI
{

class FAuthAPI;
struct FRequest_Login;
struct FResponse_Login;
struct FRequest_Token;
struct FResponse_Token;

DECLARE_MULTICAST_DELEGATE_OneParam(FAuthContextLoginComplete, bool /* bAuthSuccess */);
DECLARE_MULTICAST_DELEGATE(FAuthContextLogout);
DECLARE_MULTICAST_DELEGATE(FAuthContextLoginUserChanged);

struct RALLYHEREDEVELOPERAPI_API FAuthContext : TSharedFromThis<FAuthContext>
{
public:
    FAuthContext(FAuthAPI& LoginAPI_, FString ClientId, FString ClientSecret);

    FAuthContext(FAuthAPI& LoginAPI_);

    //void ProcessLogin(const FResponse_Login &LoginResponse_);
    //void ProcessLoginToken(const FResponse_Token &LoginResponse_);
    bool Refresh();
    FAuthContextLoginComplete& OnLoginComplete() { return LoginComplete; }
    FAuthContextLoginUserChanged& OnLoginUserChanged() { return LoginUserChanged; }
    FAuthContextLogout& OnLogout() { return Logout; }
    //const TOptional<FRHAPI_DevLoginResult>& GetLoginResult() const;
    //const TOptional<FRHAPI_DevTokenResponse>& GetTokenResponse() const;
    bool IsLoggedIn() const;
    FString GetAccessToken() const;
    FString GetRefreshToken() const;

    void ClearAuthContext();

    void SetClientId(const FString& InClientId);
    void SetClientSecret(const FString& InClientSecret);

    bool AddClientCredentials(const FHttpRequestRef& HttpRequest) const;
    bool AddClientCredentials(const FHttpRequestPtr& HttpRequest) const;

    bool AddBearerToken(const FHttpRequestRef& HttpRequest) const;
    bool AddBearerToken(const FHttpRequestPtr& HttpRequest) const;

    //static bool IsSameUser(const TOptional<FRHAPI_DevLoginResult>& A, const TOptional<FRHAPI_DevLoginResult>& B);

private:
    FAuthAPI* LoginAPI;
    TOptional<FString> ClientId;
    TOptional<FString> ClientSecret;
    TOptional<FString> BasicAuthValue;
    bool bIsRefreshing;
    FAuthContextLoginComplete LoginComplete;
    FAuthContextLoginUserChanged LoginUserChanged;
    FAuthContextLogout Logout;
    //TOptional<FRHAPI_DevLoginResult> LoginResult;
    //TOptional<FRHAPI_DevTokenResponse> TokenResponse;

    inline void UpdateBasicAuthValue();
};
}

typedef TSharedPtr<RallyHereDeveloperAPI::FAuthContext> FAuthContextPtr;

USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevAuthContext
{
	GENERATED_BODY()

	UPROPERTY()
	int32 Dummy;

	FAuthContextPtr AuthContext;

	FRHAPI_DevAuthContext()
		: Dummy(0)
		, AuthContext(nullptr)
	{}

	FRHAPI_DevAuthContext(const FAuthContextPtr& InAuthContext)
		: Dummy(0)
		, AuthContext(InAuthContext)
	{}
};