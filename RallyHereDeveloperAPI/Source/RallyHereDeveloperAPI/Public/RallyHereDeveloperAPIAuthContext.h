// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereDeveloperAPIBaseModel.h"

namespace RallyHereDeveloperAPI
{

class FAuthAPI;
struct FRequest_Login;
struct FResponse_Login;
struct FRequest_Token;
struct FResponse_Token;

DECLARE_MULTICAST_DELEGATE_OneParam(FAuthContextLoginComplete, bool /* bAuthSuccess */);
DECLARE_MULTICAST_DELEGATE(FAuthContextLoginRequested);

struct RALLYHEREDEVELOPERAPI_API FAuthContext : TSharedFromThis<FAuthContext>
{
public:
    FAuthContext(FString ClientId, FString ClientSecret);

    FAuthContext();

    FAuthContextLoginComplete& OnLoginComplete() { return LoginComplete; }
    FAuthContextLoginRequested& OnLoginRequested() { return LoginRequested; }
    bool IsLoggedIn() const;
    FString GetAccessToken() const;

    void AuthFromWebURL(const FString& URL);
    bool Refresh();

    void ClearAuthContext();

    void SetClientId(const FString& InClientId);
    void SetClientSecret(const FString& InClientSecret);

    bool AddClientCredentials(const FHttpRequestRef& HttpRequest) const;
    bool AddClientCredentials(const FHttpRequestPtr& HttpRequest) const;

    bool AddBearerToken(const FHttpRequestRef& HttpRequest) const;
    bool AddBearerToken(const FHttpRequestPtr& HttpRequest) const;

private:
    TOptional<FString> ClientId;
    TOptional<FString> ClientSecret;
    TOptional<FString> BasicAuthValue;
    FAuthContextLoginComplete LoginComplete;
    FAuthContextLoginRequested LoginRequested;
    FString AccessToken;

    inline void UpdateBasicAuthValue();
};
}

typedef TSharedPtr<RallyHereDeveloperAPI::FAuthContext> FDevAuthContextPtr;