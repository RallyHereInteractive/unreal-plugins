// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereDeveloperAPIAuthContext.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevAllMatchMakingProfileListEntriesResponse.h"
#include "DevAllMatchMakingProfileListsResponse.h"
#include "DevAllMatchMakingProfilesResponse.h"
#include "DevHTTPValidationError.h"
#include "DevMatchMakingProfile.h"
#include "DevMatchMakingProfileList.h"
#include "DevMatchMakingProfileListEntry.h"
#include "DevMatchMakingProfileListEntryRequest.h"
#include "DevMatchMakingProfileListEntryUpdateRequest.h"
#include "DevMatchMakingProfileListRequest.h"
#include "DevMatchMakingProfileListUpdateRequest.h"
#include "DevMatchMakingProfileRequest.h"
#include "DevMatchMakingProfileUpdateRequest.h"
#include "Misc/TVariant.h"

namespace RallyHereDeveloperAPI
{
using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

struct FRequest_OrgProductSandboxCreateEntry;
struct FResponse_OrgProductSandboxCreateEntry;
struct FRequest_OrgProductSandboxCreateProfile;
struct FResponse_OrgProductSandboxCreateProfile;
struct FRequest_OrgProductSandboxCreateProfileList;
struct FResponse_OrgProductSandboxCreateProfileList;
struct FRequest_OrgProductSandboxDeleteEntry;
struct FResponse_OrgProductSandboxDeleteEntry;
struct FRequest_OrgProductSandboxDeleteProfile;
struct FResponse_OrgProductSandboxDeleteProfile;
struct FRequest_OrgProductSandboxDeleteProfileList;
struct FResponse_OrgProductSandboxDeleteProfileList;
struct FRequest_OrgProductSandboxGetAllEntries;
struct FResponse_OrgProductSandboxGetAllEntries;
struct FRequest_OrgProductSandboxGetAllProfileLists;
struct FResponse_OrgProductSandboxGetAllProfileLists;
struct FRequest_OrgProductSandboxGetAllProfiles;
struct FResponse_OrgProductSandboxGetAllProfiles;
struct FRequest_OrgProductSandboxGetEntry;
struct FResponse_OrgProductSandboxGetEntry;
struct FRequest_OrgProductSandboxGetProfile;
struct FResponse_OrgProductSandboxGetProfile;
struct FRequest_OrgProductSandboxGetProfileList;
struct FResponse_OrgProductSandboxGetProfileList;
struct FRequest_OrgProductSandboxPatchEntry;
struct FResponse_OrgProductSandboxPatchEntry;
struct FRequest_OrgProductSandboxPatchProfile;
struct FResponse_OrgProductSandboxPatchProfile;
struct FRequest_OrgProductSandboxPatchProfileList;
struct FResponse_OrgProductSandboxPatchProfileList;
struct FRequest_OrgProductSandboxPutEntry;
struct FResponse_OrgProductSandboxPutEntry;
struct FRequest_OrgProductSandboxPutProfile;
struct FResponse_OrgProductSandboxPutProfile;
struct FRequest_OrgProductSandboxPutProfileList;
struct FResponse_OrgProductSandboxPutProfileList;
struct FRequest_SandboxCreateEntry;
struct FResponse_SandboxCreateEntry;
struct FRequest_SandboxCreateProfile;
struct FResponse_SandboxCreateProfile;
struct FRequest_SandboxCreateProfileList;
struct FResponse_SandboxCreateProfileList;
struct FRequest_SandboxDeleteEntry;
struct FResponse_SandboxDeleteEntry;
struct FRequest_SandboxDeleteProfile;
struct FResponse_SandboxDeleteProfile;
struct FRequest_SandboxDeleteProfileList;
struct FResponse_SandboxDeleteProfileList;
struct FRequest_SandboxGetAllEntries;
struct FResponse_SandboxGetAllEntries;
struct FRequest_SandboxGetAllProfileLists;
struct FResponse_SandboxGetAllProfileLists;
struct FRequest_SandboxGetAllProfiles;
struct FResponse_SandboxGetAllProfiles;
struct FRequest_SandboxGetEntry;
struct FResponse_SandboxGetEntry;
struct FRequest_SandboxGetProfile;
struct FResponse_SandboxGetProfile;
struct FRequest_SandboxGetProfileList;
struct FResponse_SandboxGetProfileList;
struct FRequest_SandboxPatchEntry;
struct FResponse_SandboxPatchEntry;
struct FRequest_SandboxPatchProfile;
struct FResponse_SandboxPatchProfile;
struct FRequest_SandboxPatchProfileList;
struct FResponse_SandboxPatchProfileList;
struct FRequest_SandboxPutEntry;
struct FResponse_SandboxPutEntry;
struct FRequest_SandboxPutProfile;
struct FResponse_SandboxPutProfile;
struct FRequest_SandboxPutProfileList;
struct FResponse_SandboxPutProfileList;

DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxCreateEntry, const FResponse_OrgProductSandboxCreateEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxCreateProfile, const FResponse_OrgProductSandboxCreateProfile&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxCreateProfileList, const FResponse_OrgProductSandboxCreateProfileList&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxDeleteEntry, const FResponse_OrgProductSandboxDeleteEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxDeleteProfile, const FResponse_OrgProductSandboxDeleteProfile&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxDeleteProfileList, const FResponse_OrgProductSandboxDeleteProfileList&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxGetAllEntries, const FResponse_OrgProductSandboxGetAllEntries&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxGetAllProfileLists, const FResponse_OrgProductSandboxGetAllProfileLists&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxGetAllProfiles, const FResponse_OrgProductSandboxGetAllProfiles&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxGetEntry, const FResponse_OrgProductSandboxGetEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxGetProfile, const FResponse_OrgProductSandboxGetProfile&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxGetProfileList, const FResponse_OrgProductSandboxGetProfileList&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxPatchEntry, const FResponse_OrgProductSandboxPatchEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxPatchProfile, const FResponse_OrgProductSandboxPatchProfile&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxPatchProfileList, const FResponse_OrgProductSandboxPatchProfileList&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxPutEntry, const FResponse_OrgProductSandboxPutEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxPutProfile, const FResponse_OrgProductSandboxPutProfile&);
DECLARE_DELEGATE_OneParam(FDelegate_OrgProductSandboxPutProfileList, const FResponse_OrgProductSandboxPutProfileList&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxCreateEntry, const FResponse_SandboxCreateEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxCreateProfile, const FResponse_SandboxCreateProfile&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxCreateProfileList, const FResponse_SandboxCreateProfileList&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxDeleteEntry, const FResponse_SandboxDeleteEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxDeleteProfile, const FResponse_SandboxDeleteProfile&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxDeleteProfileList, const FResponse_SandboxDeleteProfileList&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetAllEntries, const FResponse_SandboxGetAllEntries&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetAllProfileLists, const FResponse_SandboxGetAllProfileLists&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetAllProfiles, const FResponse_SandboxGetAllProfiles&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetEntry, const FResponse_SandboxGetEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetProfile, const FResponse_SandboxGetProfile&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetProfileList, const FResponse_SandboxGetProfileList&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPatchEntry, const FResponse_SandboxPatchEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPatchProfile, const FResponse_SandboxPatchProfile&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPatchProfileList, const FResponse_SandboxPatchProfileList&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPutEntry, const FResponse_SandboxPutEntry&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPutProfile, const FResponse_SandboxPutProfile&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPutProfileList, const FResponse_SandboxPutProfileList&);

class RALLYHEREDEVELOPERAPI_API FMatchMakingProfilesAPI : public FAPI
{
public:
    FMatchMakingProfilesAPI();
    virtual ~FMatchMakingProfilesAPI();

    FHttpRequestPtr OrgProductSandboxCreateEntry(const FRequest_OrgProductSandboxCreateEntry& Request, const FDelegate_OrgProductSandboxCreateEntry& Delegate = FDelegate_OrgProductSandboxCreateEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxCreateProfile(const FRequest_OrgProductSandboxCreateProfile& Request, const FDelegate_OrgProductSandboxCreateProfile& Delegate = FDelegate_OrgProductSandboxCreateProfile(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxCreateProfileList(const FRequest_OrgProductSandboxCreateProfileList& Request, const FDelegate_OrgProductSandboxCreateProfileList& Delegate = FDelegate_OrgProductSandboxCreateProfileList(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxDeleteEntry(const FRequest_OrgProductSandboxDeleteEntry& Request, const FDelegate_OrgProductSandboxDeleteEntry& Delegate = FDelegate_OrgProductSandboxDeleteEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxDeleteProfile(const FRequest_OrgProductSandboxDeleteProfile& Request, const FDelegate_OrgProductSandboxDeleteProfile& Delegate = FDelegate_OrgProductSandboxDeleteProfile(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxDeleteProfileList(const FRequest_OrgProductSandboxDeleteProfileList& Request, const FDelegate_OrgProductSandboxDeleteProfileList& Delegate = FDelegate_OrgProductSandboxDeleteProfileList(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxGetAllEntries(const FRequest_OrgProductSandboxGetAllEntries& Request, const FDelegate_OrgProductSandboxGetAllEntries& Delegate = FDelegate_OrgProductSandboxGetAllEntries(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxGetAllProfileLists(const FRequest_OrgProductSandboxGetAllProfileLists& Request, const FDelegate_OrgProductSandboxGetAllProfileLists& Delegate = FDelegate_OrgProductSandboxGetAllProfileLists(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxGetAllProfiles(const FRequest_OrgProductSandboxGetAllProfiles& Request, const FDelegate_OrgProductSandboxGetAllProfiles& Delegate = FDelegate_OrgProductSandboxGetAllProfiles(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxGetEntry(const FRequest_OrgProductSandboxGetEntry& Request, const FDelegate_OrgProductSandboxGetEntry& Delegate = FDelegate_OrgProductSandboxGetEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxGetProfile(const FRequest_OrgProductSandboxGetProfile& Request, const FDelegate_OrgProductSandboxGetProfile& Delegate = FDelegate_OrgProductSandboxGetProfile(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxGetProfileList(const FRequest_OrgProductSandboxGetProfileList& Request, const FDelegate_OrgProductSandboxGetProfileList& Delegate = FDelegate_OrgProductSandboxGetProfileList(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxPatchEntry(const FRequest_OrgProductSandboxPatchEntry& Request, const FDelegate_OrgProductSandboxPatchEntry& Delegate = FDelegate_OrgProductSandboxPatchEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxPatchProfile(const FRequest_OrgProductSandboxPatchProfile& Request, const FDelegate_OrgProductSandboxPatchProfile& Delegate = FDelegate_OrgProductSandboxPatchProfile(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxPatchProfileList(const FRequest_OrgProductSandboxPatchProfileList& Request, const FDelegate_OrgProductSandboxPatchProfileList& Delegate = FDelegate_OrgProductSandboxPatchProfileList(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxPutEntry(const FRequest_OrgProductSandboxPutEntry& Request, const FDelegate_OrgProductSandboxPutEntry& Delegate = FDelegate_OrgProductSandboxPutEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxPutProfile(const FRequest_OrgProductSandboxPutProfile& Request, const FDelegate_OrgProductSandboxPutProfile& Delegate = FDelegate_OrgProductSandboxPutProfile(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr OrgProductSandboxPutProfileList(const FRequest_OrgProductSandboxPutProfileList& Request, const FDelegate_OrgProductSandboxPutProfileList& Delegate = FDelegate_OrgProductSandboxPutProfileList(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxCreateEntry(const FRequest_SandboxCreateEntry& Request, const FDelegate_SandboxCreateEntry& Delegate = FDelegate_SandboxCreateEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxCreateProfile(const FRequest_SandboxCreateProfile& Request, const FDelegate_SandboxCreateProfile& Delegate = FDelegate_SandboxCreateProfile(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxCreateProfileList(const FRequest_SandboxCreateProfileList& Request, const FDelegate_SandboxCreateProfileList& Delegate = FDelegate_SandboxCreateProfileList(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxDeleteEntry(const FRequest_SandboxDeleteEntry& Request, const FDelegate_SandboxDeleteEntry& Delegate = FDelegate_SandboxDeleteEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxDeleteProfile(const FRequest_SandboxDeleteProfile& Request, const FDelegate_SandboxDeleteProfile& Delegate = FDelegate_SandboxDeleteProfile(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxDeleteProfileList(const FRequest_SandboxDeleteProfileList& Request, const FDelegate_SandboxDeleteProfileList& Delegate = FDelegate_SandboxDeleteProfileList(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetAllEntries(const FRequest_SandboxGetAllEntries& Request, const FDelegate_SandboxGetAllEntries& Delegate = FDelegate_SandboxGetAllEntries(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetAllProfileLists(const FRequest_SandboxGetAllProfileLists& Request, const FDelegate_SandboxGetAllProfileLists& Delegate = FDelegate_SandboxGetAllProfileLists(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetAllProfiles(const FRequest_SandboxGetAllProfiles& Request, const FDelegate_SandboxGetAllProfiles& Delegate = FDelegate_SandboxGetAllProfiles(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetEntry(const FRequest_SandboxGetEntry& Request, const FDelegate_SandboxGetEntry& Delegate = FDelegate_SandboxGetEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetProfile(const FRequest_SandboxGetProfile& Request, const FDelegate_SandboxGetProfile& Delegate = FDelegate_SandboxGetProfile(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetProfileList(const FRequest_SandboxGetProfileList& Request, const FDelegate_SandboxGetProfileList& Delegate = FDelegate_SandboxGetProfileList(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPatchEntry(const FRequest_SandboxPatchEntry& Request, const FDelegate_SandboxPatchEntry& Delegate = FDelegate_SandboxPatchEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPatchProfile(const FRequest_SandboxPatchProfile& Request, const FDelegate_SandboxPatchProfile& Delegate = FDelegate_SandboxPatchProfile(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPatchProfileList(const FRequest_SandboxPatchProfileList& Request, const FDelegate_SandboxPatchProfileList& Delegate = FDelegate_SandboxPatchProfileList(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPutEntry(const FRequest_SandboxPutEntry& Request, const FDelegate_SandboxPutEntry& Delegate = FDelegate_SandboxPutEntry(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPutProfile(const FRequest_SandboxPutProfile& Request, const FDelegate_SandboxPutProfile& Delegate = FDelegate_SandboxPutProfile(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPutProfileList(const FRequest_SandboxPutProfileList& Request, const FDelegate_SandboxPutProfileList& Delegate = FDelegate_SandboxPutProfileList(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);

private:
    void OnOrgProductSandboxCreateEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxCreateEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxCreateProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxCreateProfile Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxCreateProfileListResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxCreateProfileList Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxDeleteEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxDeleteEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxDeleteProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxDeleteProfile Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxDeleteProfileListResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxDeleteProfileList Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxGetAllEntriesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxGetAllEntries Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxGetAllProfileListsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxGetAllProfileLists Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxGetAllProfilesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxGetAllProfiles Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxGetEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxGetEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxGetProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxGetProfile Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxGetProfileListResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxGetProfileList Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxPatchEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxPatchEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxPatchProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxPatchProfile Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxPatchProfileListResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxPatchProfileList Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxPutEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxPutEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxPutProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxPutProfile Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnOrgProductSandboxPutProfileListResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_OrgProductSandboxPutProfileList Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxCreateEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxCreateEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxCreateProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxCreateProfile Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxCreateProfileListResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxCreateProfileList Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxDeleteEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxDeleteEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxDeleteProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxDeleteProfile Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxDeleteProfileListResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxDeleteProfileList Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetAllEntriesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetAllEntries Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetAllProfileListsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetAllProfileLists Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetAllProfilesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetAllProfiles Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetProfile Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetProfileListResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetProfileList Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPatchEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPatchEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPatchProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPatchProfile Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPatchProfileListResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPatchProfileList Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPutEntryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPutEntry Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPutProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPutProfile Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPutProfileListResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPutProfileList Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);

};

/* Create Entry
 *
 * Create a new MatchMakingProfileListEntry in a MatchMakingProfileList  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxCreateEntry : public FRequest
{
    FRequest_OrgProductSandboxCreateEntry();
    virtual ~FRequest_OrgProductSandboxCreateEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingProfileListEntryRequest MatchMakingProfileListEntryRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxCreateEntry : public FResponse
{
    FResponse_OrgProductSandboxCreateEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxCreateEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileListEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxCreateEntry
{
    typedef FRequest_OrgProductSandboxCreateEntry Request;
    typedef FResponse_OrgProductSandboxCreateEntry Response;
    typedef FDelegate_OrgProductSandboxCreateEntry Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxCreateEntry(InRequest, InDelegate, Priority); }
};

/* Create Profile
 *
 * Create a new MatchMakingProfile in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxCreateProfile : public FRequest
{
    FRequest_OrgProductSandboxCreateProfile();
    virtual ~FRequest_OrgProductSandboxCreateProfile() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingProfileRequest MatchMakingProfileRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxCreateProfile : public FResponse
{
    FResponse_OrgProductSandboxCreateProfile(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxCreateProfile() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfile Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxCreateProfile
{
    typedef FRequest_OrgProductSandboxCreateProfile Request;
    typedef FResponse_OrgProductSandboxCreateProfile Response;
    typedef FDelegate_OrgProductSandboxCreateProfile Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxCreateProfile(InRequest, InDelegate, Priority); }
};

/* Create Profile List
 *
 * Create a new MatchMakingProfileList in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxCreateProfileList : public FRequest
{
    FRequest_OrgProductSandboxCreateProfileList();
    virtual ~FRequest_OrgProductSandboxCreateProfileList() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingProfileListRequest MatchMakingProfileListRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxCreateProfileList : public FResponse
{
    FResponse_OrgProductSandboxCreateProfileList(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxCreateProfileList() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileList Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxCreateProfileList
{
    typedef FRequest_OrgProductSandboxCreateProfileList Request;
    typedef FResponse_OrgProductSandboxCreateProfileList Response;
    typedef FDelegate_OrgProductSandboxCreateProfileList Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxCreateProfileList(InRequest, InDelegate, Priority); }
};

/* Delete Entry
 *
 * Delete an existing MatchMakingProfileListEntry in a MatchMakingProfileList  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxDeleteEntry : public FRequest
{
    FRequest_OrgProductSandboxDeleteEntry();
    virtual ~FRequest_OrgProductSandboxDeleteEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    FGuid ProfileListEntryId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxDeleteEntry : public FResponse
{
    FResponse_OrgProductSandboxDeleteEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxDeleteEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;



};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxDeleteEntry
{
    typedef FRequest_OrgProductSandboxDeleteEntry Request;
    typedef FResponse_OrgProductSandboxDeleteEntry Response;
    typedef FDelegate_OrgProductSandboxDeleteEntry Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxDeleteEntry(InRequest, InDelegate, Priority); }
};

/* Delete Profile
 *
 * Delete a MatchMakingProfile in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxDeleteProfile : public FRequest
{
    FRequest_OrgProductSandboxDeleteProfile();
    virtual ~FRequest_OrgProductSandboxDeleteProfile() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxDeleteProfile : public FResponse
{
    FResponse_OrgProductSandboxDeleteProfile(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxDeleteProfile() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;



};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxDeleteProfile
{
    typedef FRequest_OrgProductSandboxDeleteProfile Request;
    typedef FResponse_OrgProductSandboxDeleteProfile Response;
    typedef FDelegate_OrgProductSandboxDeleteProfile Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxDeleteProfile(InRequest, InDelegate, Priority); }
};

/* Delete Profile List
 *
 * Delete a MatchMakingProfileList in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxDeleteProfileList : public FRequest
{
    FRequest_OrgProductSandboxDeleteProfileList();
    virtual ~FRequest_OrgProductSandboxDeleteProfileList() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxDeleteProfileList : public FResponse
{
    FResponse_OrgProductSandboxDeleteProfileList(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxDeleteProfileList() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;



};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxDeleteProfileList
{
    typedef FRequest_OrgProductSandboxDeleteProfileList Request;
    typedef FResponse_OrgProductSandboxDeleteProfileList Response;
    typedef FDelegate_OrgProductSandboxDeleteProfileList Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxDeleteProfileList(InRequest, InDelegate, Priority); }
};

/* Get All Entries
 *
 * Get all MatchMakingProfileListEntries in a MatchMakingProfileList  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxGetAllEntries : public FRequest
{
    FRequest_OrgProductSandboxGetAllEntries();
    virtual ~FRequest_OrgProductSandboxGetAllEntries() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxGetAllEntries : public FResponse
{
    FResponse_OrgProductSandboxGetAllEntries(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxGetAllEntries() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingProfileListEntriesResponse Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxGetAllEntries
{
    typedef FRequest_OrgProductSandboxGetAllEntries Request;
    typedef FResponse_OrgProductSandboxGetAllEntries Response;
    typedef FDelegate_OrgProductSandboxGetAllEntries Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxGetAllEntries(InRequest, InDelegate, Priority); }
};

/* Get All Profile Lists
 *
 * Get all MatchMakingProfileLists in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxGetAllProfileLists : public FRequest
{
    FRequest_OrgProductSandboxGetAllProfileLists();
    virtual ~FRequest_OrgProductSandboxGetAllProfileLists() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxGetAllProfileLists : public FResponse
{
    FResponse_OrgProductSandboxGetAllProfileLists(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxGetAllProfileLists() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingProfileListsResponse Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxGetAllProfileLists
{
    typedef FRequest_OrgProductSandboxGetAllProfileLists Request;
    typedef FResponse_OrgProductSandboxGetAllProfileLists Response;
    typedef FDelegate_OrgProductSandboxGetAllProfileLists Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxGetAllProfileLists(InRequest, InDelegate, Priority); }
};

/* Get All Profiles
 *
 * Get all MatchMakingProfiles in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxGetAllProfiles : public FRequest
{
    FRequest_OrgProductSandboxGetAllProfiles();
    virtual ~FRequest_OrgProductSandboxGetAllProfiles() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxGetAllProfiles : public FResponse
{
    FResponse_OrgProductSandboxGetAllProfiles(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxGetAllProfiles() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingProfilesResponse Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxGetAllProfiles
{
    typedef FRequest_OrgProductSandboxGetAllProfiles Request;
    typedef FResponse_OrgProductSandboxGetAllProfiles Response;
    typedef FDelegate_OrgProductSandboxGetAllProfiles Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxGetAllProfiles(InRequest, InDelegate, Priority); }
};

/* Get Entry
 *
 * Get a specific MatchMakingProfileListEntry in a MatchMakingProfileList  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxGetEntry : public FRequest
{
    FRequest_OrgProductSandboxGetEntry();
    virtual ~FRequest_OrgProductSandboxGetEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    FGuid ProfileListEntryId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxGetEntry : public FResponse
{
    FResponse_OrgProductSandboxGetEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxGetEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileListEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxGetEntry
{
    typedef FRequest_OrgProductSandboxGetEntry Request;
    typedef FResponse_OrgProductSandboxGetEntry Response;
    typedef FDelegate_OrgProductSandboxGetEntry Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxGetEntry(InRequest, InDelegate, Priority); }
};

/* Get Profile
 *
 * Get a specific MatchMakingProfile in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxGetProfile : public FRequest
{
    FRequest_OrgProductSandboxGetProfile();
    virtual ~FRequest_OrgProductSandboxGetProfile() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxGetProfile : public FResponse
{
    FResponse_OrgProductSandboxGetProfile(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxGetProfile() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfile Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxGetProfile
{
    typedef FRequest_OrgProductSandboxGetProfile Request;
    typedef FResponse_OrgProductSandboxGetProfile Response;
    typedef FDelegate_OrgProductSandboxGetProfile Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxGetProfile(InRequest, InDelegate, Priority); }
};

/* Get Profile List
 *
 * Get a specific MatchMakingProfileList in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxGetProfileList : public FRequest
{
    FRequest_OrgProductSandboxGetProfileList();
    virtual ~FRequest_OrgProductSandboxGetProfileList() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxGetProfileList : public FResponse
{
    FResponse_OrgProductSandboxGetProfileList(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxGetProfileList() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileList Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxGetProfileList
{
    typedef FRequest_OrgProductSandboxGetProfileList Request;
    typedef FResponse_OrgProductSandboxGetProfileList Response;
    typedef FDelegate_OrgProductSandboxGetProfileList Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxGetProfileList(InRequest, InDelegate, Priority); }
};

/* Patch Entry
 *
 * Update an existing MatchMakingProfileListEntry in a MatchMakingProfileList  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxPatchEntry : public FRequest
{
    FRequest_OrgProductSandboxPatchEntry();
    virtual ~FRequest_OrgProductSandboxPatchEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    FGuid ProfileListEntryId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingProfileListEntryUpdateRequest MatchMakingProfileListEntryUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxPatchEntry : public FResponse
{
    FResponse_OrgProductSandboxPatchEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxPatchEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileListEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxPatchEntry
{
    typedef FRequest_OrgProductSandboxPatchEntry Request;
    typedef FResponse_OrgProductSandboxPatchEntry Response;
    typedef FDelegate_OrgProductSandboxPatchEntry Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxPatchEntry(InRequest, InDelegate, Priority); }
};

/* Patch Profile
 *
 * Update an existing MatchMakingProfile in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxPatchProfile : public FRequest
{
    FRequest_OrgProductSandboxPatchProfile();
    virtual ~FRequest_OrgProductSandboxPatchProfile() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingProfileUpdateRequest MatchMakingProfileUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxPatchProfile : public FResponse
{
    FResponse_OrgProductSandboxPatchProfile(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxPatchProfile() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfile Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxPatchProfile
{
    typedef FRequest_OrgProductSandboxPatchProfile Request;
    typedef FResponse_OrgProductSandboxPatchProfile Response;
    typedef FDelegate_OrgProductSandboxPatchProfile Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxPatchProfile(InRequest, InDelegate, Priority); }
};

/* Patch Profile List
 *
 * Update an existing MatchMakingProfileList in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxPatchProfileList : public FRequest
{
    FRequest_OrgProductSandboxPatchProfileList();
    virtual ~FRequest_OrgProductSandboxPatchProfileList() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingProfileListUpdateRequest MatchMakingProfileListUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxPatchProfileList : public FResponse
{
    FResponse_OrgProductSandboxPatchProfileList(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxPatchProfileList() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileList Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxPatchProfileList
{
    typedef FRequest_OrgProductSandboxPatchProfileList Request;
    typedef FResponse_OrgProductSandboxPatchProfileList Response;
    typedef FDelegate_OrgProductSandboxPatchProfileList Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxPatchProfileList(InRequest, InDelegate, Priority); }
};

/* Put Entry
 *
 * Update an existing MatchMakingProfileListEntry in a MatchMakingProfileList  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxPutEntry : public FRequest
{
    FRequest_OrgProductSandboxPutEntry();
    virtual ~FRequest_OrgProductSandboxPutEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    FGuid ProfileListEntryId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingProfileListEntryUpdateRequest MatchMakingProfileListEntryUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxPutEntry : public FResponse
{
    FResponse_OrgProductSandboxPutEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxPutEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileListEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxPutEntry
{
    typedef FRequest_OrgProductSandboxPutEntry Request;
    typedef FResponse_OrgProductSandboxPutEntry Response;
    typedef FDelegate_OrgProductSandboxPutEntry Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxPutEntry(InRequest, InDelegate, Priority); }
};

/* Put Profile
 *
 * Update an existing MatchMakingProfile in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxPutProfile : public FRequest
{
    FRequest_OrgProductSandboxPutProfile();
    virtual ~FRequest_OrgProductSandboxPutProfile() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingProfileRequest MatchMakingProfileRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxPutProfile : public FResponse
{
    FResponse_OrgProductSandboxPutProfile(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxPutProfile() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfile Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxPutProfile
{
    typedef FRequest_OrgProductSandboxPutProfile Request;
    typedef FResponse_OrgProductSandboxPutProfile Response;
    typedef FDelegate_OrgProductSandboxPutProfile Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxPutProfile(InRequest, InDelegate, Priority); }
};

/* Put Profile List
 *
 * Update an existing MatchMakingProfileList in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_OrgProductSandboxPutProfileList : public FRequest
{
    FRequest_OrgProductSandboxPutProfileList();
    virtual ~FRequest_OrgProductSandboxPutProfileList() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Organization ID or short name */
    TVariant<FGuid, FString> OrgIdentifier;
    /* Product ID or short name */
    TVariant<FGuid, FString> ProductIdentifier;
    /* Sandbox ID or short name */
    TVariant<FGuid, FString> SandboxIdentifier;
    FRHAPI_DevMatchMakingProfileListRequest MatchMakingProfileListRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_OrgProductSandboxPutProfileList : public FResponse
{
    FResponse_OrgProductSandboxPutProfileList(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_OrgProductSandboxPutProfileList() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileList Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_OrgProductSandboxPutProfileList
{
    typedef FRequest_OrgProductSandboxPutProfileList Request;
    typedef FResponse_OrgProductSandboxPutProfileList Response;
    typedef FDelegate_OrgProductSandboxPutProfileList Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.OrgProductSandboxPutProfileList(InRequest, InDelegate, Priority); }
};

/* Create Entry
 *
 * Create a new MatchMakingProfileListEntry in a MatchMakingProfileList  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxCreateEntry : public FRequest
{
    FRequest_SandboxCreateEntry();
    virtual ~FRequest_SandboxCreateEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingProfileListEntryRequest MatchMakingProfileListEntryRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxCreateEntry : public FResponse
{
    FResponse_SandboxCreateEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxCreateEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileListEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxCreateEntry
{
    typedef FRequest_SandboxCreateEntry Request;
    typedef FResponse_SandboxCreateEntry Response;
    typedef FDelegate_SandboxCreateEntry Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxCreateEntry(InRequest, InDelegate, Priority); }
};

/* Create Profile
 *
 * Create a new MatchMakingProfile in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxCreateProfile : public FRequest
{
    FRequest_SandboxCreateProfile();
    virtual ~FRequest_SandboxCreateProfile() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingProfileRequest MatchMakingProfileRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxCreateProfile : public FResponse
{
    FResponse_SandboxCreateProfile(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxCreateProfile() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfile Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxCreateProfile
{
    typedef FRequest_SandboxCreateProfile Request;
    typedef FResponse_SandboxCreateProfile Response;
    typedef FDelegate_SandboxCreateProfile Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxCreateProfile(InRequest, InDelegate, Priority); }
};

/* Create Profile List
 *
 * Create a new MatchMakingProfileList in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxCreateProfileList : public FRequest
{
    FRequest_SandboxCreateProfileList();
    virtual ~FRequest_SandboxCreateProfileList() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingProfileListRequest MatchMakingProfileListRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxCreateProfileList : public FResponse
{
    FResponse_SandboxCreateProfileList(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxCreateProfileList() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileList Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxCreateProfileList
{
    typedef FRequest_SandboxCreateProfileList Request;
    typedef FResponse_SandboxCreateProfileList Response;
    typedef FDelegate_SandboxCreateProfileList Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxCreateProfileList(InRequest, InDelegate, Priority); }
};

/* Delete Entry
 *
 * Delete an existing MatchMakingProfileListEntry in a MatchMakingProfileList  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxDeleteEntry : public FRequest
{
    FRequest_SandboxDeleteEntry();
    virtual ~FRequest_SandboxDeleteEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    FGuid ProfileListEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxDeleteEntry : public FResponse
{
    FResponse_SandboxDeleteEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxDeleteEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;



};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxDeleteEntry
{
    typedef FRequest_SandboxDeleteEntry Request;
    typedef FResponse_SandboxDeleteEntry Response;
    typedef FDelegate_SandboxDeleteEntry Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxDeleteEntry(InRequest, InDelegate, Priority); }
};

/* Delete Profile
 *
 * Delete a MatchMakingProfile in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxDeleteProfile : public FRequest
{
    FRequest_SandboxDeleteProfile();
    virtual ~FRequest_SandboxDeleteProfile() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxDeleteProfile : public FResponse
{
    FResponse_SandboxDeleteProfile(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxDeleteProfile() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;



};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxDeleteProfile
{
    typedef FRequest_SandboxDeleteProfile Request;
    typedef FResponse_SandboxDeleteProfile Response;
    typedef FDelegate_SandboxDeleteProfile Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxDeleteProfile(InRequest, InDelegate, Priority); }
};

/* Delete Profile List
 *
 * Delete a MatchMakingProfileList in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxDeleteProfileList : public FRequest
{
    FRequest_SandboxDeleteProfileList();
    virtual ~FRequest_SandboxDeleteProfileList() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxDeleteProfileList : public FResponse
{
    FResponse_SandboxDeleteProfileList(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxDeleteProfileList() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;



};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxDeleteProfileList
{
    typedef FRequest_SandboxDeleteProfileList Request;
    typedef FResponse_SandboxDeleteProfileList Response;
    typedef FDelegate_SandboxDeleteProfileList Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxDeleteProfileList(InRequest, InDelegate, Priority); }
};

/* Get All Entries
 *
 * Get all MatchMakingProfileListEntries in a MatchMakingProfileList  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetAllEntries : public FRequest
{
    FRequest_SandboxGetAllEntries();
    virtual ~FRequest_SandboxGetAllEntries() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Sandbox ID */
    FGuid SandboxId;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetAllEntries : public FResponse
{
    FResponse_SandboxGetAllEntries(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetAllEntries() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingProfileListEntriesResponse Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetAllEntries
{
    typedef FRequest_SandboxGetAllEntries Request;
    typedef FResponse_SandboxGetAllEntries Response;
    typedef FDelegate_SandboxGetAllEntries Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetAllEntries(InRequest, InDelegate, Priority); }
};

/* Get All Profile Lists
 *
 * Get all MatchMakingProfileLists in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetAllProfileLists : public FRequest
{
    FRequest_SandboxGetAllProfileLists();
    virtual ~FRequest_SandboxGetAllProfileLists() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox ID */
    FGuid SandboxId;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetAllProfileLists : public FResponse
{
    FResponse_SandboxGetAllProfileLists(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetAllProfileLists() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingProfileListsResponse Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetAllProfileLists
{
    typedef FRequest_SandboxGetAllProfileLists Request;
    typedef FResponse_SandboxGetAllProfileLists Response;
    typedef FDelegate_SandboxGetAllProfileLists Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetAllProfileLists(InRequest, InDelegate, Priority); }
};

/* Get All Profiles
 *
 * Get all MatchMakingProfiles in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetAllProfiles : public FRequest
{
    FRequest_SandboxGetAllProfiles();
    virtual ~FRequest_SandboxGetAllProfiles() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox ID */
    FGuid SandboxId;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetAllProfiles : public FResponse
{
    FResponse_SandboxGetAllProfiles(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetAllProfiles() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllMatchMakingProfilesResponse Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetAllProfiles
{
    typedef FRequest_SandboxGetAllProfiles Request;
    typedef FResponse_SandboxGetAllProfiles Response;
    typedef FDelegate_SandboxGetAllProfiles Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetAllProfiles(InRequest, InDelegate, Priority); }
};

/* Get Entry
 *
 * Get a specific MatchMakingProfileListEntry in a MatchMakingProfileList  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetEntry : public FRequest
{
    FRequest_SandboxGetEntry();
    virtual ~FRequest_SandboxGetEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    FGuid ProfileListEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetEntry : public FResponse
{
    FResponse_SandboxGetEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileListEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetEntry
{
    typedef FRequest_SandboxGetEntry Request;
    typedef FResponse_SandboxGetEntry Response;
    typedef FDelegate_SandboxGetEntry Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetEntry(InRequest, InDelegate, Priority); }
};

/* Get Profile
 *
 * Get a specific MatchMakingProfile in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetProfile : public FRequest
{
    FRequest_SandboxGetProfile();
    virtual ~FRequest_SandboxGetProfile() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetProfile : public FResponse
{
    FResponse_SandboxGetProfile(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetProfile() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfile Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetProfile
{
    typedef FRequest_SandboxGetProfile Request;
    typedef FResponse_SandboxGetProfile Response;
    typedef FDelegate_SandboxGetProfile Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetProfile(InRequest, InDelegate, Priority); }
};

/* Get Profile List
 *
 * Get a specific MatchMakingProfileList in a sandbox  Requires any of permissions:    sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetProfileList : public FRequest
{
    FRequest_SandboxGetProfileList();
    virtual ~FRequest_SandboxGetProfileList() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetProfileList : public FResponse
{
    FResponse_SandboxGetProfileList(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetProfileList() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileList Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetProfileList
{
    typedef FRequest_SandboxGetProfileList Request;
    typedef FResponse_SandboxGetProfileList Response;
    typedef FDelegate_SandboxGetProfileList Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetProfileList(InRequest, InDelegate, Priority); }
};

/* Patch Entry
 *
 * Update an existing MatchMakingProfileListEntry in a MatchMakingProfileList  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPatchEntry : public FRequest
{
    FRequest_SandboxPatchEntry();
    virtual ~FRequest_SandboxPatchEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    FGuid ProfileListEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingProfileListEntryUpdateRequest MatchMakingProfileListEntryUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPatchEntry : public FResponse
{
    FResponse_SandboxPatchEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPatchEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileListEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPatchEntry
{
    typedef FRequest_SandboxPatchEntry Request;
    typedef FResponse_SandboxPatchEntry Response;
    typedef FDelegate_SandboxPatchEntry Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPatchEntry(InRequest, InDelegate, Priority); }
};

/* Patch Profile
 *
 * Update an existing MatchMakingProfile in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPatchProfile : public FRequest
{
    FRequest_SandboxPatchProfile();
    virtual ~FRequest_SandboxPatchProfile() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingProfileUpdateRequest MatchMakingProfileUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPatchProfile : public FResponse
{
    FResponse_SandboxPatchProfile(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPatchProfile() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfile Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPatchProfile
{
    typedef FRequest_SandboxPatchProfile Request;
    typedef FResponse_SandboxPatchProfile Response;
    typedef FDelegate_SandboxPatchProfile Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPatchProfile(InRequest, InDelegate, Priority); }
};

/* Patch Profile List
 *
 * Update an existing MatchMakingProfileList in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPatchProfileList : public FRequest
{
    FRequest_SandboxPatchProfileList();
    virtual ~FRequest_SandboxPatchProfileList() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingProfileListUpdateRequest MatchMakingProfileListUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPatchProfileList : public FResponse
{
    FResponse_SandboxPatchProfileList(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPatchProfileList() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileList Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPatchProfileList
{
    typedef FRequest_SandboxPatchProfileList Request;
    typedef FResponse_SandboxPatchProfileList Response;
    typedef FDelegate_SandboxPatchProfileList Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPatchProfileList(InRequest, InDelegate, Priority); }
};

/* Put Entry
 *
 * Update an existing MatchMakingProfileListEntry in a MatchMakingProfileList  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPutEntry : public FRequest
{
    FRequest_SandboxPutEntry();
    virtual ~FRequest_SandboxPutEntry() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    FGuid ProfileListEntryId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingProfileListEntryUpdateRequest MatchMakingProfileListEntryUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPutEntry : public FResponse
{
    FResponse_SandboxPutEntry(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPutEntry() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileListEntry Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPutEntry
{
    typedef FRequest_SandboxPutEntry Request;
    typedef FResponse_SandboxPutEntry Response;
    typedef FDelegate_SandboxPutEntry Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPutEntry(InRequest, InDelegate, Priority); }
};

/* Put Profile
 *
 * Update an existing MatchMakingProfile in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPutProfile : public FRequest
{
    FRequest_SandboxPutProfile();
    virtual ~FRequest_SandboxPutProfile() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingProfileRequest MatchMakingProfileRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPutProfile : public FResponse
{
    FResponse_SandboxPutProfile(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPutProfile() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfile Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPutProfile
{
    typedef FRequest_SandboxPutProfile Request;
    typedef FResponse_SandboxPutProfile Response;
    typedef FDelegate_SandboxPutProfile Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPutProfile(InRequest, InDelegate, Priority); }
};

/* Put Profile List
 *
 * Update an existing MatchMakingProfileList in a sandbox  Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPutProfileList : public FRequest
{
    FRequest_SandboxPutProfileList();
    virtual ~FRequest_SandboxPutProfileList() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid ProfileListId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevMatchMakingProfileListRequest MatchMakingProfileListRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPutProfileList : public FResponse
{
    FResponse_SandboxPutProfileList(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPutProfileList() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevMatchMakingProfileList Content;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPutProfileList
{
    typedef FRequest_SandboxPutProfileList Request;
    typedef FResponse_SandboxPutProfileList Response;
    typedef FDelegate_SandboxPutProfileList Delegate;
    typedef FMatchMakingProfilesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPutProfileList(InRequest, InDelegate, Priority); }
};


}
