// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevStrideFactory.h"
#include "DevMatchMakingStrideUpdateRequest.generated.h"

/** @defgroup RHAPI_DevMatchMakingStrideUpdateRequest RallyHere API Model DevMatchMakingStrideUpdateRequest
 *  @{
 */

/**
 * @brief
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevMatchMakingStrideUpdateRequest : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief Readable name to identify this MatchMakingStride */
    FString Name_Optional{  };
    /** @brief true if Name_Optional has been set to a value */
    bool Name_IsSet{ false };
    /** @brief Gets the value of Name_Optional, regardless of it having been set */
    FString& GetName() { return Name_Optional; }
    /** @brief Gets the value of Name_Optional, regardless of it having been set */
    const FString& GetName() const { return Name_Optional; }
    /** @brief Gets the value of Name_Optional, if it has been set, otherwise it returns DefaultValue */
    const FString& GetName(const FString& DefaultValue) const { if (Name_IsSet) return Name_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of Name_Optional and returns true if it has been set, otherwise returns false */
    bool GetName(FString& OutValue) const { if (Name_IsSet) OutValue = Name_Optional; return Name_IsSet; }
    /** @brief Returns a pointer to Name_Optional, if it has been set, otherwise returns nullptr */
    FString* GetNameOrNull() { if (Name_IsSet) return &Name_Optional; return nullptr; }
    /** @brief Returns a pointer to Name_Optional, if it has been set, otherwise returns nullptr */
    const FString* GetNameOrNull() const { if (Name_IsSet) return &Name_Optional; return nullptr; }
    /** @brief Sets the value of Name_Optional and also sets Name_IsSet to true */
    void SetName(FString NewValue) { Name_Optional = NewValue; Name_IsSet = true; }
     /** @brief Clears the value of Name_Optional and sets Name_IsSet to false */
    void ClearName() { Name_IsSet = false; }

    /** @brief Which factory is used when creating the player partitions for this stride */
    ERHAPI_DevStrideFactory Factory_Optional{  };
    /** @brief true if Factory_Optional has been set to a value */
    bool Factory_IsSet{ false };
    /** @brief Gets the value of Factory_Optional, regardless of it having been set */
    ERHAPI_DevStrideFactory& GetFactory() { return Factory_Optional; }
    /** @brief Gets the value of Factory_Optional, regardless of it having been set */
    const ERHAPI_DevStrideFactory& GetFactory() const { return Factory_Optional; }
    /** @brief Gets the value of Factory_Optional, if it has been set, otherwise it returns DefaultValue */
    const ERHAPI_DevStrideFactory& GetFactory(const ERHAPI_DevStrideFactory& DefaultValue) const { if (Factory_IsSet) return Factory_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of Factory_Optional and returns true if it has been set, otherwise returns false */
    bool GetFactory(ERHAPI_DevStrideFactory& OutValue) const { if (Factory_IsSet) OutValue = Factory_Optional; return Factory_IsSet; }
    /** @brief Returns a pointer to Factory_Optional, if it has been set, otherwise returns nullptr */
    ERHAPI_DevStrideFactory* GetFactoryOrNull() { if (Factory_IsSet) return &Factory_Optional; return nullptr; }
    /** @brief Returns a pointer to Factory_Optional, if it has been set, otherwise returns nullptr */
    const ERHAPI_DevStrideFactory* GetFactoryOrNull() const { if (Factory_IsSet) return &Factory_Optional; return nullptr; }
    /** @brief Sets the value of Factory_Optional and also sets Factory_IsSet to true */
    void SetFactory(ERHAPI_DevStrideFactory NewValue) { Factory_Optional = NewValue; Factory_IsSet = true; }
     /** @brief Clears the value of Factory_Optional and sets Factory_IsSet to false */
    void ClearFactory() { Factory_IsSet = false; }
};

/** @} */
