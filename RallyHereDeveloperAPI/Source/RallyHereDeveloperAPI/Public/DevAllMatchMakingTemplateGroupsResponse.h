// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevMatchMakingTemplateGroup.h"
#include "DevAllMatchMakingTemplateGroupsResponse.generated.h"

/** @defgroup RHAPI_DevAllMatchMakingTemplateGroupsResponse RallyHere API Model DevAllMatchMakingTemplateGroupsResponse
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevAllMatchMakingTemplateGroupsResponse : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    FString Cursor{  };
    /** @brief Gets the value of Cursor */
    FString& GetCursor() { return Cursor; }
    /** @brief Gets the value of Cursor */
    const FString& GetCursor() const { return Cursor; }
    /** @brief Sets the value of Cursor */
    void SetCursor(FString NewValue) { Cursor = NewValue;  }

    /** @brief List of MatchMakingTemplateGroups */
    TArray<FRHAPI_DevMatchMakingTemplateGroup> Groups_Optional{  };
    /** @brief true if Groups_Optional has been set to a value */
    bool Groups_IsSet{ false };
    /** @brief Gets the value of Groups_Optional, regardless of it having been set */
    TArray<FRHAPI_DevMatchMakingTemplateGroup>& GetGroups() { return Groups_Optional; }
    /** @brief Gets the value of Groups_Optional, regardless of it having been set */
    const TArray<FRHAPI_DevMatchMakingTemplateGroup>& GetGroups() const { return Groups_Optional; }
    /** @brief Gets the value of Groups_Optional, if it has been set, otherwise it returns DefaultValue */
    const TArray<FRHAPI_DevMatchMakingTemplateGroup>& GetGroups(const TArray<FRHAPI_DevMatchMakingTemplateGroup>& DefaultValue) const { if (Groups_IsSet) return Groups_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of Groups_Optional and returns true if it has been set, otherwise returns false */
    bool GetGroups(TArray<FRHAPI_DevMatchMakingTemplateGroup>& OutValue) const { if (Groups_IsSet) OutValue = Groups_Optional; return Groups_IsSet; }
    /** @brief Returns a pointer to Groups_Optional, if it has been set, otherwise returns nullptr */
    TArray<FRHAPI_DevMatchMakingTemplateGroup>* GetGroupsOrNull() { if (Groups_IsSet) return &Groups_Optional; return nullptr; }
    /** @brief Returns a pointer to Groups_Optional, if it has been set, otherwise returns nullptr */
    const TArray<FRHAPI_DevMatchMakingTemplateGroup>* GetGroupsOrNull() const { if (Groups_IsSet) return &Groups_Optional; return nullptr; }
    /** @brief Sets the value of Groups_Optional and also sets Groups_IsSet to true */
    void SetGroups(TArray<FRHAPI_DevMatchMakingTemplateGroup> NewValue) { Groups_Optional = NewValue; Groups_IsSet = true; }
     /** @brief Clears the value of Groups_Optional and sets Groups_IsSet to false */
    void ClearGroups() { Groups_IsSet = false; }
};

/** @} */
