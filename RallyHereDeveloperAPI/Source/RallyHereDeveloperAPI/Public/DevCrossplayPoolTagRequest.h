// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevCrossplayPoolTagRequest.generated.h"

/** @defgroup RHAPI_DevCrossplayPoolTagRequest RallyHere API Model DevCrossplayPoolTagRequest
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevCrossplayPoolTagRequest : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief The open-match tag to be added to the specific pool */
    FString Tag{  };
    /** @brief Gets the value of Tag */
    FString& GetTag() { return Tag; }
    /** @brief Gets the value of Tag */
    const FString& GetTag() const { return Tag; }
    /** @brief Sets the value of Tag */
    void SetTag(FString NewValue) { Tag = NewValue;  }

    /** @brief Which CrossplayPool this CrossplayPoolTag belongs to */
    FGuid CrossplayPoolId{  };
    /** @brief Gets the value of CrossplayPoolId */
    FGuid& GetCrossplayPoolId() { return CrossplayPoolId; }
    /** @brief Gets the value of CrossplayPoolId */
    const FGuid& GetCrossplayPoolId() const { return CrossplayPoolId; }
    /** @brief Sets the value of CrossplayPoolId */
    void SetCrossplayPoolId(FGuid NewValue) { CrossplayPoolId = NewValue;  }
};

/** @} */
