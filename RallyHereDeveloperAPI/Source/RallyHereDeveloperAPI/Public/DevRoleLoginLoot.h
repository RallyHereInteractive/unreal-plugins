// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevRoleLoginLoot.generated.h"

/** @defgroup RHAPI_DevRoleLoginLoot RallyHere API Model DevRoleLoginLoot
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevRoleLoginLoot : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief Loot ID for this login loot reward tied to this role */
    FGuid LootId{  };
    /** @brief Gets the value of LootId */
    FGuid& GetLootId() { return LootId; }
    /** @brief Gets the value of LootId */
    const FGuid& GetLootId() const { return LootId; }
    /** @brief Sets the value of LootId */
    void SetLootId(FGuid NewValue) { LootId = NewValue;  }

    /** @brief Legacy loot ID for this login loot reward tied to this role */
    int32 LegacyLootId_Optional{  };
    /** @brief true if LegacyLootId_Optional has been set to a value */
    bool LegacyLootId_IsSet{ false };
    /** @brief Gets the value of LegacyLootId_Optional, regardless of it having been set */
    int32& GetLegacyLootId() { return LegacyLootId_Optional; }
    /** @brief Gets the value of LegacyLootId_Optional, regardless of it having been set */
    const int32& GetLegacyLootId() const { return LegacyLootId_Optional; }
    /** @brief Gets the value of LegacyLootId_Optional, if it has been set, otherwise it returns DefaultValue */
    const int32& GetLegacyLootId(const int32& DefaultValue) const { if (LegacyLootId_IsSet) return LegacyLootId_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of LegacyLootId_Optional and returns true if it has been set, otherwise returns false */
    bool GetLegacyLootId(int32& OutValue) const { if (LegacyLootId_IsSet) OutValue = LegacyLootId_Optional; return LegacyLootId_IsSet; }
    /** @brief Returns a pointer to LegacyLootId_Optional, if it has been set, otherwise returns nullptr */
    int32* GetLegacyLootIdOrNull() { if (LegacyLootId_IsSet) return &LegacyLootId_Optional; return nullptr; }
    /** @brief Returns a pointer to LegacyLootId_Optional, if it has been set, otherwise returns nullptr */
    const int32* GetLegacyLootIdOrNull() const { if (LegacyLootId_IsSet) return &LegacyLootId_Optional; return nullptr; }
    /** @brief Sets the value of LegacyLootId_Optional and also sets LegacyLootId_IsSet to true */
    void SetLegacyLootId(int32 NewValue) { LegacyLootId_Optional = NewValue; LegacyLootId_IsSet = true; }
     /** @brief Clears the value of LegacyLootId_Optional and sets LegacyLootId_IsSet to false */
    void ClearLegacyLootId() { LegacyLootId_Optional = 0; LegacyLootId_IsSet = false; }
    /** @brief Returns true if LegacyLootId_Optional is set and matches the default value */
    bool IsLegacyLootIdDefaultValue() const { return LegacyLootId_IsSet && LegacyLootId_Optional == 0; }
    /** @brief Sets the value of LegacyLootId_Optional to its default and also sets LegacyLootId_IsSet to true */
    void SetLegacyLootIdToDefault() { LegacyLootId_Optional = 0; LegacyLootId_IsSet = true; }
};

/** @} */
