// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevPortalPermissionsOrgGroupPermission.h"
#include "DevPortalPermissionsOrgGroupAuth0.generated.h"

/** @defgroup RHAPI_DevPortalPermissionsOrgGroupAuth0 RallyHere API Model DevPortalPermissionsOrgGroupAuth0
 *  @{
 */

/**
 * @brief
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevPortalPermissionsOrgGroupAuth0 : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    FGuid GroupId{  };
    /** @brief Gets the value of GroupId */
    FGuid& GetGroupId() { return GroupId; }
    /** @brief Gets the value of GroupId */
    const FGuid& GetGroupId() const { return GroupId; }
    /** @brief Sets the value of GroupId */
    void SetGroupId(FGuid NewValue) { GroupId = NewValue;  }

    TArray<FRHAPI_DevPortalPermissionsOrgGroupPermission> Permissions_Optional{  };
    /** @brief true if Permissions_Optional has been set to a value */
    bool Permissions_IsSet{ false };
    /** @brief Gets the value of Permissions_Optional, regardless of it having been set */
    TArray<FRHAPI_DevPortalPermissionsOrgGroupPermission>& GetPermissions() { return Permissions_Optional; }
    /** @brief Gets the value of Permissions_Optional, regardless of it having been set */
    const TArray<FRHAPI_DevPortalPermissionsOrgGroupPermission>& GetPermissions() const { return Permissions_Optional; }
    /** @brief Gets the value of Permissions_Optional, if it has been set, otherwise it returns DefaultValue */
    const TArray<FRHAPI_DevPortalPermissionsOrgGroupPermission>& GetPermissions(const TArray<FRHAPI_DevPortalPermissionsOrgGroupPermission>& DefaultValue) const { if (Permissions_IsSet) return Permissions_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of Permissions_Optional and returns true if it has been set, otherwise returns false */
    bool GetPermissions(TArray<FRHAPI_DevPortalPermissionsOrgGroupPermission>& OutValue) const { if (Permissions_IsSet) OutValue = Permissions_Optional; return Permissions_IsSet; }
    /** @brief Returns a pointer to Permissions_Optional, if it has been set, otherwise returns nullptr */
    TArray<FRHAPI_DevPortalPermissionsOrgGroupPermission>* GetPermissionsOrNull() { if (Permissions_IsSet) return &Permissions_Optional; return nullptr; }
    /** @brief Returns a pointer to Permissions_Optional, if it has been set, otherwise returns nullptr */
    const TArray<FRHAPI_DevPortalPermissionsOrgGroupPermission>* GetPermissionsOrNull() const { if (Permissions_IsSet) return &Permissions_Optional; return nullptr; }
    /** @brief Sets the value of Permissions_Optional and also sets Permissions_IsSet to true */
    void SetPermissions(TArray<FRHAPI_DevPortalPermissionsOrgGroupPermission> NewValue) { Permissions_Optional = NewValue; Permissions_IsSet = true; }
     /** @brief Clears the value of Permissions_Optional and sets Permissions_IsSet to false */
    void ClearPermissions() { Permissions_IsSet = false; }
};

/** @} */
