// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevPortalAccountPermission.h"
#include "DevPortalPermissionsOrgGroupAuth0.h"
#include "DevPortalPermissions.generated.h"

/** @defgroup RHAPI_DevPortalPermissions RallyHere API Model DevPortalPermissions
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevPortalPermissions : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief Account id */
    FGuid AccountId{  };
    /** @brief Gets the value of AccountId */
    FGuid& GetAccountId() { return AccountId; }
    /** @brief Gets the value of AccountId */
    const FGuid& GetAccountId() const { return AccountId; }
    /** @brief Sets the value of AccountId */
    void SetAccountId(FGuid NewValue) { AccountId = NewValue;  }

    /** @brief Is this account a global admin */
    bool IsGlobalAdmin{ false };
    /** @brief Gets the value of IsGlobalAdmin */
    bool& GetIsGlobalAdmin() { return IsGlobalAdmin; }
    /** @brief Gets the value of IsGlobalAdmin */
    const bool& GetIsGlobalAdmin() const { return IsGlobalAdmin; }
    /** @brief Sets the value of IsGlobalAdmin */
    void SetIsGlobalAdmin(bool NewValue) { IsGlobalAdmin = NewValue;  }
    /** @brief Returns true if IsGlobalAdmin matches the default value */
    bool IsIsGlobalAdminDefaultValue() const { return IsGlobalAdmin == false; }
    /** @brief Sets the value of IsGlobalAdmin to its default  */
    void SetIsGlobalAdminToDefault() { IsGlobalAdmin = false;  }

    TArray<FRHAPI_DevPortalAccountPermission> AccountPermissions_Optional{  };
    /** @brief true if AccountPermissions_Optional has been set to a value */
    bool AccountPermissions_IsSet{ false };
    /** @brief Gets the value of AccountPermissions_Optional, regardless of it having been set */
    TArray<FRHAPI_DevPortalAccountPermission>& GetAccountPermissions() { return AccountPermissions_Optional; }
    /** @brief Gets the value of AccountPermissions_Optional, regardless of it having been set */
    const TArray<FRHAPI_DevPortalAccountPermission>& GetAccountPermissions() const { return AccountPermissions_Optional; }
    /** @brief Gets the value of AccountPermissions_Optional, if it has been set, otherwise it returns DefaultValue */
    const TArray<FRHAPI_DevPortalAccountPermission>& GetAccountPermissions(const TArray<FRHAPI_DevPortalAccountPermission>& DefaultValue) const { if (AccountPermissions_IsSet) return AccountPermissions_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of AccountPermissions_Optional and returns true if it has been set, otherwise returns false */
    bool GetAccountPermissions(TArray<FRHAPI_DevPortalAccountPermission>& OutValue) const { if (AccountPermissions_IsSet) OutValue = AccountPermissions_Optional; return AccountPermissions_IsSet; }
    /** @brief Returns a pointer to AccountPermissions_Optional, if it has been set, otherwise returns nullptr */
    TArray<FRHAPI_DevPortalAccountPermission>* GetAccountPermissionsOrNull() { if (AccountPermissions_IsSet) return &AccountPermissions_Optional; return nullptr; }
    /** @brief Returns a pointer to AccountPermissions_Optional, if it has been set, otherwise returns nullptr */
    const TArray<FRHAPI_DevPortalAccountPermission>* GetAccountPermissionsOrNull() const { if (AccountPermissions_IsSet) return &AccountPermissions_Optional; return nullptr; }
    /** @brief Sets the value of AccountPermissions_Optional and also sets AccountPermissions_IsSet to true */
    void SetAccountPermissions(TArray<FRHAPI_DevPortalAccountPermission> NewValue) { AccountPermissions_Optional = NewValue; AccountPermissions_IsSet = true; }
     /** @brief Clears the value of AccountPermissions_Optional and sets AccountPermissions_IsSet to false */
    void ClearAccountPermissions() { AccountPermissions_IsSet = false; }

    TArray<FRHAPI_DevPortalPermissionsOrgGroupAuth0> GroupPermissions_Optional{  };
    /** @brief true if GroupPermissions_Optional has been set to a value */
    bool GroupPermissions_IsSet{ false };
    /** @brief Gets the value of GroupPermissions_Optional, regardless of it having been set */
    TArray<FRHAPI_DevPortalPermissionsOrgGroupAuth0>& GetGroupPermissions() { return GroupPermissions_Optional; }
    /** @brief Gets the value of GroupPermissions_Optional, regardless of it having been set */
    const TArray<FRHAPI_DevPortalPermissionsOrgGroupAuth0>& GetGroupPermissions() const { return GroupPermissions_Optional; }
    /** @brief Gets the value of GroupPermissions_Optional, if it has been set, otherwise it returns DefaultValue */
    const TArray<FRHAPI_DevPortalPermissionsOrgGroupAuth0>& GetGroupPermissions(const TArray<FRHAPI_DevPortalPermissionsOrgGroupAuth0>& DefaultValue) const { if (GroupPermissions_IsSet) return GroupPermissions_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of GroupPermissions_Optional and returns true if it has been set, otherwise returns false */
    bool GetGroupPermissions(TArray<FRHAPI_DevPortalPermissionsOrgGroupAuth0>& OutValue) const { if (GroupPermissions_IsSet) OutValue = GroupPermissions_Optional; return GroupPermissions_IsSet; }
    /** @brief Returns a pointer to GroupPermissions_Optional, if it has been set, otherwise returns nullptr */
    TArray<FRHAPI_DevPortalPermissionsOrgGroupAuth0>* GetGroupPermissionsOrNull() { if (GroupPermissions_IsSet) return &GroupPermissions_Optional; return nullptr; }
    /** @brief Returns a pointer to GroupPermissions_Optional, if it has been set, otherwise returns nullptr */
    const TArray<FRHAPI_DevPortalPermissionsOrgGroupAuth0>* GetGroupPermissionsOrNull() const { if (GroupPermissions_IsSet) return &GroupPermissions_Optional; return nullptr; }
    /** @brief Sets the value of GroupPermissions_Optional and also sets GroupPermissions_IsSet to true */
    void SetGroupPermissions(TArray<FRHAPI_DevPortalPermissionsOrgGroupAuth0> NewValue) { GroupPermissions_Optional = NewValue; GroupPermissions_IsSet = true; }
     /** @brief Clears the value of GroupPermissions_Optional and sets GroupPermissions_IsSet to false */
    void ClearGroupPermissions() { GroupPermissions_IsSet = false; }
};

/** @} */
