// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevDependenciesSandboxConfigMatchmakingQueuesSchemasLegacyConfig.generated.h"

/** @defgroup RHAPI_DevDependenciesSandboxConfigMatchmakingQueuesSchemasLegacyConfig RallyHere API Model DevDependenciesSandboxConfigMatchmakingQueuesSchemasLegacyConfig
 *  @{
 */

/**
 * @brief Old config used by Legacy systems. These values are ignored by the current APIs
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevDependenciesSandboxConfigMatchmakingQueuesSchemasLegacyConfig : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief Old queue id */
    int32 QueueId_Optional{  };
    /** @brief true if QueueId_Optional has been set to a value */
    bool QueueId_IsSet{ false };
    /** @brief Gets the value of QueueId_Optional, regardless of it having been set */
    int32& GetQueueId() { return QueueId_Optional; }
    /** @brief Gets the value of QueueId_Optional, regardless of it having been set */
    const int32& GetQueueId() const { return QueueId_Optional; }
    /** @brief Gets the value of QueueId_Optional, if it has been set, otherwise it returns DefaultValue */
    const int32& GetQueueId(const int32& DefaultValue) const { if (QueueId_IsSet) return QueueId_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of QueueId_Optional and returns true if it has been set, otherwise returns false */
    bool GetQueueId(int32& OutValue) const { if (QueueId_IsSet) OutValue = QueueId_Optional; return QueueId_IsSet; }
    /** @brief Returns a pointer to QueueId_Optional, if it has been set, otherwise returns nullptr */
    int32* GetQueueIdOrNull() { if (QueueId_IsSet) return &QueueId_Optional; return nullptr; }
    /** @brief Returns a pointer to QueueId_Optional, if it has been set, otherwise returns nullptr */
    const int32* GetQueueIdOrNull() const { if (QueueId_IsSet) return &QueueId_Optional; return nullptr; }
    /** @brief Sets the value of QueueId_Optional and also sets QueueId_IsSet to true */
    void SetQueueId(int32 NewValue) { QueueId_Optional = NewValue; QueueId_IsSet = true; }
     /** @brief Clears the value of QueueId_Optional and sets QueueId_IsSet to false */
    void ClearQueueId() { QueueId_Optional = 0; QueueId_IsSet = false; }
    /** @brief Returns true if QueueId_Optional is set and matches the default value */
    bool IsQueueIdDefaultValue() const { return QueueId_IsSet && QueueId_Optional == 0; }
    /** @brief Sets the value of QueueId_Optional to its default and also sets QueueId_IsSet to true */
    void SetQueueIdToDefault() { QueueId_Optional = 0; QueueId_IsSet = true; }
};

/** @} */
