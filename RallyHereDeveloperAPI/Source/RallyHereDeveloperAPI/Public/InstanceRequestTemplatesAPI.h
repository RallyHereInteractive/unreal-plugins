// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereDeveloperAPIAuthContext.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevAllInstanceRequestTemplatesResponse.h"
#include "DevHTTPValidationError.h"
#include "DevInstanceRequestTemplate.h"
#include "DevInstanceRequestTemplateRequest.h"
#include "DevInstanceRequestTemplateUpdateRequest.h"

namespace RallyHereDeveloperAPI
{
using RallyHereDeveloperAPI::ToStringFormatArg;
using RallyHereDeveloperAPI::WriteJsonValue;
using RallyHereDeveloperAPI::TryGetJsonValue;

struct FRequest_SandboxCreateInstanceRequestTemplate;
struct FResponse_SandboxCreateInstanceRequestTemplate;
struct FRequest_SandboxDeleteInstanceRequestTemplate;
struct FResponse_SandboxDeleteInstanceRequestTemplate;
struct FRequest_SandboxGetAllInstanceRequestTemplates;
struct FResponse_SandboxGetAllInstanceRequestTemplates;
struct FRequest_SandboxGetInstanceRequestTemplate;
struct FResponse_SandboxGetInstanceRequestTemplate;
struct FRequest_SandboxPatchInstanceRequestTemplate;
struct FResponse_SandboxPatchInstanceRequestTemplate;
struct FRequest_SandboxPutInstanceRequestTemplate;
struct FResponse_SandboxPutInstanceRequestTemplate;

DECLARE_DELEGATE_OneParam(FDelegate_SandboxCreateInstanceRequestTemplate, const FResponse_SandboxCreateInstanceRequestTemplate&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxDeleteInstanceRequestTemplate, const FResponse_SandboxDeleteInstanceRequestTemplate&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetAllInstanceRequestTemplates, const FResponse_SandboxGetAllInstanceRequestTemplates&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxGetInstanceRequestTemplate, const FResponse_SandboxGetInstanceRequestTemplate&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPatchInstanceRequestTemplate, const FResponse_SandboxPatchInstanceRequestTemplate&);
DECLARE_DELEGATE_OneParam(FDelegate_SandboxPutInstanceRequestTemplate, const FResponse_SandboxPutInstanceRequestTemplate&);

class RALLYHEREDEVELOPERAPI_API FInstanceRequestTemplatesAPI : public FAPI
{
public:
    FInstanceRequestTemplatesAPI();
    virtual ~FInstanceRequestTemplatesAPI();

    FHttpRequestPtr SandboxCreateInstanceRequestTemplate(const FRequest_SandboxCreateInstanceRequestTemplate& Request, const FDelegate_SandboxCreateInstanceRequestTemplate& Delegate = FDelegate_SandboxCreateInstanceRequestTemplate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxDeleteInstanceRequestTemplate(const FRequest_SandboxDeleteInstanceRequestTemplate& Request, const FDelegate_SandboxDeleteInstanceRequestTemplate& Delegate = FDelegate_SandboxDeleteInstanceRequestTemplate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetAllInstanceRequestTemplates(const FRequest_SandboxGetAllInstanceRequestTemplates& Request, const FDelegate_SandboxGetAllInstanceRequestTemplates& Delegate = FDelegate_SandboxGetAllInstanceRequestTemplates(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxGetInstanceRequestTemplate(const FRequest_SandboxGetInstanceRequestTemplate& Request, const FDelegate_SandboxGetInstanceRequestTemplate& Delegate = FDelegate_SandboxGetInstanceRequestTemplate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPatchInstanceRequestTemplate(const FRequest_SandboxPatchInstanceRequestTemplate& Request, const FDelegate_SandboxPatchInstanceRequestTemplate& Delegate = FDelegate_SandboxPatchInstanceRequestTemplate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);
    FHttpRequestPtr SandboxPutInstanceRequestTemplate(const FRequest_SandboxPutInstanceRequestTemplate& Request, const FDelegate_SandboxPutInstanceRequestTemplate& Delegate = FDelegate_SandboxPutInstanceRequestTemplate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority);

private:
    void OnSandboxCreateInstanceRequestTemplateResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxCreateInstanceRequestTemplate Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxDeleteInstanceRequestTemplateResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxDeleteInstanceRequestTemplate Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetAllInstanceRequestTemplatesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetAllInstanceRequestTemplates Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxGetInstanceRequestTemplateResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxGetInstanceRequestTemplate Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPatchInstanceRequestTemplateResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPatchInstanceRequestTemplate Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);
    void OnSandboxPutInstanceRequestTemplateResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_SandboxPutInstanceRequestTemplate Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry, int32 Priority);

};

/* Create Instance Request Template
 *
 * Create a new Instance Request Template in a sandbox
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxCreateInstanceRequestTemplate : public FRequest
{
    FRequest_SandboxCreateInstanceRequestTemplate();
    virtual ~FRequest_SandboxCreateInstanceRequestTemplate() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevInstanceRequestTemplateRequest InstanceRequestTemplateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxCreateInstanceRequestTemplate : public FResponse
{
    FResponse_SandboxCreateInstanceRequestTemplate(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxCreateInstanceRequestTemplate() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevInstanceRequestTemplate Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevInstanceRequestTemplate& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxCreateInstanceRequestTemplate
{
    typedef FRequest_SandboxCreateInstanceRequestTemplate Request;
    typedef FResponse_SandboxCreateInstanceRequestTemplate Response;
    typedef FDelegate_SandboxCreateInstanceRequestTemplate Delegate;
    typedef FInstanceRequestTemplatesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxCreateInstanceRequestTemplate(InRequest, InDelegate, Priority); }
};

/* Delete Instance Request Template
 *
 * Delete an Instance Request Template in a sandbox
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxDeleteInstanceRequestTemplate : public FRequest
{
    FRequest_SandboxDeleteInstanceRequestTemplate();
    virtual ~FRequest_SandboxDeleteInstanceRequestTemplate() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid InstanceRequestTemplateId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxDeleteInstanceRequestTemplate : public FResponse
{
    FResponse_SandboxDeleteInstanceRequestTemplate(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxDeleteInstanceRequestTemplate() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    


    // Manual Response Helpers
    /* Response 204
    Successful Response
    */

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxDeleteInstanceRequestTemplate
{
    typedef FRequest_SandboxDeleteInstanceRequestTemplate Request;
    typedef FResponse_SandboxDeleteInstanceRequestTemplate Response;
    typedef FDelegate_SandboxDeleteInstanceRequestTemplate Delegate;
    typedef FInstanceRequestTemplatesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxDeleteInstanceRequestTemplate(InRequest, InDelegate, Priority); }
};

/* Get All Instance Request Templates
 *
 * Get all Instance Request Templates in a sandbox
 * 
 * Requires any of permissions: 
 * 	 sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetAllInstanceRequestTemplates : public FRequest
{
    FRequest_SandboxGetAllInstanceRequestTemplates();
    virtual ~FRequest_SandboxGetAllInstanceRequestTemplates() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    /* Sandbox ID */
    FGuid SandboxId;
    /* The maximum number of elements to be returned per call */
    TOptional<int32> PageSize;
    /* Cursor to designate where you are in iterating through values. Start with '0', and pass this on subsequent calls to continue iteration */
    TOptional<FString> Cursor;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetAllInstanceRequestTemplates : public FResponse
{
    FResponse_SandboxGetAllInstanceRequestTemplates(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetAllInstanceRequestTemplates() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevAllInstanceRequestTemplatesResponse Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevAllInstanceRequestTemplatesResponse& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetAllInstanceRequestTemplates
{
    typedef FRequest_SandboxGetAllInstanceRequestTemplates Request;
    typedef FResponse_SandboxGetAllInstanceRequestTemplates Response;
    typedef FDelegate_SandboxGetAllInstanceRequestTemplates Delegate;
    typedef FInstanceRequestTemplatesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetAllInstanceRequestTemplates(InRequest, InDelegate, Priority); }
};

/* Get Instance Request Template
 *
 * Get a specific Instance Request Template in a sandbox
 * 
 * Requires any of permissions: 
 * 	 sandbox:config:view, sandbox:config:edit
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxGetInstanceRequestTemplate : public FRequest
{
    FRequest_SandboxGetInstanceRequestTemplate();
    virtual ~FRequest_SandboxGetInstanceRequestTemplate() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid InstanceRequestTemplateId;
    /* Sandbox ID */
    FGuid SandboxId;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxGetInstanceRequestTemplate : public FResponse
{
    FResponse_SandboxGetInstanceRequestTemplate(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxGetInstanceRequestTemplate() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevInstanceRequestTemplate Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevInstanceRequestTemplate& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxGetInstanceRequestTemplate
{
    typedef FRequest_SandboxGetInstanceRequestTemplate Request;
    typedef FResponse_SandboxGetInstanceRequestTemplate Response;
    typedef FDelegate_SandboxGetInstanceRequestTemplate Delegate;
    typedef FInstanceRequestTemplatesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxGetInstanceRequestTemplate(InRequest, InDelegate, Priority); }
};

/* Patch Instance Request Template
 *
 * Update an existing Instance Request Template in a sandbox
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPatchInstanceRequestTemplate : public FRequest
{
    FRequest_SandboxPatchInstanceRequestTemplate();
    virtual ~FRequest_SandboxPatchInstanceRequestTemplate() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid InstanceRequestTemplateId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevInstanceRequestTemplateUpdateRequest InstanceRequestTemplateUpdateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPatchInstanceRequestTemplate : public FResponse
{
    FResponse_SandboxPatchInstanceRequestTemplate(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPatchInstanceRequestTemplate() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevInstanceRequestTemplate Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevInstanceRequestTemplate& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPatchInstanceRequestTemplate
{
    typedef FRequest_SandboxPatchInstanceRequestTemplate Request;
    typedef FResponse_SandboxPatchInstanceRequestTemplate Response;
    typedef FDelegate_SandboxPatchInstanceRequestTemplate Delegate;
    typedef FInstanceRequestTemplatesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPatchInstanceRequestTemplate(InRequest, InDelegate, Priority); }
};

/* Put Instance Request Template
 *
 * Update an existing Instance Request Template in a sandbox
 * 
 * Requires permission sandbox:config:edit.
*/
struct RALLYHEREDEVELOPERAPI_API FRequest_SandboxPutInstanceRequestTemplate : public FRequest
{
    FRequest_SandboxPutInstanceRequestTemplate();
    virtual ~FRequest_SandboxPutInstanceRequestTemplate() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FName GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid InstanceRequestTemplateId;
    /* Sandbox ID */
    FGuid SandboxId;
    FRHAPI_DevInstanceRequestTemplateRequest InstanceRequestTemplateRequest;
};

struct RALLYHEREDEVELOPERAPI_API FResponse_SandboxPutInstanceRequestTemplate : public FResponse
{
    FResponse_SandboxPutInstanceRequestTemplate(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_SandboxPutInstanceRequestTemplate() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_DevInstanceRequestTemplate Content;


    // Manual Response Helpers
    /* Response 200
    Successful Response
    */
    bool TryGetContentFor200(FRHAPI_DevInstanceRequestTemplate& OutContent) const;

    /* Response 422
    Validation Error
    */
    bool TryGetContentFor422(FRHAPI_DevHTTPValidationError& OutContent) const;

};

struct RALLYHEREDEVELOPERAPI_API Traits_SandboxPutInstanceRequestTemplate
{
    typedef FRequest_SandboxPutInstanceRequestTemplate Request;
    typedef FResponse_SandboxPutInstanceRequestTemplate Response;
    typedef FDelegate_SandboxPutInstanceRequestTemplate Delegate;
    typedef FInstanceRequestTemplatesAPI API;
    static FString Name;

    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate(), int32 Priority = DefaultRallyHereDeveloperAPIPriority) { return InAPI.SandboxPutInstanceRequestTemplate(InRequest, InDelegate, Priority); }
};


}
