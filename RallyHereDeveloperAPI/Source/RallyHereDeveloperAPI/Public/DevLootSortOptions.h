// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevLootSortOptions.generated.h"


/**
 * @brief An enumeration.
 */
UENUM(BlueprintType)
enum class ERHAPI_DevLootSortOptions : uint8
{
    LootId UMETA(ToolTip="An enumeration."),
    LegacyLootId UMETA(ToolTip="An enumeration."),
    VendorId UMETA(ToolTip="An enumeration."),
    SubVendorId UMETA(ToolTip="An enumeration."),
    ItemId UMETA(ToolTip="An enumeration."),
    Name UMETA(ToolTip="An enumeration."),
    Description UMETA(ToolTip="An enumeration."),
    InventorySelector UMETA(ToolTip="An enumeration."),
    InventoryOperation UMETA(ToolTip="An enumeration."),
    Quantity UMETA(ToolTip="An enumeration."),
    Active UMETA(ToolTip="An enumeration."),
    SortOrder UMETA(ToolTip="An enumeration."),
    DropWeight UMETA(ToolTip="An enumeration."),
    FillInNewOrder UMETA(ToolTip="An enumeration."),
    AllowPartialBundles UMETA(ToolTip="An enumeration."),
    RequiredItemCount UMETA(ToolTip="An enumeration."),
    StackLimit UMETA(ToolTip="An enumeration."),
    QuantityType UMETA(ToolTip="An enumeration."),
    IsClaimableByClient UMETA(ToolTip="An enumeration."),
    XpQuantityTransformType UMETA(ToolTip="An enumeration."),
    UseInventoryBucket UMETA(ToolTip="An enumeration."),
    HardQuantityMaximum UMETA(ToolTip="An enumeration."),
    LastModifiedTimestamp UMETA(ToolTip="An enumeration."),
};
RALLYHEREDEVELOPERAPI_API FString EnumToString(const ERHAPI_DevLootSortOptions& EnumValue);
RALLYHEREDEVELOPERAPI_API bool EnumFromString(const FString& EnumAsString, ERHAPI_DevLootSortOptions& EnumValue);
RALLYHEREDEVELOPERAPI_API FStringFormatArg ToStringFormatArg(const ERHAPI_DevLootSortOptions& Value);
RALLYHEREDEVELOPERAPI_API void WriteJsonValue(TSharedRef<TJsonWriter<>>& Writer, const ERHAPI_DevLootSortOptions& Value);
RALLYHEREDEVELOPERAPI_API bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, ERHAPI_DevLootSortOptions& Value);
