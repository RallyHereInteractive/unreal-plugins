// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "Misc/TVariant.h"
#include "DevValidationError.generated.h"

/** @defgroup RHAPI_DevValidationError RallyHere API Model DevValidationError
 *  @{
 */

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevValidationError : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    TArray<TVariant<FString, int32>> Loc{  };
    /** @brief Gets the value of Loc */
    TArray<TVariant<FString, int32>>& GetLoc() { return Loc; }
    /** @brief Gets the value of Loc */
    const TArray<TVariant<FString, int32>>& GetLoc() const { return Loc; }
    /** @brief Sets the value of Loc */
    void SetLoc(TArray<TVariant<FString, int32>> NewValue) { Loc = NewValue;  }

    FString Msg{  };
    /** @brief Gets the value of Msg */
    FString& GetMsg() { return Msg; }
    /** @brief Gets the value of Msg */
    const FString& GetMsg() const { return Msg; }
    /** @brief Sets the value of Msg */
    void SetMsg(FString NewValue) { Msg = NewValue;  }

    FString Type{  };
    /** @brief Gets the value of Type */
    FString& GetType() { return Type; }
    /** @brief Gets the value of Type */
    const FString& GetType() const { return Type; }
    /** @brief Sets the value of Type */
    void SetType(FString NewValue) { Type = NewValue;  }
};

/** @} */
