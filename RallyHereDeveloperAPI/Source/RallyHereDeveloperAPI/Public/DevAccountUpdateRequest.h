// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2022-2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereDeveloperAPIBaseModel.h"
#include "RallyHereDeveloperAPIHelpers.h"
#include "DevAccountUpdateRequest.generated.h"

/** @defgroup RHAPI_DevAccountUpdateRequest RallyHere API Model DevAccountUpdateRequest
 *  @{
 */

/**
 * @brief
 */
USTRUCT(BlueprintType)
struct RALLYHEREDEVELOPERAPI_API FRHAPI_DevAccountUpdateRequest : public FRHAPI_DevModel
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief Name for this account */
    FString FirstName_Optional{  };
    /** @brief true if FirstName_Optional has been set to a value */
    bool FirstName_IsSet{ false };
    /** @brief Gets the value of FirstName_Optional, regardless of it having been set */
    FString& GetFirstName() { return FirstName_Optional; }
    /** @brief Gets the value of FirstName_Optional, regardless of it having been set */
    const FString& GetFirstName() const { return FirstName_Optional; }
    /** @brief Gets the value of FirstName_Optional, if it has been set, otherwise it returns DefaultValue */
    const FString& GetFirstName(const FString& DefaultValue) const { if (FirstName_IsSet) return FirstName_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of FirstName_Optional and returns true if it has been set, otherwise returns false */
    bool GetFirstName(FString& OutValue) const { if (FirstName_IsSet) OutValue = FirstName_Optional; return FirstName_IsSet; }
    /** @brief Returns a pointer to FirstName_Optional, if it has been set, otherwise returns nullptr */
    FString* GetFirstNameOrNull() { if (FirstName_IsSet) return &FirstName_Optional; return nullptr; }
    /** @brief Returns a pointer to FirstName_Optional, if it has been set, otherwise returns nullptr */
    const FString* GetFirstNameOrNull() const { if (FirstName_IsSet) return &FirstName_Optional; return nullptr; }
    /** @brief Sets the value of FirstName_Optional and also sets FirstName_IsSet to true */
    void SetFirstName(FString NewValue) { FirstName_Optional = NewValue; FirstName_IsSet = true; }
     /** @brief Clears the value of FirstName_Optional and sets FirstName_IsSet to false */
    void ClearFirstName() { FirstName_IsSet = false; }

    /** @brief Last name for this account */
    FString LastName_Optional{  };
    /** @brief true if LastName_Optional has been set to a value */
    bool LastName_IsSet{ false };
    /** @brief Gets the value of LastName_Optional, regardless of it having been set */
    FString& GetLastName() { return LastName_Optional; }
    /** @brief Gets the value of LastName_Optional, regardless of it having been set */
    const FString& GetLastName() const { return LastName_Optional; }
    /** @brief Gets the value of LastName_Optional, if it has been set, otherwise it returns DefaultValue */
    const FString& GetLastName(const FString& DefaultValue) const { if (LastName_IsSet) return LastName_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of LastName_Optional and returns true if it has been set, otherwise returns false */
    bool GetLastName(FString& OutValue) const { if (LastName_IsSet) OutValue = LastName_Optional; return LastName_IsSet; }
    /** @brief Returns a pointer to LastName_Optional, if it has been set, otherwise returns nullptr */
    FString* GetLastNameOrNull() { if (LastName_IsSet) return &LastName_Optional; return nullptr; }
    /** @brief Returns a pointer to LastName_Optional, if it has been set, otherwise returns nullptr */
    const FString* GetLastNameOrNull() const { if (LastName_IsSet) return &LastName_Optional; return nullptr; }
    /** @brief Sets the value of LastName_Optional and also sets LastName_IsSet to true */
    void SetLastName(FString NewValue) { LastName_Optional = NewValue; LastName_IsSet = true; }
     /** @brief Clears the value of LastName_Optional and sets LastName_IsSet to false */
    void ClearLastName() { LastName_IsSet = false; }

    /** @brief Nickname for this account */
    FString Nickname_Optional{  };
    /** @brief true if Nickname_Optional has been set to a value */
    bool Nickname_IsSet{ false };
    /** @brief Gets the value of Nickname_Optional, regardless of it having been set */
    FString& GetNickname() { return Nickname_Optional; }
    /** @brief Gets the value of Nickname_Optional, regardless of it having been set */
    const FString& GetNickname() const { return Nickname_Optional; }
    /** @brief Gets the value of Nickname_Optional, if it has been set, otherwise it returns DefaultValue */
    const FString& GetNickname(const FString& DefaultValue) const { if (Nickname_IsSet) return Nickname_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of Nickname_Optional and returns true if it has been set, otherwise returns false */
    bool GetNickname(FString& OutValue) const { if (Nickname_IsSet) OutValue = Nickname_Optional; return Nickname_IsSet; }
    /** @brief Returns a pointer to Nickname_Optional, if it has been set, otherwise returns nullptr */
    FString* GetNicknameOrNull() { if (Nickname_IsSet) return &Nickname_Optional; return nullptr; }
    /** @brief Returns a pointer to Nickname_Optional, if it has been set, otherwise returns nullptr */
    const FString* GetNicknameOrNull() const { if (Nickname_IsSet) return &Nickname_Optional; return nullptr; }
    /** @brief Sets the value of Nickname_Optional and also sets Nickname_IsSet to true */
    void SetNickname(FString NewValue) { Nickname_Optional = NewValue; Nickname_IsSet = true; }
     /** @brief Clears the value of Nickname_Optional and sets Nickname_IsSet to false */
    void ClearNickname() { Nickname_IsSet = false; }

    /** @brief Password for this account */
    FString Password_Optional{  };
    /** @brief true if Password_Optional has been set to a value */
    bool Password_IsSet{ false };
    /** @brief Gets the value of Password_Optional, regardless of it having been set */
    FString& GetPassword() { return Password_Optional; }
    /** @brief Gets the value of Password_Optional, regardless of it having been set */
    const FString& GetPassword() const { return Password_Optional; }
    /** @brief Gets the value of Password_Optional, if it has been set, otherwise it returns DefaultValue */
    const FString& GetPassword(const FString& DefaultValue) const { if (Password_IsSet) return Password_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of Password_Optional and returns true if it has been set, otherwise returns false */
    bool GetPassword(FString& OutValue) const { if (Password_IsSet) OutValue = Password_Optional; return Password_IsSet; }
    /** @brief Returns a pointer to Password_Optional, if it has been set, otherwise returns nullptr */
    FString* GetPasswordOrNull() { if (Password_IsSet) return &Password_Optional; return nullptr; }
    /** @brief Returns a pointer to Password_Optional, if it has been set, otherwise returns nullptr */
    const FString* GetPasswordOrNull() const { if (Password_IsSet) return &Password_Optional; return nullptr; }
    /** @brief Sets the value of Password_Optional and also sets Password_IsSet to true */
    void SetPassword(FString NewValue) { Password_Optional = NewValue; Password_IsSet = true; }
     /** @brief Clears the value of Password_Optional and sets Password_IsSet to false */
    void ClearPassword() { Password_IsSet = false; }
};

/** @} */
